{
  "categories": "solidity,wagmi,reactjs,ethersjs,javascript,typescript,hardhat,farcaster sdk,defi,celo,self-protocol sdk,cryptocurrency",
  "difficulties": "easy, medium, hard",
  "categoryData": [
    {
      "category": "solidity",
      "id": "0",
      "description": "Test your knowledge across various topics in Solidity. You will get questions that are tailored to test your understanding of the subject",
      "levels": [
        {
          "difficulty": "easy",
          "id": "0",
          "questions": [
            { "id": "0", "explanation": "", "question": "What is Solidity primarily used for?", "options": ["Writing mobile applications","Developing smart contracts on Ethereum","Building web servers","Creating front-end web apps"], "answer": "Developing smart contracts on Ethereum", "userAnswer": "", "hash": "ef13e7ba1ebeeef2d04ba7a84a21842a878614427a38fb33dcbe2ab7603071d6"},
            { "id": "1", "explanation": "", "question": "Which keyword is used to define a function in Solidity?", "options": ["def","function","func","fn"], "answer": "function", "userAnswer": "", "hash": "eddd3337bbf5afd57373817936a48a6a1b8ce26382367336eb4f20921e791aea"},
            { "id": "2", "explanation": "", "question": "Which data type is used to store Ether in a smart contract?", "options": ["ether","float","uint","decimal"], "answer": "uint", "userAnswer": "", "hash": "e503242e17ddc18adb9cefdea2b143a035d93ec50cbd515a43b50a0a0ced75c0"},
            { "id": "3", "explanation": "", "question": "Which visibility modifier allows access only within the same contract?", "options": ["public","external","internal","private"], "answer": "private", "userAnswer": "", "hash": "6ec3efffd5719990b0697d450b805b253a420c706cb98c5c781fa68f5380af1c"},
            { "id": "4", "explanation": "", "question": "What is the default visibility of functions in Solidity if not specified?", "options": ["internal","public","external","private"], "answer": "public", "userAnswer": "", "hash": "d3058fca6b964f469181360ddd660f45bdbba78f7d7d84f4799f51fa882ca6a8"},
            { "id": "5", "explanation": "", "question": "Which Solidity version pragma is considered best practice?", "options": ["pragma solidity latest;","pragma solidity ^0.8.0;","pragma solidity 0.4.0;","pragma solidity =0.6.0;"], "answer": "pragma solidity ^0.8.0;", "userAnswer": "", "hash": "9b55af22cdc54aff8b9aff0063af7d8c771146305d8660e00d1fa31c0445099c"},
            { "id": "6", "explanation": "", "question": "Which of the following is used to store a group of key-value pairs?", "options": ["array","struct","mapping","tuple"], "answer": "mapping", "userAnswer": "", "hash": "800861778b87794cdb7c3cb236848f60a473d3f78a526b2323dec48b7561e11d"},
            { "id": "7", "explanation": "", "question": "Which global variable returns the address of the sender?", "options": ["msg.address","block.sender","tx.origin","msg.sender"], "answer": "msg.sender", "userAnswer": "", "hash": "bcd91cd877aea50823933b54d23be435e79f2ce107fa0a97facc3355cbabd262"},
            { "id": "7", "explanation": "", "question": "What does the `payable` keyword indicate in a function?", "options": ["The function returns Ether","The function accepts Ether","The function is expensive","The function costs gas"], "answer": "The function accepts Ether", "userAnswer": "", "hash": "05198c6476de2089b31df32b7986e2f31f522080f68335ab3798bb3f11df1a26"},
            { "id": "8", "explanation": "", "question": "Which of the following types is used for boolean logic?", "options": ["bit","bool","boolean","flag"], "answer": "bool", "userAnswer": "", "hash": "af62c946176496fceb1d28e860ffd757c529fb67b9518cbfe88e1a5170f5e745"},
            { "id": "9", "explanation": "", "question": "What is Solidity primarily used for?","options": ["Frontend development","Writing smart contracts on Ethereum","Backend development in Node.js","Machine learning models"],"answer": 1,"userAnswer": "","hash": "ef13e7ba1ebeeef2d04ba7a84a21842a878614427a38fb33dcbe2ab7603071d6"},
            { "id": "10", "explanation": "", "question": "Which data type is used for true/false values in Solidity?","options": ["boolean","bool","int","bit"],"answer": 1,"userAnswer": "","hash": "1d5bab9d69f6a43b28334f3d792060e58ed69038456c9d9f482f76191ccdc7a1"},
            { "id": "11", "explanation": "", "question": "Which keyword is used to define a function in Solidity?","options": ["def","func","function","method"],"answer": 2,"userAnswer": "","hash": "eddd3337bbf5afd57373817936a48a6a1b8ce26382367336eb4f20921e791aea"}
          ]
        },
        {
          "difficulty": "medium",
          "id": "1",
          "questions":  [
            { "id": "0", "explanation": "", "question": "What is the visibility of a function that can be accessed only from within the same contract?","options": ["public","internal","private","external"],"answer": 2,"userAnswer": "","hash": "8eb1200a1a67c3227461932d16aa4bdc018dc65fd6ec4ebcd5c970e4a37ce38c"},
            { "id": "1", "explanation": "", "question": "Which version pragma restricts the Solidity compiler to a specific version range?","options": ["pragma solidity ^0.8.0;","pragma version 0.8.0;","require solidity >=0.8.0;","version pragma 0.8.0;"],"answer": 0,"userAnswer": "","hash": "aa9d896591018bf2a370013add24cf1b8be3a66a44be6a81d1bc4d0d18647524"},
            { "id": "2", "explanation": "", "question": "Which type is used to store Ether in a contract?","options": ["balanceOf","money","payable","address"],"answer": 2,"userAnswer": "","hash": "fe26c5dbee81885150ca74c72014b7ac0a6f558c942f3b0cb31c1956ab4ba791"}
          ]
        },
        {
          "difficulty": "hard",
          "id": "2",
          "questions": [
            { "id": "0", "explanation": "", "question": "What is the purpose of the `fallback()` function in Solidity?","options": ["To handle errors","To initialize the contract","To receive Ether when no other function matches","To destroy the contract"],"answer": 2,"userAnswer": "","hash": "08db5ed6eb988c354c753ce6752d719246d8c77aa872f15486aaad05cdbddcb1"},
            { "id": "1", "explanation": "", "question": "Which of the following protects against re-entrancy attacks?","options": ["using assert instead of require","making external calls before state changes","the checks-effects-interactions pattern","using public instead of external functions"],"answer": 2,"userAnswer": "","hash": "0806ea32f75580bf3c21a1a004aedf747eaf50a12577658ec759ab77497e0efb"},
            { "id": "2", "explanation": "", "question": "Which interface must a contract implement to receive ERC-721 tokens?","options": ["IERC721","IERC721Receiver","IERC20","IERC1155"],"answer": 1,"userAnswer": "","hash": "56f4d30519d5bd02e62b5de419a173bafd0a9ea697165926fcf7c97e4a199d51"}
          ]
        }
      ]
    },
    {
      "category": "web3js",
      "id": "1",
      "description": "Test your knowledge across various topics in Web3JS. You will get questions that are tailored to test your understanding of the subject",
      "levels": [
        {
          "difficulty": "easy",
          "id": "3",
          "questions": [
             { "id": "0", "explanation": "", "question": "What is Web3.js?", "options": ["A JavaScript library for interacting with the Ethereum blockchain.","A new version of the World Wide Web.","A backend framework for Node.js.","A CSS preprocessor."], "answer": "A JavaScript library for interacting with the Ethereum blockchain.", "userAnswer": "", "hash": "a1b2c3d4e5f60708"},
             { "id": "1", "explanation": "", "question": "Which object in Web3.js is used to interact with smart contracts?", "options": ["web3.eth.Contract","web3.eth.sendTransaction","web3.utils","web3.eth.accounts"], "answer": "web3.eth.Contract", "userAnswer": "", "hash": "b2c3d4e5f60708a1"},
             { "id": "2", "explanation": "", "question": "How do you get the latest block number using Web3.js?", "options": ["web3.eth.getBlockNumber()","web3.eth.getLatestBlock()","web3.eth.latestBlock()","web3.eth.blockNumber()"], "answer": "web3.eth.getBlockNumber()", "userAnswer": "", "hash": "c3d4e5f60708a1b2"},
             { "id": "3", "explanation": "", "question": "What is the purpose of a provider in Web3.js?", "options": ["To connect to an Ethereum node.","To manage user accounts.","To compile Solidity code.","To deploy smart contracts."], "answer": "To connect to an Ethereum node.", "userAnswer": "", "hash": "d4e5f60708a1b2c3"},
             { "id": "4", "explanation": "", "question": "Which utility function in Web3.js is used to convert Ether to Wei?", "options": ["web3.utils.toWei()","web3.utils.fromWei()","web3.utils.convertEther()","web3.utils.toEther()"], "answer": "web3.utils.toWei()", "userAnswer": "", "hash": "e5f60708a1b2c3d4"},
             { "id": "5", "explanation": "", "question": "How can you get the balance of an Ethereum account using Web3.js?", "options": ["web3.eth.getBalance(address)","web3.eth.accountBalance(address)","web3.eth.getAccount(address)","web3.eth.balance(address)"], "answer": "web3.eth.getBalance(address)", "userAnswer": "", "hash": "f60708a1b2c3d4e5"},
             { "id": "6", "explanation": "", "question": "What does ABI stand for in the context of Ethereum smart contracts?", "options": ["Application Binary Interface","Application Blockchain Interface","Account Balance Information","Advanced Blockchain Integration"], "answer": "Application Binary Interface", "userAnswer": "", "hash": "0708a1b2c3d4e5f6"},
             { "id": "7", "explanation": "", "question": "Which Web3.js module is used for encoding and decoding ABI data?", "options": ["web3.eth.abi","web3.utils.abi","web3.contract.abi","web3.abi"], "answer": "web3.eth.abi", "userAnswer": "", "hash": "08a1b2c3d4e5f607"},
             { "id": "8", "explanation": "", "question": "How do you instantiate a new Web3 object?", "options": ["const web3 = new Web3(provider);","const web3 = Web3.create(provider);","const web3 = new Web3.eth(provider);","const web3 = Web3(provider);"], "answer": "const web3 = new Web3(provider);", "userAnswer": "", "hash": "a1b2c3d4e5f60709"},
             { "id": "9", "explanation": "", "question": "What is the default unit for gas price in Web3.js?", "options": ["Wei","Gwei","Ether","Finney"], "answer": "Wei", "userAnswer": "", "hash": "b2c3d4e5f60708a2"},
             { "id": "10", "explanation": "", "question": "Which object in Web3.js is used to interact with an Ethereum node?", "options": ["web3.eth" ,"web3.utils" ,"web3.shh" ,"web3.bzz" ], "answer": "web3.eth", "userAnswer": "", "hash": "c0746b102c918a902f5a8c2f1f5f2d4e"},
             { "id": "11", "explanation": "", "question": "How do you connect to an Ethereum node using Web3.js?", "options": ["new Web3(Web3.givenProvider)" ,"Web3.connect('http://localhost:8545')" ,"Web3.setProvider('websocket')" ,"new Web3.Provider()" ], "answer": "new Web3(Web3.givenProvider)", "userAnswer": "", "hash": "b2e2d9a6c7f8e1a0b3c4d5e6f7a8b9c0"},
             { "id": "12", "explanation": "", "question": "What is the primary purpose of Web3.js?", "options": ["To create smart contracts" ,"To interact with the Ethereum blockchain" ,"To develop front-end web applications" ,"To mine cryptocurrencies" ], "answer": "To interact with the Ethereum blockchain", "userAnswer": "", "hash": "a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6"},
             { "id": "13", "explanation": "", "question": "Which method is used to get the balance of an Ethereum account?", "options": ["web3.eth.getBalance()" ,"web3.eth.getAccounts()" ,"web3.utils.toWei()" ,"web3.utils.fromWei()" ], "answer": "web3.eth.getBalance()", "userAnswer": "", "hash": "d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0"},
             { "id": "14", "explanation": "", "question": "What unit does `web3.eth.getBalance()` return by default?", "options": ["Ether" ,"Wei" ,"Gwei" ,"Finney" ], "answer": "Wei", "userAnswer": "", "hash": "e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1"},
             { "id": "15", "explanation": "", "question": "How do you convert Ether to Wei in Web3.js?", "options": ["web3.utils.toWei(amount, 'ether')" ,"web3.utils.fromWei(amount, 'ether')" ,"web3.toWei(amount)" ,"web3.fromEther(amount)" ], "answer": "web3.utils.toWei(amount, 'ether')", "userAnswer": "", "hash": "f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2"},
             { "id": "16", "explanation": "", "question": "Which provider is commonly used in browsers when Metamask is installed?", "options": ["HttpProvider" ,"IpcProvider" ,"WebsocketProvider" ,"Web3.givenProvider" ], "answer": "Web3.givenProvider", "userAnswer": "", "hash": "a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3"},
             { "id": "17", "explanation": "", "question": "What is an ABI in the context of Web3.js?", "options": ["Application Binary Interface" ,"Asynchronous Blockchain Interaction" ,"Automated Bytecode Interpreter" ,"Advanced Blockchain Integration" ], "answer": "Application Binary Interface", "userAnswer": "", "hash": "b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4"},
             { "id": "18", "explanation": "", "question": "How do you instantiate a smart contract in Web3.js?", "options": ["new web3.Contract(abi, address)" ,"web3.eth.contract(abi, address)" ,"new web3.utils.Contract(abi, address)" ,"web3.Contract.create(abi, address)" ], "answer": "new web3.Contract(abi, address)", "userAnswer": "", "hash": "c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5"},
             { "id": "19", "explanation": "", "question": "Which method is used to call a read-only function of a smart contract?", "options": ["contract.methods.myMethod().send()" ,"contract.methods.myMethod().call()" ,"contract.methods.myMethod().estimateGas()" ,"contract.methods.myMethod().on()" ], "answer": "contract.methods.myMethod().call()", "userAnswer": "", "hash": "d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6"}
          ]
        },
        {
          "difficulty": "medium",
          "id": "4",
          "questions": [
            { "id": "0", "explanation": "", "question": "What is the visibility of a function that can be accessed only from within the same contract?","options": ["public","internal","private","external"],"answer": 2,"userAnswer": "","hash": "8eb1200a1a67c3227461932d16aa4bdc018dc65fd6ec4ebcd5c970e4a37ce38c"},{"question": "Which version pragma restricts the Solidity compiler to a specific version range?","options": ["pragma solidity ^0.8.0;","pragma version 0.8.0;","require solidity >=0.8.0;","version pragma 0.8.0;"],"answer": 0,"userAnswer": "","hash": "aa9d896591018bf2a370013add24cf1b8be3a66a44be6a81d1bc4d0d18647524"},{"question": "Which type is used to store Ether in a contract?","options": ["balanceOf","money","payable","address"],"answer": 2,"userAnswer": "","hash": "fe26c5dbee81885150ca74c72014b7ac0a6f558c942f3b0cb31c1956ab4ba791"},
            { "id": "1", "explanation": "", "question": "Which function is automatically called when Ether is sent to a contract without any data?", "options": ["receive()","fallback()","constructor()","payable()"], "answer": "receive()", "userAnswer": "", "hash": "edf0e7c7bcbe9a79263a00e9a9fc56b6fa34e3b7382649c4c1671e7a823893dc"},
            { "id": "2", "explanation": "", "question": "How does `require` differ from `assert` in Solidity?", "options": ["require is used for checking for internal errors","assert is used to validate user inputs","require provides custom error messages and refunds gas","assert returns an error code"], "answer": "require provides custom error messages and refunds gas", "userAnswer": "", "hash": "aa2be4e6d8e1679627adcf7fc7646b3e2cecf5a97d3022958ec8e144d23509f8"},
            { "id": "3", "explanation": "", "question": "Which type of Solidity function can receive Ether?", "options": ["pure","view","constructor","payable"], "answer": "payable", "userAnswer": "", "hash": "168e61146251c15a0e6c9987b3e84f3a603a2fc30c78d9989b344b2cbcf2c3d3"},
            { "id": "4", "explanation": "", "question": "What does the `memory` keyword specify in Solidity?", "options": ["Permanent storage in blockchain","Temporary data stored only during function execution","Data stored in client's memory","GPU memory"], "answer": "Temporary data stored only during function execution", "userAnswer": "", "hash": "1ac4bca9dbcdba62b3b6c8fc41749a83be0635b2aa8c99a4979a6e1fef6cefc8"},
            { "id": "5", "explanation": "", "question": "Which Solidity feature is used to restrict access to certain functions?", "options": ["Constructors","Modifiers","Fallback functions","Events"], "answer": "Modifiers", "userAnswer": "", "hash": "3fbd3b6ef7b5e0edc1df8de4b49900205e1024be09a421bf5c251d97235c1fd2"},
            { "id": "6", "explanation": "", "question": "Which built-in variable in Solidity holds the address of the transaction sender?", "options": ["tx.origin","block.sender","msg.sender","this.sender"], "answer": "msg.sender", "userAnswer": "", "hash": "1011d6d5e142172bcd2fc1f72f38c3ae7b90ab969b157ea5140e58f5fa5a58ac"},
            { "id": "6", "explanation": "", "question": "How do you correctly declare a public mapping from uint to address in Solidity?", "options": ["map(uint => address) users;","mapping(uint => address) public users;","dictionary<uint, address> users;","mapping => (uint => address) users;"], "answer": "mapping(uint => address) public users;", "userAnswer": "", "hash": "6212aa73187b10696e5f3e2cb92c03ff43103a91c34d0de444f065731ae50982"},
            { "id": "7", "explanation": "", "question": "What happens when a `revert()` is called inside a Solidity function?", "options": ["The transaction continues and logs an error","The contract is deleted","All state changes are undone and gas is refunded","Only that function exits"], "answer": "All state changes are undone and gas is refunded", "userAnswer": "", "hash": "2cbdf7b5a5f362b67b705b0f6ad5b0551be71593d033a7e3b0f4393292b207db"},
            { "id": "8", "explanation": "", "question": "What is the primary use of events in Solidity?", "options": ["They emit Ether","They allow contract inheritance","They log data on the blockchain","They store state"], "answer": "They log data on the blockchain", "userAnswer": "", "hash": "7e18c21c816d22e09f0e2344f49a8491c44a748772213f78df2e75c26b11615b"},
            { "id": "9", "explanation": "", "question": "What is `msg.value` used for in Solidity?", "options": ["The total supply of Ether","The amount of gas used by the transaction","The amount of Ether sent with a transaction","The time the transaction was created"], "answer": "The amount of Ether sent with a transaction", "userAnswer": "", "hash": "157c8d4b914dc6ae2ff4fc98d205b22365012c005c53fce030029469bf4654ce"},
            { "id": "10", "explanation": "", "question": "What is the difference between `call()` and `send()` when interacting with a smart contract function in Web3.js?", "options": ["`call()` is for read-only functions and does not create a transaction, while `send()` is for write functions and creates a transaction.","`call()` sends a transaction and returns the transaction hash, while `send()` executes the function locally.","`call()` is used for deploying contracts, and `send()` is for interacting with them.","There is no difference; they can be used interchangeably."], "answer": "`call()` is for read-only functions and does not create a transaction, while `send()` is for write functions and creates a transaction.", "userAnswer": "", "hash": "c3d4e5f60708a1b3"},
            { "id": "11", "explanation": "", "question": "How can you subscribe to real-time events from a smart contract using Web3.js?", "options": ["Using the `contract.events.eventName()` method.","By repeatedly calling a function with `setInterval`.","Using `web3.eth.subscribe('logs', ...)` and filtering by contract address.","Both a and c are valid ways."], "answer": "Both a and c are valid ways.", "userAnswer": "", "hash": "d4e5f60708a1b2c4"},
            { "id": "12", "explanation": "", "question": "What is the purpose of the `BatchRequest` object in Web3.js?", "options": ["To batch multiple JSON-RPC requests into a single HTTP request.","To send a batch of transactions to the network.","To deploy multiple contracts at once.","To get a batch of historical blocks."], "answer": "To batch multiple JSON-RPC requests into a single HTTP request.", "userAnswer": "", "hash": "e5f60708a1b2c3d5"},
            { "id": "13", "explanation": "", "question": "How do you handle big numbers in Web3.js to avoid precision issues?", "options": ["By using the `BN.js` library that is integrated with Web3.js.","By converting all numbers to strings.","JavaScript's native `Number` type is sufficient.","By using the `Math.round()` function."], "answer": "By using the `BN.js` library that is integrated with Web3.js.", "userAnswer": "", "hash": "f60708a1b2c3d4e6"},
            { "id": "14", "explanation": "", "question": "What is the role of `web3.eth.accounts.signTransaction()`?", "options": ["To sign a transaction offline with a private key before sending it to the network.","To create a new Ethereum account.","To verify the signature of a transaction.","To send a signed transaction to the network."], "answer": "To sign a transaction offline with a private key before sending it to the network.", "userAnswer": "", "hash": "0708a1b2c3d4e5f7"},
            { "id": "15", "explanation": "", "question": "What is a 'promiEvent' in Web3.js?", "options": ["A combination of a Promise and an event emitter, used for transaction methods.","An event that is promised to happen in the future.","A special type of smart contract event.","A way to handle multiple promises at once."], "answer": "A combination of a Promise and an event emitter, used for transaction methods.", "userAnswer": "", "hash": "08a1b2c3d4e5f608"},
            { "id": "16", "explanation": "", "question": "How can you decode the input data of a transaction using Web3.js?", "options": ["Using `web3.eth.abi.decodeParameters()` with the ABI and input data.","The input data is always human-readable.","Using `web3.utils.hexToAscii()`.","Using `contract.methods.myMethod()._method.input`."], "answer": "Using `web3.eth.abi.decodeParameters()` with the ABI and input data.", "userAnswer": "", "hash": "a1b2c3d4e5f60710"},
            { "id": "17", "explanation": "", "question": "What is the purpose of the `defaultBlock` parameter in Web3.js calls?", "options": ["To specify the block number to use for the call, e.g., 'latest', 'pending', or a specific block number.","To set the default block for all subsequent calls.","To define the genesis block of the chain.","To limit the number of blocks to be queried."], "answer": "To specify the block number to use for the call, e.g., 'latest', 'pending', or a specific block number.", "userAnswer": "", "hash": "b2c3d4e5f60708a3"},
            { "id": "18", "explanation": "", "question": "How do you estimate the gas required for a transaction using Web3.js?", "options": ["By calling the `estimateGas()` method on a transaction object.","Gas is always a fixed value.","By using `web3.eth.getGasPrice()`.","The gas is estimated automatically by the provider."], "answer": "By calling the `estimateGas()` method on a transaction object.", "userAnswer": "", "hash": "c3d4e5f60708a1b4"},
            { "id": "19", "explanation": "", "question": "What does `web3.eth.ens` do?", "options": ["It provides an interface for interacting with the Ethereum Name Service (ENS).","It ensures the security of the Ethereum connection.","It is used for sending encrypted messages.","It is a module for managing ERC-20 tokens."], "answer": "It provides an interface for interacting with the Ethereum Name Service (ENS).", "userAnswer": "", "hash": "d4e5f60708a1b2c5"},
            { "id": "20", "explanation": "", "question": "Explain the difference between `send()` and `call()` when interacting with smart contract methods in Web3.js.", "options": ["`send()` is for reading data, `call()` is for writing data." ,"`send()` modifies blockchain state and requires gas, `call()` reads state and is free." ,"`send()` is synchronous, `call()` is asynchronous." ,"There is no functional difference; they are interchangeable." ], "answer": "`send()` modifies blockchain state and requires gas, `call()` reads state and is free.", "userAnswer": "", "hash": "e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7"},
            { "id": "21", "explanation": "", "question": "How do you handle events emitted by smart contracts using Web3.js?", "options": ["contract.events.myEvent.on('data', callback)" ,"contract.getEvents('myEvent')" ,"contract.listenFor('myEvent', callback)" ,"web3.eth.filter('myEvent', callback)" ], "answer": "contract.events.myEvent.on('data', callback)", "userAnswer": "", "hash": "f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8"},
            { "id": "22", "explanation": "", "question": "What is the purpose of `web3.eth.accounts.signTransaction()`?", "options": ["To send a signed transaction to the network." ,"To sign arbitrary data with an account's private key." ,"To create a raw, signed transaction object without sending it." ,"To decrypt a transaction payload." ], "answer": "To create a raw, signed transaction object without sending it.", "userAnswer": "", "hash": "a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9"},
            { "id": "23", "explanation": "", "question": "When might you use `web3.BatchRequest`?", "options": ["To send a single, complex transaction." ,"To execute multiple RPC calls in a single request for efficiency." ,"To sign multiple transactions at once." ,"To revert a series of blockchain transactions." ], "answer": "To execute multiple RPC calls in a single request for efficiency.", "userAnswer": "", "hash": "b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0"},
            { "id": "24", "explanation": "", "question": "What is the significance of the `transactionHash` property in a Web3.js `send()` receipt?", "options": ["It indicates the block number where the transaction was mined." ,"It is a unique identifier for the transaction on the blockchain." ,"It represents the amount of gas used by the transaction." ,"It is the address of the recipient of the transaction." ], "answer": "It is a unique identifier for the transaction on the blockchain.", "userAnswer": "", "hash": "c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1"},
            { "id": "25", "explanation": "", "question": "How do you estimate the gas required for a transaction using Web3.js?", "options": ["web3.eth.sendTransaction({}).estimateGas()" ,"web3.eth.estimateGas(transactionObject)" ,"contract.methods.myMethod().estimateGas(options)" ,"web3.utils.getGasPrice()" ], "answer": "contract.methods.myMethod().estimateGas(options)", "userAnswer": "", "hash": "d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2"},
            { "id": "26", "explanation": "", "question": "Which Web3.js utility function is best for checking if an address is valid?", "options": ["web3.utils.isAddress()" ,"web3.utils.checkAddress()" ,"web3.eth.isValidAddress()" ,"web3.validateAddress()" ], "answer": "web3.utils.isAddress()", "userAnswer": "", "hash": "e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3"},
            { "id": "27", "explanation": "", "question": "What does `web3.eth.subscribe('newBlockHeaders', callback)` do?", "options": ["It subscribes to all new transactions." ,"It subscribes to new pending transactions." ,"It subscribes to notifications for new block headers as they are mined." ,"It subscribes to contract events." ], "answer": "It subscribes to notifications for new block headers as they are mined.", "userAnswer": "", "hash": "f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4"},
            { "id": "28", "explanation": "", "question": "Describe the purpose of `web3.eth.Contract.setProvider()`.", "options": ["To set the default provider for all `web3.eth` calls." ,"To change the provider for a specific contract instance." ,"To get the current provider being used by a contract." ,"To disconnect the contract from its current provider." ], "answer": "To change the provider for a specific contract instance.", "userAnswer": "", "hash": "a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5"},
            { "id": "29", "explanation": "", "question": "What is the recommended way to handle private keys in a production Web3.js application?", "options": ["Hardcode them directly in the frontend JavaScript." ,"Store them in environment variables accessible by the frontend." ,"Use a secure backend service (like a wallet service) to sign transactions." ,"Encrypt them in local storage." ], "answer": "Use a secure backend service (like a wallet service) to sign transactions.", "userAnswer": "", "hash": "b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6"}
          ]
        },
        {
          "difficulty": "hard",
          "id": "5",
          "questions": [
            { "id": "0", "explanation": "", "question": "What is a potential vulnerability when using `tx.origin` for authentication in smart contracts?", "options": ["It allows anyone to bypass modifiers","It can be spoofed by front-end frameworks","It can be exploited by phishing contracts","It makes contracts non-upgradable"], "answer": "It can be exploited by phishing contracts", "userAnswer": "", "hash": "3fd7b2c985f6f3f4b41b77f9a018582a7e9cbcb5202556ae832fb2cf8bc452e8"},
            { "id": "1", "explanation": "", "question": "What Solidity feature helps in implementing upgradeable smart contracts?", "options": ["Proxy pattern","Fallback constructor","Modifier overloading","Delegate call checks"], "answer": "Proxy pattern", "userAnswer": "", "hash": "00ed75989ae8f2c6b6461e374ff4626a86977f94b9d2ff3ffcf2e4377fdc7688"},
            { "id": "2", "explanation": "", "question": "Why is `delegatecall` dangerous if misused?", "options": ["It consumes excessive gas","It permanently locks the contract","It runs code in the context of the caller, risking storage overwrite","It deletes the contract on failure"], "answer": "It runs code in the context of the caller, risking storage overwrite", "userAnswer": "", "hash": "db59cfb155b2f02b66db278f43a5b0bdb78fa5cd27ae9fd15d5bd0ab1f3304e3"},
            { "id": "3", "explanation": "", "question": "Which design pattern is recommended for reducing contract size and separating logic?", "options": ["Diamond pattern","Factory pattern","Inheritance Tree","Library pattern"], "answer": "Library pattern", "userAnswer": "", "hash": "1b6c5b74a1070b93e73e121dc7d261197d8df901e21df4f9d253601b2066d295"},
            { "id": "4", "explanation": "", "question": "What does EVM stand for in the context of Solidity?", "options": ["Ethereum Virtual Machine","Ethereum Value Management","External Value Module","Ethereum Verified Map"], "answer": "Ethereum Virtual Machine", "userAnswer": "", "hash": "9c7ed18b6a87dfffb51929bfa83be15dd14777c55e0e84fdd8a2e5858c2c6b0d"},
            { "id": "5", "explanation": "", "question": "What type of attack can occur when a contract depends on the block timestamp for logic?", "options": ["Gas griefing","Timestamp manipulation","Reentrancy","Race condition"], "answer": "Timestamp manipulation", "userAnswer": "", "hash": "2573cd5bc53c7758ac6227ac5b2b74b7c83f7cb781f9f0a0fa2391d0be2b43cc"},
            { "id": "6", "explanation": "", "question": "Which function is called when a contract receives Ether and no other function matches?", "options": ["fallback()","receive()","payable()","transfer()"], "answer": "fallback()", "userAnswer": "", "hash": "8fe4b496808e826bc9678e4823dd0f4f9816d3128a5bba6b112d7557d44ecfd7"},
            { "id": "7", "explanation": "", "question": "Which gas optimization technique can help reduce contract deployment size?", "options": ["Use of internal functions","Avoiding memory keywords","Using assembly and libraries","Making all variables public"], "answer": "Using assembly and libraries", "userAnswer": "", "hash": "f5cdcf89a75988ff4a3b94c9e82395d23e1df0f4e3b7dd63a1495b55d190f7cd"},
            { "id": "8", "explanation": "", "question": "Why is reentrancy considered a critical vulnerability in Solidity?", "options": ["It can cause high gas usage","It allows external contracts to control execution flow","It freezes the contract permanently","It leaks storage variables"], "answer": "It allows external contracts to control execution flow", "userAnswer": "", "hash": "9bce96b5f5c0a32bc83cb43e57b8b34513b3e446e47221b6ce99b0210ad7b45b"},
            { "id": "9", "explanation": "", "question": "What is the best practice for preventing overflow bugs in Solidity 0.8.x?", "options": ["Using SafeMath library","Using signed integers","No action needed; checked arithmetic is default","Restricting access with modifiers"], "answer": "No action needed; checked arithmetic is default", "userAnswer": "", "hash": "f4c3c9cb7c6d4017fc6c5d216f113dc05b79fddc25077b07a661f67a94c94a76"},
            { "id": "10", "explanation": "", "question": "How would you listen for pending transactions on the Ethereum network using Web3.js?", "options": ["web3.eth.subscribe('pendingTransactions', callback)","web3.eth.getPendingTransactions()","web3.eth.filter('pending')","This is not possible with Web3.js."], "answer": "web3.eth.subscribe('pendingTransactions', callback)", "userAnswer": "", "hash": "e5f60708a1b2c3d6"},
            { "id": "11", "explanation": "", "question": "What is the purpose of the `resolving` property in a Web3.js contract instance?", "options": ["It's a promise that resolves with the contract's deployed address.","It's a boolean indicating if the contract's events are being resolved.","It's a function to resolve ENS names for the contract.","There is no such property."], "answer": "It's a promise that resolves with the contract's deployed address.", "userAnswer": "", "hash": "f60708a1b2c3d4e7"},
            { "id": "12", "explanation": "", "question": "How can you use Web3.js to interact with a contract on a private Ethereum network?", "options": ["By setting the provider to the private network's RPC endpoint.","Web3.js can only connect to the Ethereum mainnet.","By using a special version of Web3.js for private networks.","By specifying the network ID when creating the Web3 instance."], "answer": "By setting the provider to the private network's RPC endpoint.", "userAnswer": "", "hash": "0708a1b2c3d4e5f8"},
            { "id": "13", "explanation": "", "question": "What is the role of `web3.eth.personal`?", "options": ["To interact with accounts in a node's keystore, including signing data and transactions.","To manage personal user profiles on the blockchain.","To send private transactions.","To create personalized smart contracts."], "answer": "To interact with accounts in a node's keystore, including signing data and transactions.", "userAnswer": "", "hash": "08a1b2c3d4e5f609"},
            { "id": "14", "explanation": "", "question": "How do you handle contract deployment with constructor arguments in Web3.js?", "options": ["By passing the arguments in the `arguments` array of the `deploy` method.","By appending the arguments to the bytecode.","By calling a separate `constructor` method after deployment.","Constructor arguments are not supported in Web3.js."], "answer": "By passing the arguments in the `arguments` array of the `deploy` method.", "userAnswer": "", "hash": "a1b2c3d4e5f60711"},
            { "id": "15", "explanation": "", "question": "What is the difference between `web3.eth.getPastLogs` and subscribing to events?", "options": ["`getPastLogs` retrieves historical logs, while subscribing listens for future logs in real-time.","`getPastLogs` is more efficient for getting a large number of logs.","Subscribing to events can also provide past events.","There is no significant difference."], "answer": "`getPastLogs` retrieves historical logs, while subscribing listens for future logs in real-time.", "userAnswer": "", "hash": "b2c3d4e5f60708a4"},
            { "id": "16", "explanation": "", "question": "How can you use Web3.js to sign an arbitrary message with an Ethereum account's private key?", "options": ["web3.eth.accounts.sign(message, privateKey)","web3.eth.sign(message, address)","web3.personal.sign(message, address, password)","Both a and c can be used depending on where the private key is stored."], "answer": "Both a and c can be used depending on where the private key is stored.", "userAnswer": "", "hash": "c3d4e5f60708a1b5"},
            { "id": "17", "explanation": "", "question": "What is the purpose of the `eth_call` JSON-RPC method, and how is it used in Web3.js?", "options": ["It executes a message call immediately without creating a transaction on the blockchain. It is used by `contract.methods.myMethod().call()`.","It is used to send a transaction to the network. It is used by `contract.methods.myMethod().send()`.","It is used to estimate the gas of a transaction. It is used by `contract.methods.myMethod().estimateGas()`.","It is used to get the balance of an account."], "answer": "It executes a message call immediately without creating a transaction on the blockchain. It is used by `contract.methods.myMethod().call()`.", "userAnswer": "", "hash": "d4e5f60708a1b2c6"},
            { "id": "18", "explanation": "", "question": "How can you decode the event logs from a transaction receipt using Web3.js?", "options": ["Using `web3.eth.abi.decodeLog()` with the event's ABI inputs and the log's topics and data.","The logs are already decoded in the transaction receipt.","Using `contract.getPastEvents()` with the transaction hash.","This requires a separate library, not possible with Web3.js alone."], "answer": "Using `web3.eth.abi.decodeLog()` with the event's ABI inputs and the log's topics and data.", "userAnswer": "", "hash": "e5f60708a1b2c3d7"},
            { "id": "19", "explanation": "", "question": "What is a 'shh' module in some older versions of Web3.js?", "options": ["A module for the Whisper protocol, used for secure messaging.","A module for hiding transaction details.","A module for silent error handling.","A module for sharding."], "answer": "A module for the Whisper protocol, used for secure messaging.", "userAnswer": "", "hash": "f60708a1b2c3d4e8"},
            { "id": "20", "explanation": "", "question": "How would you implement a custom gas price strategy using Web3.js for a transaction to ensure it gets mined quickly during network congestion?", "options": ["Set `gasPrice` to 0 to make it free." ,"Use `web3.eth.getGasPrice()` and then multiply it by a factor (e.g., 1.5) before setting it in the transaction." ,"Set `gasLimit` to a very high number." ,"Only use the default gas price provided by the node." ], "answer": "Use `web3.eth.getGasPrice()` and then multiply it by a factor (e.g., 1.5) before setting it in the transaction.", "userAnswer": "", "hash": "c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7"},
            { "id": "21", "explanation": "", "question": "Describe a scenario where `web3.eth.getPastEvents()` would be more suitable than `contract.events.myEvent.on('data', callback)`.", "options": ["When you need real-time updates for new events." ,"When you want to retrieve all events that have occurred since a specific block in the past." ,"When you are deploying a new contract." ,"When you are signing a transaction offline." ], "answer": "When you want to retrieve all events that have occurred since a specific block in the past.", "userAnswer": "", "hash": "d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8"},
            { "id": "22", "explanation": "", "question": "How can you ensure the integrity and authenticity of data signed off-chain using Web3.js's signing utilities before being submitted on-chain?", "options": ["Simply trust the sender's claim." ,"Use `web3.eth.accounts.recover()` with the original message and signature." ,"Hash the data on-chain and compare it." ,"Only accept data from whitelisted addresses." ], "answer": "Use `web3.eth.accounts.recover()` with the original message and signature.", "userAnswer": "", "hash": "e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9"},
            { "id": "23", "explanation": "", "question": "When deploying a smart contract with Web3.js, what is the role of `arguments` in `contract.deploy({data: 'bytecode', arguments: []})`?", "options": ["They are the constructor arguments for the smart contract." ,"They are the arguments for the `deploy` function itself." ,"They specify the gas limit for the deployment." ,"They define the network to which the contract will be deployed." ], "answer": "They are the constructor arguments for the smart contract.", "userAnswer": "", "hash": "f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0"},
            { "id": "24", "explanation": "", "question": "Explain a common pitfall when using `web3.utils.toBN()` for large numbers and why it's necessary in Web3.js.", "options": ["It's used for converting strings to numbers directly; the pitfall is loss of precision with floating points." ,"JavaScript's `Number` type cannot safely represent large integers (like Wei values), leading to precision errors; `toBN()` uses a BigNumber library to handle arbitrary precision integers." ,"It's for converting numbers to hexadecimal; the pitfall is incorrect formatting." ,"It's only needed for very small numbers, not large ones." ], "answer": "JavaScript's `Number` type cannot safely represent large integers (like Wei values), leading to precision errors; `toBN()` uses a BigNumber library to handle arbitrary precision integers.", "userAnswer": "", "hash": "a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1"},
            { "id": "25", "explanation": "", "question": "How would you implement a retry mechanism for Web3.js transactions that might fail due to temporary network issues or gas price fluctuations?", "options": ["Web3.js handles retries automatically." ,"Use a `setTimeout` to wait and resend the exact same transaction." ,"Implement a loop with exponential backoff and potentially increase the gas price on subsequent attempts." ,"Simply alert the user and let them retry manually." ], "answer": "Implement a loop with exponential backoff and potentially increase the gas price on subsequent attempts.", "userAnswer": "", "hash": "b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2"},
            { "id": "26", "explanation": "", "question": "What is the purpose of `web3.eth.getBlock('latest', true)` compared to `web3.eth.getBlock('latest', false)`?", "options": ["The first returns block header, the second returns full block." ,"The first returns a promise, the second returns a callback." ,"The `true` argument includes full transaction objects in the block, while `false` (or omitted) only includes transaction hashes." ,"The `true` argument is for archived nodes only." ], "answer": "The `true` argument includes full transaction objects in the block, while `false` (or omitted) only includes transaction hashes.", "userAnswer": "", "hash": "c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3"},
            { "id": "27", "explanation": "", "question": "In a dApp, why is it crucial to handle the `accountsChanged` and `chainChanged` events from `window.ethereum` when using Web3.js?", "options": ["To automatically send transactions without user confirmation." ,"To detect when the user switches their connected account or network in their wallet, requiring UI updates or re-initialization of Web3.js." ,"To prevent users from changing accounts or networks." ,"These events are only for internal Web3.js logging." ], "answer": "To detect when the user switches their connected account or network in their wallet, requiring UI updates or re-initialization of Web3.js.", "userAnswer": "", "hash": "d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4"},
            { "id": "28", "explanation": "", "question": "How can you use Web3.js to verify if a contract at a given address is indeed a specific ERC-20 token contract?", "options": ["Check its balance using `web3.eth.getBalance()`." ,"Attempt to call known ERC-20 functions (like `name()`, `symbol()`, `decimals()`, `totalSupply()`) and see if they return valid results." ,"There's a specific `web3.utils.isERC20()` function." ,"Inspect the contract's bytecode for a specific signature." ], "answer": "Attempt to call known ERC-20 functions (like `name()`, `symbol()`, `decimals()`, `totalSupply()`) and see if they return valid results.", "userAnswer": "", "hash": "e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5"},
            { "id": "29", "explanation": "", "question": "Explain the concept of 'nonce' in Ethereum transactions and how Web3.js handles it.", "options": ["Nonce is a random number for security; Web3.js generates it automatically." ,"Nonce is a transaction identifier; Web3.js uses the transaction hash as the nonce." ,"Nonce is a sequential transaction counter for an account, preventing replay attacks. Web3.js often fetches the current nonce using `web3.eth.getTransactionCount()` for new transactions." ,"Nonce refers to the gas limit; Web3.js automatically calculates it." ], "answer": "Nonce is a sequential transaction counter for an account, preventing replay attacks. Web3.js often fetches the current nonce using `web3.eth.getTransactionCount()` for new transactions.", "userAnswer": "", "hash": "f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6"}
          ]
        }
      ]
    },
    {
      "category": "wagmi",
      "id": "2",
      "description": "Test your knowledge across various topics in Wagmi. You will get questions that are tailored to test your understanding of the subject",
      "levels": [
        {
          "difficulty": "easy",
          "id": "6",
          "questions": [
            { "id": "0", "explanation": "", "question": "What does WAGMI stand for in web3 culture?","options": ["We're All Gaining Market Insights","We're All Gonna Make It","Web3 Architecture Governance Model Initiative","Winning All Games Made Internally"],"answer": 1,"userAnswer": "","hash": "9677189e54b1fe01d123f552ae6c8443c5b3e19a66a403f190b295582882c8c3"},
            { "id": "1", "explanation": "", "question": "What is the primary use of the WAGMI library?","options": ["Data visualization","Ethereum wallet connection and contract interaction","UI animations","Decentralized storage"],"answer": 1,"userAnswer": "","hash": "e1ca5b0f6bf1be7918f1f3e8e8c5561bd0833075fe23b7b49a7119075ff0ebfa"},
            { "id": "2", "explanation": "", "question": "Which framework is most commonly used with WAGMI?","options": ["Angular","Vue","React","Svelte"],"answer": 2,"userAnswer": "","hash": "786ff57b04f578ee603667ea6618051afbf42bbf7718668effd6c3b2cbfef0b4"},
            { "id": "3", "explanation": "", "question": "What is Wagmi?", "options": ["A collection of React Hooks for Ethereum.","A smart contract development framework.","A command-line interface for managing crypto wallets.","A layer-2 scaling solution for Ethereum."], "answer": "A collection of React Hooks for Ethereum.", "userAnswer": "", "hash": "0708a1b2c3d4e5f9"},
            { "id": "4", "explanation": "", "question": "Which hook in Wagmi is used to get the connected wallet's address?", "options": ["useAccount","useConnect","useBalance","useNetwork"], "answer": "useAccount", "userAnswer": "", "hash": "08a1b2c3d4e5f610"},
            { "id": "5", "explanation": "", "question": "How do you wrap your React application to use Wagmi?", "options": ["With the `<WagmiConfig>` component.","With the `<WagmiProvider>` component.","With the `<EthereumProvider>` component.","You don't need to wrap the application."], "answer": "With the `<WagmiConfig>` component.", "userAnswer": "", "hash": "a1b2c3d4e5f60712"},
            { "id": "6", "explanation": "", "question": "Which Wagmi hook would you use to fetch the balance of an ERC20 token?", "options": ["useToken","useBalance","useContractRead","Both b and c can be used."], "answer": "Both b and c can be used.", "userAnswer": "", "hash": "b2c3d4e5f60708a5"},
            { "id": "7", "explanation": "", "question": "What is the purpose of the `useConnect` hook in Wagmi?", "options": ["To initiate a connection to a user's wallet.","To check if a wallet is already connected.","To get the connected wallet's provider.","To disconnect from the wallet."], "answer": "To initiate a connection to a user's wallet.", "userAnswer": "", "hash": "c3d4e5f60708a1b6"},
            { "id": "8", "explanation": "", "question": "How do you get the current network's chain ID using Wagmi?", "options": ["useNetwork","useChainId","useProvider","useAccount"], "answer": "useNetwork", "userAnswer": "", "hash": "d4e5f60708a1b2c7"},
            { "id": "9", "explanation": "", "question": "Which hook is used to call a write function on a smart contract?", "options": ["useContractWrite","useContractRead","useSendTransaction","useContract"], "answer": "useContractWrite", "userAnswer": "", "hash": "e5f60708a1b2c3d8"},
            { "id": "10", "explanation": "", "question": "What is the primary benefit of using Wagmi over lower-level libraries like Ethers.js directly in a React app?", "options": ["It provides hooks that manage state, caching, and data fetching, simplifying development.","It is faster and more performant.","It is the only way to connect to a wallet.","It has better support for private blockchains."], "answer": "It provides hooks that manage state, caching, and data fetching, simplifying development.", "userAnswer": "", "hash": "f60708a1b2c3d4e9"},
            { "id": "11", "explanation": "", "question": "How do you configure the chains your dApp supports in Wagmi?", "options": ["By passing a `chains` array to `createClient`.","It automatically supports all chains.","In the `useNetwork` hook.","By setting an environment variable."], "answer": "By passing a `chains` array to `createClient`.", "userAnswer": "", "hash": "0708a1b2c3d4e5f0"},
            { "id": "12", "explanation": "", "question": "What does the `useSigner` hook provide?", "options": ["A signer object for the connected account, which can be used to sign messages and transactions.","A boolean indicating if the user has signed a message.","The signature of the last transaction.","A function to request a signature from the user."], "answer": "A signer object for the connected account, which can be used to sign messages and transactions.", "userAnswer": "", "hash": "08a1b2c3d4e5f611"},
            { "id": "13", "explanation": "", "question": "What is the primary benefit of using Wagmi over raw Web3.js or Ethers.js in a React application?", "options": ["It provides a built-in blockchain node." ,"It offers a collection of React Hooks for interacting with Ethereum, simplifying state management and data fetching." ,"It only works with static web pages." ,"It's a full-stack framework." ], "answer": "It offers a collection of React Hooks for interacting with Ethereum, simplifying state management and data fetching.", "userAnswer": "", "hash": "a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6"},
            { "id": "14", "explanation": "", "question": "Which Wagmi hook is used to connect to a user's wallet?", "options": ["useAccount" ,"useConnect" ,"useProvider" ,"useSigner" ], "answer": "useConnect", "userAnswer": "", "hash": "b2e2d9a6c7f8e1a0b3c4d5e6f7a8b9c0"},
            { "id": "15", "explanation": "", "question": "How do you get the currently connected wallet address using Wagmi?", "options": ["useSigner().address" ,"useAccount().address" ,"useWallet().getAddress()" ,"useClient().walletAddress" ], "answer": "useAccount().address", "userAnswer": "", "hash": "c0746b102c918a902f5a8c2f1f5f2d4e"},
            { "id": "16", "explanation": "", "question": "Which Wagmi hook would you use to read data from a smart contract?", "options": ["useContractWrite" ,"useContractEvent" ,"useContractRead" ,"usePrepareContractWrite" ], "answer": "useContractRead", "userAnswer": "", "hash": "d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0"},
            { "id": "17", "explanation": "", "question": "What is the primary dependency Wagmi relies on for its internal state management and data fetching?", "options": ["Redux" ,"React Context API" ,"React Query (TanStack Query)" ,"Zustand" ], "answer": "React Query (TanStack Query)", "userAnswer": "", "hash": "e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1"},
            { "id": "18", "explanation": "", "question": "To write data to a smart contract with Wagmi, which two hooks are typically used in conjunction?", "options": ["useContractRead and useContractEvent" ,"useConnect and useAccount" ,"usePrepareContractWrite and useContractWrite" ,"useBalance and useSendTransaction" ], "answer": "usePrepareContractWrite and useContractWrite", "userAnswer": "", "hash": "f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2"},
            { "id": "19", "explanation": "", "question": "Which Wagmi hook provides information about the current network (chain ID, name, etc.)?", "options": ["useNetwork" ,"useChain" ,"useProvider" ,"useClient" ], "answer": "useNetwork", "userAnswer": "", "hash": "a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3"},
            { "id": "20", "explanation": "", "question": "What does the `config` object passed to `WagmiConfig` typically contain?", "options": ["Only the application's API keys." ,"The chains to support and the wallet connectors." ,"Your smart contract ABIs." ,"User authentication tokens." ], "answer": "The chains to support and the wallet connectors.", "userAnswer": "", "hash": "b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4"},
            { "id": "21", "explanation": "", "question": "How do you sign a message with the connected wallet using Wagmi?", "options": ["useSendTransaction().signMessage()" ,"useSigner().signMessage()" ,"useSignMessage()" ,"useWriteContract().sign()" ], "answer": "useSignMessage()", "userAnswer": "", "hash": "c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5"},
            { "id": "22", "explanation": "", "question": "What is the purpose of the `chain.id` property within Wagmi's network configuration?", "options": ["It's a random identifier for the network." ,"It's the unique identifier for the blockchain network, e.g., 1 for Ethereum Mainnet, 137 for Polygon Mainnet." ,"It defines the currency symbol of the network." ,"It indicates the current block number." ], "answer": "It's the unique identifier for the blockchain network, e.g., 1 for Ethereum Mainnet, 137 for Polygon Mainnet.", "userAnswer": "", "hash": "d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6"}
          ]
        },
        {
          "difficulty": "medium",
          "id": "7",
          "questions": [
            { "id": "0", "explanation": "", "question": "What hook does WAGMI provide for reading contract state?","options": ["useContractState","useContractRead","useReadFunction","useSmartContract"],"answer": 1,"userAnswer": "","hash": "53a9eee477f1d0e8dd197582c99ae902fda4c7d34ce0b39c92a187066cb6b201"},
            { "id": "1", "explanation": "", "question": "Which package is WAGMI typically used alongside to manage Ethereum chains and wallets?","options": ["redux","ethers.js","viem","web3.js"],"answer": 2,"userAnswer": "","hash": "1327470f9b381e72382faa47ca044684d6dc72e448fe80954637d0db08cab472"},
            { "id": "2", "explanation": "", "question": "What is `configureChains` used for in WAGMI?","options": ["To store user tokens","To connect to the Ethereum mainnet only","To set up supported chains and providers","To manage smart contract deployments"],"answer": 2,"userAnswer": "","hash": "683a963ee436f6cd368f9e5e20c9188ab4f628357c48463a4b4a17f7758cd31f"},
            { "id": "3", "explanation": "", "question": "What is the purpose of the `usePrepareContractWrite` hook in Wagmi?", "options": ["To prepare the configuration for a contract write, including resolving arguments and estimating gas, before the user initiates the transaction.","To check if the user has enough balance to perform the write.","To pre-populate the contract write function with default values.","It is an alias for `useContractWrite`."], "answer": "To prepare the configuration for a contract write, including resolving arguments and estimating gas, before the user initiates the transaction.", "userAnswer": "", "hash": "a1b2c3d4e5f60713"},
            { "id": "4", "explanation": "", "question": "How can you watch for changes in the connected account's balance using Wagmi?", "options": ["By setting the `watch` option to `true` in the `useBalance` hook.","Using the `useWatchBalance` hook.","By using `useEffect` with `useBalance`.","This requires a WebSocket provider."], "answer": "By setting the `watch` option to `true` in the `useBalance` hook.", "userAnswer": "", "hash": "b2c3d4e5f60708a6"},
            { "id": "5", "explanation": "", "question": "What is the difference between `useProvider` and `useSigner` in Wagmi?", "options": ["`useProvider` returns a read-only provider, while `useSigner` returns a provider with signing capabilities for the connected account.","`useProvider` is for connecting to the blockchain, and `useSigner` is for signing messages.","They are interchangeable.","`useSigner` is deprecated in favor of `useProvider`."], "answer": "`useProvider` returns a read-only provider, while `useSigner` returns a provider with signing capabilities for the connected account.", "userAnswer": "", "hash": "c3d4e5f60708a1b7"},
            { "id": "6", "explanation": "", "question": "How do you handle transaction success and error states with the `useContractWrite` hook?", "options": ["By using the `onSuccess` and `onError` callback options in the hook.","By using a `try...catch` block around the `write` function.","By checking the `isSuccess` and `isError` properties returned by the hook.","Both a and c are valid ways."], "answer": "Both a and c are valid ways.", "userAnswer": "", "hash": "d4e5f60708a1b2c8"},
            { "id": "7", "explanation": "", "question": "What is the purpose of the `useWaitForTransaction` hook?", "options": ["To wait for a transaction to be mined and get its receipt.","To wait for the user to confirm the transaction.","To check if a transaction is pending.","To get the details of a past transaction."], "answer": "To wait for a transaction to be mined and get its receipt.", "userAnswer": "", "hash": "e5f60708a1b2c3d9"},
            { "id": "8", "explanation": "", "question": "How can you use Wagmi to resolve an ENS name to an address?", "options": ["Using the `useEnsAddress` hook.","Using the `useEnsResolver` hook.","Using the `useContractRead` hook with the ENS contract.","Both a and b are correct."], "answer": "Using the `useEnsAddress` hook.", "userAnswer": "", "hash": "f60708a1b2c3d4e0"},
            { "id": "9", "explanation": "", "question": "What are 'connectors' in Wagmi?", "options": ["They are objects that provide a way to connect to different wallets like MetaMask, WalletConnect, etc.","They connect the frontend to the backend.","They are used to connect to different blockchain networks.","They are React components for the connect button."], "answer": "They are objects that provide a way to connect to different wallets like MetaMask, WalletConnect, etc.", "userAnswer": "", "hash": "0708a1b2c3d4e5f1"},
            { "id": "10", "explanation": "", "question": "How do you perform 'Sign-In with Ethereum' (SIWE) using Wagmi?", "options": ["By using the `useSignMessage` hook to sign a formatted message, and then verifying it on the backend.","Wagmi has a built-in `useSignInWithEthereum` hook.","By sending a transaction with a special data payload.","It is not possible with Wagmi alone."], "answer": "By using the `useSignMessage` hook to sign a formatted message, and then verifying it on the backend.", "userAnswer": "", "hash": "08a1b2c3d4e5f612"},
            { "id": "11", "explanation": "", "question": "What is the benefit of the caching mechanism in Wagmi?", "options": ["It prevents refetching data that has not changed, reducing RPC calls and improving performance.","It caches the entire dApp in the browser.","It stores user private keys securely.","It helps in debugging by logging all requests."], "answer": "It prevents refetching data that has not changed, reducing RPC calls and improving performance.", "userAnswer": "", "hash": "a1b2c3d4e5f60714"},
            { "id": "12", "explanation": "", "question": "How can you get the arguments of a contract event using Wagmi?", "options": ["By using the `useContractEvent` hook and accessing the `args` from the callback.","By decoding the transaction receipt manually.","By using the `useContractRead` hook.","Wagmi does not support decoding event arguments."], "answer": "By using the `useContractEvent` hook and accessing the `args` from the callback.", "userAnswer": "", "hash": "b2c3d4e5f60708a7"},
            { "id": "13", "explanation": "", "question": "When using `useContractWrite`, what is the purpose of the `prepare` step (via `usePrepareContractWrite`)?", "options": ["It only checks if the user is connected." ,"It estimates gas, checks transaction feasibility, and ensures the transaction is ready to be sent, preventing common errors." ,"It sends the transaction without user confirmation." ,"It fetches the contract's ABI." ], "answer": "It estimates gas, checks transaction feasibility, and ensures the transaction is ready to be sent, preventing common errors.", "userAnswer": "", "hash": "e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7"},
            { "id": "14", "explanation": "", "question": "How does Wagmi facilitate re-fetching data when the underlying blockchain state changes (e.g., after a transaction is mined)?", "options": ["It manually polls the blockchain every few seconds." ,"It leverages React Query's caching and invalidation mechanisms, often re-fetching on block changes or successful transactions." ,"It requires the developer to explicitly call a re-fetch function." ,"It uses WebSockets exclusively for all data updates." ], "answer": "It leverages React Query's caching and invalidation mechanisms, often re-fetching on block changes or successful transactions.", "userAnswer": "", "hash": "f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8"},
            { "id": "15", "explanation": "", "question": "Explain the role of `Provider` in Wagmi's configuration.", "options": ["It's a component for rendering wallet connectors." ,"It's a React Context provider that makes the Wagmi client instance available to all child components." ,"It defines the smart contracts to interact with." ,"It's a way to specify the default gas price." ], "answer": "It's a React Context provider that makes the Wagmi client instance available to all child components.", "userAnswer": "", "hash": "a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9"},
            { "id": "16", "explanation": "", "question": "What is the primary use case for the `useWatchPendingTransactions` hook?", "options": ["To retrieve all historical transactions for an account." ,"To get real-time notifications for new pending transactions on the connected network." ,"To track the status of a specific transaction that has already been sent." ,"To estimate the gas fee for a transaction before sending." ], "answer": "To get real-time notifications for new pending transactions on the connected network.", "userAnswer": "", "hash": "b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0"},
            { "id": "17", "explanation": "", "question": "How does Wagmi typically handle errors from blockchain interactions (e.g., rejected transactions, invalid arguments)?", "options": ["It automatically retries the operation indefinitely." ,"Errors are exposed through the `error` property of the hook's return object, allowing developers to handle them gracefully." ,"It crashes the application." ,"Errors are logged only to the console, not accessible in the component." ], "answer": "Errors are exposed through the `error` property of the hook's return object, allowing developers to handle them gracefully.", "userAnswer": "", "hash": "c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1"},
            { "id": "18", "explanation": "", "question": "What is the purpose of `chains` and `connectors` in the Wagmi client configuration?", "options": ["`chains` define the supported networks, and `connectors` define the wallet integrations (e.g., MetaMask, WalletConnect)." ,"`chains` are for smart contract ABIs, and `connectors` are for dApp routing." ,"They are both used to define the gas price strategy." ,"They are deprecated properties." ], "answer": "`chains` define the supported networks, and `connectors` define the wallet integrations (e.g., MetaMask, WalletConnect).", "userAnswer": "", "hash": "d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2"},
            { "id": "19", "explanation": "", "question": "When might you use `useEnsName` or `useEnsAvatar`?", "options": ["To resolve IP addresses to domain names." ,"To resolve Ethereum Name Service (ENS) names to addresses or fetch associated avatars." ,"To manage environment variables." ,"To encrypt and decrypt data." ], "answer": "To resolve Ethereum Name Service (ENS) names to addresses or fetch associated avatars.", "userAnswer": "", "hash": "e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3"},
            { "id": "20", "explanation": "", "question": "How does Wagmi simplify fetching data for multiple contract calls in parallel?", "options": ["It automatically queues them and runs sequentially." ,"By using `useContractReads` or by simply declaring multiple `useContractRead` hooks, React Query handles batching and parallel fetching efficiently." ,"You have to write custom Promise.all logic." ,"It doesn't support parallel calls." ], "answer": "By using `useContractReads` or by simply declaring multiple `useContractRead` hooks, React Query handles batching and parallel fetching efficiently.", "userAnswer": "", "hash": "f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4"},
            { "id": "21", "explanation": "", "question": "What is the purpose of the `staleTime` and `cacheTime` options in Wagmi's underlying React Query configuration?", "options": ["They control how long a component remains mounted." ,"`staleTime` defines how long data is considered fresh before needing a background re-fetch, and `cacheTime` defines how long inactive data is kept in memory." ,"They are related to transaction confirmation times." ,"They are only for server-side rendering." ], "answer": "`staleTime` defines how long data is considered fresh before needing a background re-fetch, and `cacheTime` defines how long inactive data is kept in memory.", "userAnswer": "", "hash": "a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5"},
            { "id": "22", "explanation": "", "question": "When would you prefer `usePublicClient` over `useWalletClient` or `useSigner`?", "options": ["When you need to send transactions that modify blockchain state." ,"When you need to interact with a connected wallet for signing operations." ,"When you only need to perform read-only operations on the blockchain that don't require a connected wallet." ,"They are all interchangeable." ], "answer": "When you only need to perform read-only operations on the blockchain that don't require a connected wallet.", "userAnswer": "", "hash": "b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6"}
          ]
        },
        {
          "difficulty": "hard",
          "id": "8",
          "questions": [
            { "id": "0", "explanation": "", "question": "Which hook would you use in WAGMI to write to a smart contract?", "options": ["useSendTransaction","useWriteContract","useContractWrite","useCallFunction"], "answer": 2, "userAnswer": "", "hash": "2e3210bf2a3e6ceff55d657da06f458e5ae6b3e9ac76c8cb36f4e6c2b97d67c6"},
            { "id": "1", "explanation": "", "question": "How does WAGMI ensure type safety for contract interactions?",  "options": ["Using TypeChain","Built-in TypeScript support with ABI typings","With JSON-RPC typing","Via runtime validation"], "answer": 1, "userAnswer": "", "hash": "373828ab7744ef8a5da07067de8691335806020bde1b1be9c7557cfa2a92f81f"},
            { "id": "2", "explanation": "", "question": "What is the benefit of using `useConnect` in WAGMI?", "options": ["Allows deploying contracts","Enables access to external APIs","Lets users connect wallets and access session state","Handles chain forking"], "answer": 2, "userAnswer": "", "hash": "ce02931833ba3bf1f6f2ffdfe2573ba4fdbe8dadd47fa37e02e1803a9e73107a"},
            { "id": "3", "explanation": "", "question": "How would you implement optimistic UI updates for a contract write using Wagmi?", "options": ["By using the `onMutate` callback in `useContractWrite` to update the local state before the transaction is confirmed, and rolling back in `onError`.","Wagmi handles optimistic UI updates automatically.","By manually updating the state after calling the `write` function and hoping for the best.","This is not a recommended practice in blockchain applications."], "answer": "By using the `onMutate` callback in `useContractWrite` to update the local state before the transaction is confirmed, and rolling back in `onError`.", "userAnswer": "", "hash": "c3d4e5f60708a1b8"},
            { "id": "4", "explanation": "", "question": "What is the purpose of the `persister` option in `createClient` in Wagmi?", "options": ["To persist the client's state, including the connected account and chain, to storage like localStorage.","To persist the cache of RPC responses.","To make the connection to the wallet persistent across page reloads.","To persist smart contract ABIs."], "answer": "To persist the client's state, including the connected account and chain, to storage like localStorage.", "userAnswer": "", "hash": "d4e5f60708a1b2c9"},
            { "id": "5", "explanation": "", "question": "How can you use Wagmi with multiple, concurrent contract reads that depend on each other's results?", "options": ["By chaining the `useContractRead` hooks, using the `enabled` option to only run a hook when the data it depends on is available.","By using the `useContractReads` hook for batching.","By using `Promise.all` with multiple `read` calls.","Wagmi does not support dependent queries."], "answer": "By chaining the `useContractRead` hooks, using the `enabled` option to only run a hook when the data it depends on is available.", "userAnswer": "", "hash": "e5f60708a1b2c3da"},
            { "id": "6", "explanation": "", "question": "What is 'Stale-While-Revalidate' in the context of Wagmi's caching?", "options": ["Wagmi returns stale (cached) data immediately while refetching the data in the background. The UI is then updated with the fresh data.","It revalidates the data every time it becomes stale.","It is a strategy to invalidate stale data.","It prevents the data from ever becoming stale."], "answer": "Wagmi returns stale (cached) data immediately while refetching the data in the background. The UI is then updated with the fresh data.", "userAnswer": "", "hash": "f60708a1b2c3d4e1"},
            { "id": "7", "explanation": "", "question": "How do you create a custom hook that composes multiple Wagmi hooks for a specific functionality?", "options": ["By creating a new function that calls the Wagmi hooks and returns their combined state, following the rules of hooks.","By extending the `WagmiConfig`.","By creating a higher-order component.","This is not possible."], "answer": "By creating a new function that calls the Wagmi hooks and returns their combined state, following the rules of hooks.", "userAnswer": "", "hash": "0708a1b2c3d4e5f2"},
            { "id": "8", "explanation": "", "question": "What is the role of the `queryClient` in Wagmi?", "options": ["It is an instance of React Query's `QueryClient`, which Wagmi uses under the hood for caching, fetching, and state management.","It is a client for querying the GraphQL endpoint of The Graph.","It is a custom client for making RPC requests.","It manages the connection to the wallet."], "answer": "It is an instance of React Query's `QueryClient`, which Wagmi uses under the hood for caching, fetching, and state management.", "userAnswer": "", "hash": "08a1b2c3d4e5f613"},
            { "id": "9", "explanation": "", "question": "How can you use Wagmi to interact with a contract on a Layer 2 network like Optimism or Arbitrum?", "options": ["By adding the L2 chain's configuration to the `chains` array in `createClient` and ensuring the user's wallet is on the correct network.","Wagmi requires a special plugin for each L2 network.","It is not possible to use Wagmi with L2 networks.","By using a different set of hooks, like `useL2ContractWrite`."], "answer": "By adding the L2 chain's configuration to the `chains` array in `createClient` and ensuring the user's wallet is on the correct network.", "userAnswer": "", "hash": "a1b2c3d4e5f60715"},
            { "id": "10", "explanation": "", "question": "What is the purpose of the `useFeeData` hook in Wagmi?", "options": ["To fetch the current fee data for the network, including gas price and max priority fee per gas, especially for EIP-1559 transactions.","To calculate the fee for a specific transaction.","To get the historical fee data.","To estimate the transaction fee in USD."], "answer": "To fetch the current fee data for the network, including gas price and max priority fee per gas, especially for EIP-1559 transactions.", "userAnswer": "", "hash": "b2c3d4e5f60708a8"},
            { "id": "11", "explanation": "", "question": "How do you debouncing a contract write in Wagmi to prevent spamming transactions?", "options": ["By using the `useDebounce` hook on the arguments passed to `usePrepareContractWrite`.","Wagmi has a built-in `debounce` option in `useContractWrite`.","By using a traditional `setTimeout` and `clearTimeout` in a `useEffect`.","Debouncing is not necessary as the wallet will prompt for confirmation each time."], "answer": "By using the `useDebounce` hook on the arguments passed to `usePrepareContractWrite`.", "userAnswer": "", "hash": "c3d4e5f60708a1b9"},
            { "id": "12", "explanation": "", "question": "How can you programmatically switch the user's network using Wagmi?", "options": ["By using the `switchNetwork` or `switchNetworkAsync` function returned by the `useSwitchNetwork` hook.","By calling `provider.request({ method: 'wallet_switchEthereumChain', ... })` directly.","The dApp cannot switch the network; the user must do it manually.","Both a and b are possible, but `useSwitchNetwork` is the recommended Wagmi way."], "answer": "Both a and b are possible, but `useSwitchNetwork` is the recommended Wagmi way.", "userAnswer": "", "hash": "d4e5f60708a1b2ca"},
            { "id": "13", "explanation": "", "question": "How can you implement optimistic UI updates for a transaction sent via `useContractWrite` in Wagmi?", "options": ["Wagmi handles optimistic updates automatically." ,"By manually invalidating React Query caches and updating the UI state immediately after the `sendTransaction` call, then reverting on error or confirming on success." ,"It's not possible with Wagmi." ,"Only through server-side rendering." ], "answer": "By manually invalidating React Query caches and updating the UI state immediately after the `sendTransaction` call, then reverting on error or confirming on success.", "userAnswer": "", "hash": "c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7"},
            { "id": "14", "explanation": "", "question": "Describe a strategy for managing multiple wallet connections (e.g., MetaMask and WalletConnect) in a single Wagmi application, including user switching.", "options": ["You can only support one wallet type at a time." ,"Wagmi's `connectors` array in `WagmiConfig` allows configuring multiple wallet connectors. `useConnect` provides methods to connect to specific connectors, and `useDisconnect` to switch or disconnect." ,"Requires separate Wagmi providers for each wallet." ,"Users must manually switch wallets in their browser." ], "answer": "Wagmi's `connectors` array in `WagmiConfig` allows configuring multiple wallet connectors. `useConnect` provides methods to connect to specific connectors, and `useDisconnect` to switch or disconnect.", "userAnswer": "", "hash": "d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8"},
            { "id": "15", "explanation": "", "question": "How would you implement custom error handling and user feedback for specific revert reasons from smart contract interactions using Wagmi?", "options": ["Wagmi automatically displays all contract errors in a popup." ,"Inspect the `error` object returned by hooks like `useContractWrite`. Parse the error message (e.g., using `parseAbiItem` and `decodeFunctionData` or checking for common revert string patterns) to provide specific feedback." ,"Only through server-side logs." ,"It's not possible to get specific revert reasons." ], "answer": "Inspect the `error` object returned by hooks like `useContractWrite`. Parse the error message (e.g., using `parseAbiItem` and `decodeFunctionData` or checking for common revert string patterns) to provide specific feedback.", "userAnswer": "", "hash": "e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9"},
            { "id": "16", "explanation": "", "question": "Explain how Wagmi's event listeners (`useContractEvent`) are typically set up to be resilient to temporary network disconnections or re-connections.", "options": ["They require manual re-subscription after disconnection." ,"Wagmi, leveraging its underlying provider and React Query, often handles re-subscriptions and ensures events are not missed during brief disconnections automatically." ,"Events are always missed during any disconnection." ,"Event listeners are only for historical events." ], "answer": "Wagmi, leveraging its underlying provider and React Query, often handles re-subscriptions and ensures events are not missed during brief disconnections automatically.", "userAnswer": "", "hash": "f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0"},
            { "id": "17", "explanation": "", "question": "When building a complex dApp, how would you manage and update the contract ABIs and addresses when deploying to different networks (e.g., local, testnet, mainnet) with Wagmi?", "options": ["Hardcode all ABIs and addresses in the component." ,"Use a configuration file or environment variables to dynamically load the correct ABI and address based on the connected chain ID, possibly using a utility like `wagmi/core/actions/readContract` or custom helper functions." ,"Manually change the code for each deployment." ,"Wagmi automatically detects the correct ABI and address." ], "answer": "Use a configuration file or environment variables to dynamically load the correct ABI and address based on the connected chain ID, possibly using a utility like `wagmi/core/actions/readContract` or custom helper functions.", "userAnswer": "", "hash": "a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1"},
            { "id": "18", "explanation": "", "question": "Describe the process of upgrading a smart contract using a proxy pattern in a Wagmi-powered dApp from the client-side perspective.", "options": ["The client-side code needs to be completely rewritten." ,"The dApp continues interacting with the unchanging proxy contract address. The underlying implementation contract is updated via an on-chain transaction (usually by an admin), and Wagmi's `useContractRead`/`useContractWrite` calls will automatically interact with the new logic." ,"Wagmi provides a special `useUpgradeContract` hook." ,"Users need to clear their browser cache." ], "answer": "The dApp continues interacting with the unchanging proxy contract address. The underlying implementation contract is updated via an on-chain transaction (usually by an admin), and Wagmi's `useContractRead`/`useContractWrite` calls will automatically interact with the new logic.", "userAnswer": "", "hash": "b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2"},
            { "id": "19", "explanation": "", "question": "How would you handle deep linking to specific dApp states or functionalities based on blockchain parameters (e.g., transaction hash, block number) using Wagmi and Next.js?", "options": ["Wagmi has built-in deep linking." ,"Combine Next.js dynamic routes with Wagmi hooks. Extract parameters from the URL, then use Wagmi hooks (e.g., `useWaitForTransactionReceipt`, `useBlock`) to fetch and display relevant on-chain data." ,"Requires a server-side only solution." ,"Use only client-side routing without Wagmi." ], "answer": "Combine Next.js dynamic routes with Wagmi hooks. Extract parameters from the URL, then use Wagmi hooks (e.g., `useWaitForTransactionReceipt`, `useBlock`) to fetch and display relevant on-chain data.", "userAnswer": "", "hash": "c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3"},
            { "id": "20", "explanation": "", "question": "When might you need to use `createPublicClient` or `createWalletClient` directly from `viem` (Wagmi's underlying library) instead of Wagmi's hooks?", "options": ["Never, Wagmi hooks cover all use cases." ,"When you need to perform low-level interactions that aren't exposed by Wagmi's opinionated hooks, or when working in non-React environments." ,"Only for testing purposes." ,"When you are deploying a new contract." ], "answer": "When you need to perform low-level interactions that aren't exposed by Wagmi's opinionated hooks, or when working in non-React environments.", "userAnswer": "", "hash": "d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4"},
            { "id": "21", "explanation": "", "question": "Describe the security implications of using `useSignTypedData` and why structured data signing is preferred over `useSignMessage` for certain applications.", "options": ["They are functionally identical; no security difference." ,"`useSignTypedData` provides a clear, human-readable format for users to understand what they are signing (preventing phishing) and protects against replay attacks by including domain separation, unlike raw message signing." ,"`useSignMessage` is inherently more secure." ,"Structured data signing is only for NFTs." ], "answer": "`useSignTypedData` provides a clear, human-readable format for users to understand what they are signing (preventing phishing) and protects against replay attacks by including domain separation, unlike raw message signing.", "userAnswer": "", "hash": "e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5"},
            { "id": "22", "explanation": "", "question": "How can you integrate a custom wallet provider (e.g., a new browser extension wallet) with Wagmi?", "options": ["Wagmi only supports a fixed set of wallets." ,"By creating a custom connector class that extends `Connector` from `wagmi/connectors` and implementing the necessary connection/disconnection logic." ,"By modifying Wagmi's source code." ,"Only possible through a plugin." ], "answer": "By creating a custom connector class that extends `Connector` from `wagmi/connectors` and implementing the necessary connection/disconnection logic.", "userAnswer": "", "hash": "f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6"}
          ]
        }
      ]
    },

    {
      "category": "reactjs",
      "id": "3",
      "description": "Test your knowledge across various topics in ReactJS. You will get questions that are tailored to test your understanding of the subject",
      "levels": [
        {
          "difficulty": "easy",
          "id": "9",
          "questions": [
            { "id": "0", "explanation": "", "question": "What is React?", "options": ["A JavaScript library for building user interfaces.","A full-fledged framework for web development.","A database management system.","A programming language."], "answer": "A JavaScript library for building user interfaces.", "userAnswer": "", "hash": "e5f60708a1b2c3db"},
            { "id": "1", "explanation": "", "question": "What is JSX?", "options": ["A syntax extension for JavaScript that looks like HTML.","A preprocessor for CSS.","A templating engine for Node.js.","A package manager for JavaScript."], "answer": "A syntax extension for JavaScript that looks like HTML.", "userAnswer": "", "hash": "f60708a1b2c3d4e2"},
            { "id": "2", "explanation": "", "question": "How do you create a React component?", "options": ["By creating a JavaScript function or class that returns a React element.","By creating an HTML file with a special tag.","By defining a new element in a CSS file.","By using the `React.createComponent()` method."], "answer": "By creating a JavaScript function or class that returns a React element.", "userAnswer": "", "hash": "0708a1b2c3d4e5f3"},
            { "id": "3", "explanation": "", "question": "What is the purpose of `useState` in React?", "options": ["To add state to functional components.","To manage the global state of the application.","To fetch data from an API.","To define the initial state of a class component."], "answer": "To add state to functional components.", "userAnswer": "", "hash": "08a1b2c3d4e5f614"},
            { "id": "4", "explanation": "", "question": "How do you pass data from a parent component to a child component?", "options": ["Through props.","Through state.","Using the `Context` API.","It is not possible."], "answer": "Through props.", "userAnswer": "", "hash": "a1b2c3d4e5f60716"},
            { "id": "5", "explanation": "", "question": "What is the virtual DOM?", "options": ["A lightweight copy of the real DOM in memory, used by React for performance optimization.","A shadow DOM for encapsulating styles.","A virtual reality extension for web browsers.","A way to create multiple DOMs for A/B testing."], "answer": "A lightweight copy of the real DOM in memory, used by React for performance optimization.", "userAnswer": "", "hash": "b2c3d4e5f60708a9"},
            { "id": "6", "explanation": "", "question": "How do you handle events in React?", "options": ["By using camelCase event handler names like `onClick`.","By using lowercase event handler names like `onclick`.","By using `addEventListener` in a `useEffect` hook.","By using inline JavaScript in the HTML."], "answer": "By using camelCase event handler names like `onClick`.", "userAnswer": "", "hash": "c3d4e5f60708a1ba"},
            { "id": "7", "explanation": "", "question": "What is the purpose of the `useEffect` hook?", "options": ["To perform side effects in functional components, such as data fetching or subscriptions.","To create custom hooks.","To manage component lifecycle in class components.","To apply styles to a component."], "answer": "To perform side effects in functional components, such as data fetching or subscriptions.", "userAnswer": "", "hash": "d4e5f60708a1b2cb"},
            { "id": "8", "explanation": "", "question": "How do you render a list of items in React?", "options": ["By using the `map()` function and returning an array of JSX elements with unique `key` props.","By using a `for` loop inside JSX.","By using the `<for-each>` tag.","By creating a new component for each item manually."], "answer": "By using the `map()` function and returning an array of JSX elements with unique `key` props.", "userAnswer": "", "hash": "e5f60708a1b2c3dc"},
            { "id": "9", "explanation": "", "question": "What is the difference between a controlled and an uncontrolled component?", "options": ["A controlled component's state is handled by React, while an uncontrolled component's state is handled by the DOM.","A controlled component has a fixed value, while an uncontrolled component can be changed by the user.","A controlled component is a class component, and an uncontrolled component is a functional component.","There is no such distinction in React."], "answer": "A controlled component's state is handled by React, while an uncontrolled component's state is handled by the DOM.", "userAnswer": "", "hash": "f60708a1b2c3d4e3"},
            { "id": "10", "explanation": "", "question": "What is ReactJS primarily used for?", "options": ["Backend API development" ,"Building user interfaces (UIs)" ,"Database management" ,"Mobile app development (native)" ], "answer": "Building user interfaces (UIs)", "userAnswer": "", "hash": "a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5"},
            { "id": "11", "explanation": "", "question": "Which command is typically used to create a new React application?", "options": ["npm start" ,"npm build" ,"npx create-react-app my-app" ,"react init" ], "answer": "npx create-react-app my-app", "userAnswer": "", "hash": "b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6"},
            { "id": "12", "explanation": "", "question": "What is JSX in React?", "options": ["A JavaScript framework" ,"A syntax extension for JavaScript that allows writing HTML-like code in React." ,"A type of database" ,"A styling library" ], "answer": "A syntax extension for JavaScript that allows writing HTML-like code in React.", "userAnswer": "", "hash": "c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7"},
            { "id": "13", "explanation": "", "question": "How do you pass data from a parent component to a child component in React?", "options": ["Using state" ,"Using props" ,"Using context directly" ,"Using Redux only" ], "answer": "Using props", "userAnswer": "", "hash": "d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8"},
            { "id": "14", "explanation": "", "question": "Which hook is used for managing state in a functional component?", "options": ["useEffect" ,"useContext" ,"useState" ,"useReducer" ], "answer": "useState", "userAnswer": "", "hash": "e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9"},
            { "id": "15", "explanation": "", "question": "What is the purpose of `ReactDOM.render()`?", "options": ["To create a new React component." ,"To update the component's state." ,"To render a React element into the DOM in the provided container." ,"To define props." ], "answer": "To render a React element into the DOM in the provided container.", "userAnswer": "", "hash": "f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0"},
            { "id": "16", "explanation": "", "question": "What is a 'component' in React?", "options": ["A database table." ,"An independent, reusable piece of UI." ,"A type of server." ,"A CSS stylesheet." ], "answer": "An independent, reusable piece of UI.", "userAnswer": "", "hash": "a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1"},
            { "id": "17", "explanation": "", "question": "Which of the following is true about React's Virtual DOM?", "options": ["It directly updates the browser's DOM for every change." ,"It's a real DOM that React creates." ,"It's a lightweight copy of the actual DOM, used to optimize rendering performance." ,"It's only used for server-side rendering." ], "answer": "It's a lightweight copy of the actual DOM, used to optimize rendering performance.", "userAnswer": "", "hash": "b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2"},
            { "id": "18", "explanation": "", "question": "What does the `key` prop help React do in lists?", "options": ["It allows React to uniquely identify elements in a list, improving performance when items are reordered, added, or removed." ,"It determines the styling of list items." ,"It's used for navigation." ,"It's only for accessibility." ], "answer": "It allows React to uniquely identify elements in a list, improving performance when items are reordered, added, or removed.", "userAnswer": "", "hash": "c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3"},
            { "id": "19", "explanation": "", "question": "What is the correct way to conditionally render a component in React?", "options": ["Using `if` statements directly inside JSX." ,"Using a `for` loop." ,"Using ternary operators or logical AND (&&) within JSX, or `if/else` outside JSX." ,"React has no conditional rendering." ], "answer": "Using ternary operators or logical AND (&&) within JSX, or `if/else` outside JSX.", "userAnswer": "", "hash": "d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4"},
            { "id": "20", "explanation": "", "question": "What is React primarily used for?","options": ["Managing databases","Styling web pages","Building user interfaces","Server-side rendering only"],"answer": 2,"userAnswer": "","hash": "9c5f063a4e63e4c257fe70fb8831dfebfb288f673baf3fc0ab3edc85b072a0ef"},
            { "id": "21", "explanation": "", "question": "What keyword is used to create a component class in React?","options": ["class","component","function","new"],"answer": 0,"userAnswer": "","hash": "43b3ae3218bc433eb0f68e108ef37c41b5e868ccdcaa4209e1293ae78218175e"},
            { "id": "22", "explanation": "", "question": "Which method is used to render content to the DOM in React?","options": [ "ReactDOM.render()","React.createElement()","renderHTML()","DOM.render()"],"answer": 0,"userAnswer": "","hash": "4d325328e03d65f116ac8f8977882e14c56560b432f980a4aea07578dcaa232c"}
          ]
        },
        {
          "difficulty": "medium",
          "id": "10",
          "questions": [
            { "id": "0", "explanation": "", "question": "What hook is used to manage state in a functional component?","options": ["useEffect","useRef","useState","useContext"],"answer": 2,"userAnswer": "","hash": "b151a153d820f5c6ff4e7050e99a9c117806cb508a1d8baece7a727d93f45e32"},
            { "id": "1", "explanation": "", "question": "Which method is called after a component is rendered in a class component?","options": ["componentWillUnmount","render","componentDidMount","componentDidUpdate"],"answer": 2,"userAnswer": "","hash": "d5bc0a271ba9a92924ab0dc6baadd5731c19fe1dd0b6a50372e3756fc44a93d0"},
            { "id": "2", "explanation": "", "question": "What is the purpose of the 'key' prop in lists?","options": ["To identify uniquely each element","To encrypt list items","To sort items automatically","To add inline styles"],"answer": 0,"userAnswer": "","hash": "882c92eca4c3bdac02b209ef4a56138e995ecf7cb0c8949a0550198e83bd12de"},
            { "id": "3", "explanation": "", "question": "What is the purpose of the `useContext` hook?", "options": ["To subscribe to a React context and consume its value without using a `Context.Consumer` component.","To create a new context.","To provide a value to a context.","To manage the context of the entire application."], "answer": "To subscribe to a React context and consume its value without using a `Context.Consumer` component.", "userAnswer": "", "hash": "0708a1b2c3d4e5f4"},
            { "id": "4", "explanation": "", "question": "What is a higher-order component (HOC)?", "options": ["A function that takes a component and returns a new component with additional props or logic.","A component that renders other components.","A custom hook that returns a component.","A component with a higher z-index."], "answer": "A function that takes a component and returns a new component with additional props or logic.", "userAnswer": "", "hash": "08a1b2c3d4e5f615"},
            { "id": "5", "explanation": "", "question": "What is the difference between `useEffect` and `useLayoutEffect`?", "options": ["`useLayoutEffect` runs synchronously after all DOM mutations, while `useEffect` runs asynchronously.","`useEffect` is for side effects, and `useLayoutEffect` is for styling.","They are identical in their execution.","`useLayoutEffect` is deprecated."], "answer": "`useLayoutEffect` runs synchronously after all DOM mutations, while `useEffect` runs asynchronously.", "userAnswer": "", "hash": "a1b2c3d4e5f60717"},
            { "id": "6", "explanation": "", "question": "What is prop drilling and how can you avoid it?", "options": ["It is the process of passing props down through multiple levels of components. It can be avoided using the Context API or state management libraries like Redux.","It is a performance issue caused by too many props. It can be avoided by using `React.memo`.","It is a way to pass props from a child to a parent component. It can be avoided by using callbacks.","It is a security vulnerability. It can be avoided by sanitizing props."], "answer": "It is the process of passing props down through multiple levels of components. It can be avoided using the Context API or state management libraries like Redux.", "userAnswer": "", "hash": "b2c3d4e5f60708aa"},
            { "id": "7", "explanation": "", "question": "What is the purpose of `React.memo`?", "options": ["To memoize a functional component, preventing it from re-rendering if its props have not changed.","To memoize the result of a function call.","To store a component's state in memory.","To create a memo for a component."], "answer": "To memoize a functional component, preventing it from re-rendering if its props have not changed.", "userAnswer": "", "hash": "c3d4e5f60708a1bb"},
            { "id": "8", "explanation": "", "question": "What are React Fragments?", "options": ["A way to group a list of children without adding extra nodes to the DOM, often written as `<>` and `</>`.","A way to break a component into smaller pieces.","A feature for code splitting.","A way to create reusable pieces of JSX."], "answer": "A way to group a list of children without adding extra nodes to the DOM, often written as `<>` and `</>`.", "userAnswer": "", "hash": "d4e5f60708a1b2cc"},
            { "id": "9", "explanation": "", "question": "What is the purpose of the `useReducer` hook?", "options": ["An alternative to `useState` for managing complex state logic, especially when the next state depends on the previous one.","To reduce the bundle size of a React application.","To manage state in Redux.","To create a reducer function for an array."], "answer": "An alternative to `useState` for managing complex state logic, especially when the next state depends on the previous one.", "userAnswer": "", "hash": "e5f60708a1b2c3dd"},
            { "id": "10", "explanation": "", "question": "What is the difference between `useMemo` and `useCallback`?", "options": ["`useMemo` memoizes a value, while `useCallback` memoizes a function.","`useMemo` is for memoizing props, and `useCallback` is for memoizing state.","They are interchangeable.","`useCallback` is more performant than `useMemo`."], "answer": "`useMemo` memoizes a value, while `useCallback` memoizes a function.", "userAnswer": "", "hash": "f60708a1b2c3d4e4"},
            { "id": "11", "explanation": "", "question": "What are error boundaries in React?", "options": ["React components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI.","A way to handle errors in `useEffect`.","A feature for debugging React applications.","A linting rule to prevent errors."], "answer": "React components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI.", "userAnswer": "", "hash": "0708a1b2c3d4e5f5"},
            { "id": "12", "explanation": "", "question": "What is lifting state up in React?", "options": ["Moving the state from a child component to its parent component to share the state between siblings.","Moving the state to a global context.","Elevating the importance of a piece of state.","An anti-pattern in React."], "answer": "Moving the state from a child component to its parent component to share the state between siblings.", "userAnswer": "", "hash": "08a1b2c3d4e5f616"},
            { "id": "13", "explanation": "", "question": "Explain the difference between a controlled and uncontrolled component in React.", "options": ["Controlled components manage their own state; uncontrolled components rely on the DOM." ,"Controlled components have their state managed by React, with form data handled by React state. Uncontrolled components let the DOM handle form data, accessed via refs." ,"Controlled components are faster." ,"Uncontrolled components are deprecated." ], "answer": "Controlled components have their state managed by React, with form data handled by React state. Uncontrolled components let the DOM handle form data, accessed via refs.", "userAnswer": "", "hash": "e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5"},
            { "id": "14", "explanation": "", "question": "What is the purpose of the `useEffect` hook, and when does it run?", "options": ["It's used for fetching data only once when the component mounts." ,"It's used for side effects (data fetching, subscriptions, DOM manipulations). It runs after every render by default, but can be controlled with a dependency array." ,"It's an alternative to `useState`." ,"It only runs when the component unmounts." ], "answer": "It's used for side effects (data fetching, subscriptions, DOM manipulations). It runs after every render by default, but can be controlled with a dependency array.", "userAnswer": "", "hash": "f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6"},
            { "id": "15", "explanation": "", "question": "How can you optimize performance in a React application?", "options": ["By avoiding functional components." ,"By using `React.memo`, `useMemo`, `useCallback`, lazy loading, virtualization, and optimizing state updates." ,"By using inline styles exclusively." ,"By increasing the number of re-renders." ], "answer": "By using `React.memo`, `useMemo`, `useCallback`, lazy loading, virtualization, and optimizing state updates.", "userAnswer": "", "hash": "a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7"},
            { "id": "16", "explanation": "", "question": "When would you use the `useContext` hook?", "options": ["To manage local component state." ,"To avoid prop drilling by providing a way to pass data deeply through the component tree without manually passing props at every level." ,"To perform HTTP requests." ,"To define new custom hooks." ], "answer": "To avoid prop drilling by providing a way to pass data deeply through the component tree without manually passing props at every level.", "userAnswer": "", "hash": "b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8"},
            { "id": "17", "explanation": "", "question": "What is 'lifting state up' in React, and why is it used?", "options": ["Moving state from a child component to its grandparent." ,"Moving the state of several sibling components up to their closest common ancestor to allow them to share and synchronize data." ,"Putting all state in the root App component." ,"Only for class components." ], "answer": "Moving the state of several sibling components up to their closest common ancestor to allow them to share and synchronize data.", "userAnswer": "", "hash": "c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9"},
            { "id": "18", "explanation": "", "question": "Explain the concept of 'unidirectional data flow' in React.", "options": ["Data can flow in any direction." ,"Data flows in a single direction: from parent components to child components via props, making data changes predictable." ,"Data only flows from child to parent." ,"Data is managed only by Redux." ], "answer": "Data flows in a single direction: from parent components to child components via props, making data changes predictable.", "userAnswer": "", "hash": "d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0"},
            { "id": "19", "explanation": "", "question": "What is the difference between `setState` in class components and the updater function in `useState` for functional components?", "options": ["`setState` merges updates, `useState` updater replaces state." ,"`setState` updates are synchronous; `useState` updater is asynchronous." ,"Both are asynchronous and can take a function to correctly update state based on previous state, but `setState` merges objects while `useState`'s updater replaces the state value entirely." ,"There is no difference." ], "answer": "Both are asynchronous and can take a function to correctly update state based on previous state, but `setState` merges objects while `useState`'s updater replaces the state value entirely.", "userAnswer": "", "hash": "e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1"},
            { "id": "20", "explanation": "", "question": "When would you use `useRef`?", "options": ["To manage component state." ,"To access and interact with DOM elements directly, or to persist values across renders without causing re-renders." ,"To fetch data from an API." ,"To define context providers." ], "answer": "To access and interact with DOM elements directly, or to persist values across renders without causing re-renders.", "userAnswer": "", "hash": "f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2"},
            { "id": "21", "explanation": "", "question": "What is the purpose of custom hooks in React?", "options": ["To replace all built-in hooks." ,"To encapsulate and reuse stateful logic across multiple components, promoting code reusability and organization." ,"To create new HTML elements." ,"To prevent components from re-rendering." ], "answer": "To encapsulate and reuse stateful logic across multiple components, promoting code reusability and organization.", "userAnswer": "", "hash": "a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3"},
            { "id": "22", "explanation": "", "question": "Describe the concept of 'component lifecycle' in React functional components.", "options": ["It refers to the time it takes for a component to load." ,"While functional components don't have direct lifecycle methods like class components, `useEffect` can be used to simulate mounting, updating, and unmounting phases." ,"Functional components have no lifecycle." ,"It's only about rendering." ], "answer": "While functional components don't have direct lifecycle methods like class components, `useEffect` can be used to simulate mounting, updating, and unmounting phases.", "userAnswer": "", "hash": "b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4"}
          ]
        },
        {
          "difficulty": "hard",
          "id": "11",
          "questions": [
            { "id": "0", "explanation": "", "question": "Which hook allows you to optimize performance by memoizing functions?","options": ["useEffect","useState","useMemo","useCallback"],"answer": 3,"userAnswer": "","hash": "13276fed2ae00b2d94b2acad5ede35ac034659167c5b53144afcd82bf704b2cc"},
            { "id": "1", "explanation": "", "question": "How can you share state between deeply nested components?","options": ["Props drilling","useContext hook","Redux only","useRef hook"],"answer": 1,"userAnswer": "","hash": "4f0b78e2ee9ff1371fd0164487b5ed92f03225294cb7f6caa4c155659418eef8"},
            { "id": "2", "explanation": "", "question": "What is the purpose of React.lazy()?","options": ["To slow down rendering for animations","To add delays in state updates","To lazy-load components for code splitting","To reduce re-renders"],"answer": 2,"userAnswer": "","hash": "965aef0abc9648135f49379e70f62e1113aea8e5300434b9bf6e46dca93c586f"},
            { "id": "3", "explanation": "", "question": "What is Concurrent Mode in React?", "options": ["A set of new features that helps React apps stay responsive and gracefully adjust to the user’s device capabilities and network speed. It allows rendering to be interruptible.","A mode where multiple React apps can run concurrently.","A way to write concurrent JavaScript code in React.","A feature for parallelizing API requests."], "answer": "A set of new features that helps React apps stay responsive and gracefully adjust to the user’s device capabilities and network speed. It allows rendering to be interruptible.", "userAnswer": "", "hash": "a1b2c3d4e5f60718"},
            { "id": "4", "explanation": "", "question": "What is the purpose of the `useTransition` hook?", "options": ["To let you update the state without blocking the UI, by marking some state updates as 'transitions'.","To create smooth animations and transitions between component states.","To transition from a class component to a functional component.","To manage the transition of data between a parent and child component."], "answer": "To let you update the state without blocking the UI, by marking some state updates as 'transitions'.", "userAnswer": "", "hash": "b2c3d4e5f60708ab"},
            { "id": "5", "explanation": "", "question": "How does React's reconciliation algorithm work?", "options": ["It uses a 'diffing' algorithm to compare the new virtual DOM with the previous one and efficiently update the real DOM only where necessary.","It re-renders the entire component tree on every state change.","It uses a genetic algorithm to find the optimal DOM structure.","It relies on the browser to handle the updates."], "answer": "It uses a 'diffing' algorithm to compare the new virtual DOM with the previous one and efficiently update the real DOM only where necessary.", "userAnswer": "", "hash": "c3d4e5f60708a1bc"},
            { "id": "6", "explanation": "", "question": "What is the purpose of `React.lazy` and `Suspense`?", "options": ["To code-split a React app, allowing you to load components lazily and show a fallback UI while they are being loaded.","To make API requests lazily.","To suspend the rendering of a component until a condition is met.","To create lazy-loaded images."], "answer": "To code-split a React app, allowing you to load components lazily and show a fallback UI while they are being loaded.", "userAnswer": "", "hash": "d4e5f60708a1b2cd"},
            { "id": "7", "explanation": "", "question": "What is the `useImperativeHandle` hook used for?", "options": ["To customize the instance value that is exposed to parent components when using `ref`.","To handle imperative DOM mutations.","To create a reference to a DOM element.","To force a component to re-render."], "answer": "To customize the instance value that is exposed to parent components when using `ref`.", "userAnswer": "", "hash": "e5f60708a1b2c3de"},
            { "id": "8", "explanation": "", "question": "What are render props?", "options": ["A technique for sharing code between React components using a prop whose value is a function that returns a React element.","Props that determine how a component should be rendered.","A way to render props to the DOM.","A deprecated pattern in favor of hooks."], "answer": "A technique for sharing code between React components using a prop whose value is a function that returns a React element.", "userAnswer": "", "hash": "f60708a1b2c3d4e5"},
            { "id": "9", "explanation": "", "question": "How can you optimize the performance of a large list in React?", "options": ["By using techniques like windowing or virtualization with libraries like `react-window` or `react-virtualized`.","By using `React.memo` on the list items.","By paginating the list.","All of the above."], "answer": "All of the above.", "userAnswer": "", "hash": "0708a1b2c3d4e5f6"},
            { "id": "10", "explanation": "", "question": "What is the difference between `PureComponent` and `Component` in class components?", "options": ["`PureComponent` implements `shouldComponentUpdate` with a shallow prop and state comparison.","`PureComponent` is a functional component, and `Component` is a class component.","`PureComponent` does not have a state.","`PureComponent` is faster in all cases."], "answer": "`PureComponent` implements `shouldComponentUpdate` with a shallow prop and state comparison.", "userAnswer": "", "hash": "08a1b2c3d4e5f617"},
            { "id": "11", "explanation": "", "question": "What is hydration in the context of server-side rendering (SSR) with React?", "options": ["The process of attaching event listeners to the DOM and turning the static HTML from the server into a fully interactive React app on the client.","The process of fetching data on the server.","The process of caching the server-rendered HTML.","The process of sending water to the server."], "answer": "The process of attaching event listeners to the DOM and turning the static HTML from the server into a fully interactive React app on the client.", "userAnswer": "", "hash": "a1b2c3d4e5f60719"},
            { "id": "12", "explanation": "", "question": "What is the purpose of the `useDebugValue` hook?", "options": ["To display a label for custom hooks in React DevTools.","To log debug values to the console.","To set a breakpoint in a custom hook.","To get the debug information of a component."], "answer": "To display a label for custom hooks in React DevTools.", "userAnswer": "", "hash": "b2c3d4e5f60708ac"},
            { "id": "13", "explanation": "", "question": "How does React's reconciliation algorithm (diffing algorithm) work, and why is it important for performance?", "options": ["It rebuilds the entire DOM on every state change." ,"It compares the new Virtual DOM tree with the previous one, identifies differences, and then efficiently updates only the changed parts of the real DOM, minimizing costly DOM manipulations." ,"It's only for debugging purposes." ,"It directly compares JSX elements." ], "answer": "It compares the new Virtual DOM tree with the previous one, identifies differences, and then efficiently updates only the changed parts of the real DOM, minimizing costly DOM manipulations.", "userAnswer": "", "hash": "c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5"},
            { "id": "14", "explanation": "", "question": "When would you prefer `useReducer` over `useState` for state management?", "options": ["Always, `useReducer` is superior." ,"When state logic is complex, involves multiple sub-values, or the next state depends on the previous one, especially when updates need to be handled by a predictable 'reducer' function (similar to Redux)." ,"For simple boolean toggles." ,"Only in class components." ], "answer": "When state logic is complex, involves multiple sub-values, or the next state depends on the previous one, especially when updates need to be handled by a predictable 'reducer' function (similar to Redux).", "userAnswer": "", "hash": "d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6"},
            { "id": "15", "explanation": "", "question": "Explain the concept of 'memoization' in React with examples of `React.memo`, `useMemo`, and `useCallback`.", "options": ["Memoization is caching values to avoid re-rendering anything." ,"Memoization is an optimization technique where a component/function/value is cached, and its re-computation is skipped if its dependencies haven't changed. `React.memo` for components, `useMemo` for values, `useCallback` for functions." ,"It's a debugging tool." ,"It causes more re-renders." ], "answer": "Memoization is an optimization technique where a component/function/value is cached, and its re-computation is skipped if its dependencies haven't changed. `React.memo` for components, `useMemo` for values, `useCallback` for functions.", "userAnswer": "", "hash": "e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7"},
            { "id": "16", "explanation": "", "question": "How can you implement server-side rendering (SSR) with React, and what are its benefits?", "options": ["React itself handles SSR automatically." ,"SSR involves rendering React components on the server and sending the static HTML to the client. Benefits include faster initial page load (better perceived performance), improved SEO, and better user experience on slow networks. Frameworks like Next.js simplify this." ,"SSR is only for mobile apps." ,"SSR makes development slower." ], "answer": "SSR involves rendering React components on the server and sending the static HTML to the client. Benefits include faster initial page load (better perceived performance), improved SEO, and better user experience on slow networks. Frameworks like Next.js simplify this.", "userAnswer": "", "hash": "f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8"},
            { "id": "17", "explanation": "", "question": "Describe the concept of 'Concurrent Mode' (or 'Concurrent React') and its potential impact.", "options": ["It makes React run code in parallel on multiple CPU cores." ,"Concurrent Mode allows React to work on multiple tasks simultaneously, prioritize updates, and interrupt/resume rendering. This improves responsiveness by preventing long-running renders from blocking the main thread, leading to smoother user experiences, especially on slower devices." ,"It's a deprecated feature." ,"It's only for server-side rendering." ], "answer": "Concurrent Mode allows React to work on multiple tasks simultaneously, prioritize updates, and interrupt/resume rendering. This improves responsiveness by preventing long-running renders from blocking the main thread, leading to smoother user experiences, especially on slower devices.", "userAnswer": "", "hash": "a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9"},
            { "id": "18", "explanation": "", "question": "How do you handle error boundaries in React, and what problem do they solve?", "options": ["Error boundaries are deprecated." ,"Error boundaries are React components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of crashing the entire application. They are implemented using `componentDidCatch` or `getDerivedStateFromError` in class components." ,"They prevent all errors from happening." ,"They are for handling network errors." ], "answer": "Error boundaries are React components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of crashing the entire application. They are implemented using `componentDidCatch` or `getDerivedStateFromError` in class components.", "userAnswer": "", "hash": "b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0"},
            { "id": "19", "explanation": "", "question": "Discuss the trade-offs between client-side rendering (CSR) and server-side rendering (SSR) for a typical React application.", "options": ["CSR is always better for SEO." ,"CSR is simpler to set up, faster initial interactivity after loading, but slower initial content display and worse SEO without pre-rendering. SSR has faster initial content display, better SEO, but can be more complex to set up and might require more server resources." ,"SSR is always slower." ,"There are no trade-offs; choose based on personal preference." ], "answer": "CSR is simpler to set up, faster initial interactivity after loading, but slower initial content display and worse SEO without pre-rendering. SSR has faster initial content display, better SEO, but can be more complex to set up and might require more server resources.", "userAnswer": "", "hash": "c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1"},
            { "id": "20", "explanation": "", "question": "When might you need to use `useImperativeHandle` with `forwardRef`?", "options": ["To prevent re-renders in child components." ,"To expose specific, limited methods or values from a child component instance to its parent when using refs, rather than exposing the entire child component's internal state or DOM node." ,"To manage asynchronous operations." ,"To replace Redux in large applications." ], "answer": "To expose specific, limited methods or values from a child component instance to its parent when using refs, rather than exposing the entire child component's internal state or DOM node.", "userAnswer": "", "hash": "d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2"},
            { "id": "21", "explanation": "", "question": "Explain the concept of 'Suspense for Data Fetching' in React.", "options": ["It replaces all data fetching libraries." ,"Suspense allows components to \"wait\" for something (e.g., data fetching, code splitting) to load before rendering, providing a fallback UI (like a spinner) while waiting. It simplifies handling loading states and asynchronous operations." ,"It's only for error handling." ,"It's a new state management solution." ], "answer": "Suspense allows components to \"wait\" for something (e.g., data fetching, code splitting) to load before rendering, providing a fallback UI (like a spinner) while waiting. It simplifies handling loading states and asynchronous operations.", "userAnswer": "", "hash": "e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3"},
            { "id": "22", "explanation": "", "question": "What are Portals in React, and when would you use them?", "options": ["Portals are a way to teleport components to different locations in the same component tree." ,"Portals provide a way to render children into a DOM node that exists outside the DOM hierarchy of the parent component. This is useful for modals, tooltips, and popovers to avoid issues with parent overflow/z-index." ,"They are a deprecated feature." ,"They are used for server-side rendering." ], "answer": "Portals provide a way to render children into a DOM node that exists outside the DOM hierarchy of the parent component. This is useful for modals, tooltips, and popovers to avoid issues with parent overflow/z-index.", "userAnswer": "", "hash": "f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4"}
          ]
        }
      ]
    },
    {
      "category": "javascript",
      "id": "4",
      "description": "Test your knowledge across various topics in Javascript. You will get questions that are tailored to test your understanding of the subject",
      "levels": [
        {
          "difficulty": "easy",
          "id": "12",
          "questions": [
            { "id": "0", "explanation": "", "question": "What is the difference between `==` and `===` in JavaScript?", "options": ["`==` performs type coercion, while `===` does not.","`===` performs type coercion, while `==` does not.","They are identical.","`==` is for comparing values, and `===` is for comparing types."], "answer": "`==` performs type coercion, while `===` does not.", "userAnswer": "", "hash": "c3d4e5f60708a1bd"},
            { "id": "1", "explanation": "", "question": "What are the primitive data types in JavaScript?", "options": ["string, number, boolean, null, undefined, symbol, bigint","string, number, boolean, array, object, function","string, integer, float, boolean, null, undefined","char, int, bool, double, object"], "answer": "string, number, boolean, null, undefined, symbol, bigint", "userAnswer": "", "hash": "d4e5f60708a1b2ce"},
            { "id": "2", "explanation": "", "question": "What is a closure in JavaScript?", "options": ["A function that has access to its outer function's scope, even after the outer function has returned.","A function that is closed for modification.","A way to create private variables in an object.","A built-in method for closing a web page."], "answer": "A function that has access to its outer function's scope, even after the outer function has returned.", "userAnswer": "", "hash": "e5f60708a1b2c3df"},
            { "id": "3", "explanation": "", "question": "What does `NaN` stand for, and what is its type?", "options": ["Not a Number, and its type is `number`.","Not a Number, and its type is `NaN`.","Null and None, and its type is `undefined`.","New and Novel, and its type is `object`."], "answer": "Not a Number, and its type is `number`.", "userAnswer": "", "hash": "f60708a1b2c3d4e6"},
            { "id": "4", "explanation": "", "question": "What is the difference between `let`, `const`, and `var`?", "options": ["`var` is function-scoped, while `let` and `const` are block-scoped. `const` cannot be reassigned.","`let` and `const` are hoisted, while `var` is not.","There is no difference; they are interchangeable.","`const` is for constants, `let` is for variables, and `var` is for global variables."], "answer": "`var` is function-scoped, while `let` and `const` are block-scoped. `const` cannot be reassigned.", "userAnswer": "", "hash": "0708a1b2c3d4e5f7"},
            { "id": "5", "explanation": "", "question": "What is hoisting in JavaScript?", "options": ["The behavior where variable and function declarations are moved to the top of their containing scope during the compilation phase.","The process of lifting a value to a higher-order function.","A way to elevate the priority of a function call.","A method for improving the performance of loops."], "answer": "The behavior where variable and function declarations are moved to the top of their containing scope during the compilation phase.", "userAnswer": "", "hash": "08a1b2c3d4e5f618"},
            { "id": "6", "explanation": "", "question": "What is the purpose of the `this` keyword?", "options": ["It refers to the object that is currently executing the function.","It refers to the previous object in the call stack.","It is a reference to the global `window` object.","It refers to the function itself."], "answer": "It refers to the object that is currently executing the function.", "userAnswer": "", "hash": "a1b2c3d4e5f60720"},
            { "id": "7", "explanation": "", "question": "What is an arrow function?", "options": ["A shorter syntax for writing function expressions, which does not have its own `this`, `arguments`, `super`, or `new.target`.","A function that points to a specific memory location.","A function that is always asynchronous.","A function that can only be used for mathematical calculations."], "answer": "A shorter syntax for writing function expressions, which does not have its own `this`, `arguments`, `super`, or `new.target`.", "userAnswer": "", "hash": "b2c3d4e5f60708ad"},
            { "id": "8", "explanation": "", "question": "What is the event loop?", "options": ["A mechanism that allows JavaScript to perform non-blocking operations by offloading them to the system kernel whenever possible, and then executing their callbacks in a queue.","A `for` loop that iterates over events.","A loop that continuously checks for user input.","A way to handle multiple events at the same time."], "answer": "A mechanism that allows JavaScript to perform non-blocking operations by offloading them to the system kernel whenever possible, and then executing their callbacks in a queue.", "userAnswer": "", "hash": "c3d4e5f60708a1be"},
            { "id": "9", "explanation": "", "question": "What is the purpose of the `Array.prototype.map()` method?", "options": ["To create a new array with the results of calling a provided function on every element in the calling array.","To iterate over an array and perform a side effect for each element.","To filter the elements of an array based on a condition.","To reduce the array to a single value."], "answer": "To create a new array with the results of calling a provided function on every element in the calling array.", "userAnswer": "", "hash": "d4e5f60708a1b2cf"},
            { "id": "20", "explanation": "", "question": "Which keyword is used to declare a variable with block scope that can be reassigned?", "options": ["var" ,"const" ,"let" ,"static" ], "answer": "let", "userAnswer": "", "hash": "a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6"},
            { "id": "21", "explanation": "", "question": "What is the result of `typeof null` in JavaScript?", "options": ["null" ,"object" ,"undefined" ,"string" ], "answer": "object", "userAnswer": "", "hash": "b2e2d9a6c7f8e1a0b3c4d5e6f7a8b9c0"},
            { "id": "22", "explanation": "", "question": "How do you correctly write an arrow function with a single parameter?", "options": ["function(x) => { ... }" ,"(x) => { ... }" ,"x => { ... }" ,"{x} => { ... }" ], "answer": "x => { ... }", "userAnswer": "", "hash": "c0746b102c918a902f5a8c2f1f5f2d4e"},
            { "id": "23", "explanation": "", "question": "Which array method adds one or more elements to the end of an array and returns the new length?", "options": ["unshift()" ,"pop()" ,"push()" ,"shift()" ], "answer": "push()", "userAnswer": "", "hash": "d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0"},
            { "id": "24", "explanation": "", "question": "What does `NaN` stand for in JavaScript?", "options": ["Not a Number" ,"No actual Number" ,"Null and Naught" ,"New Arbitrary Number" ], "answer": "Not a Number", "userAnswer": "", "hash": "e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1"},
            { "id": "25", "explanation": "", "question": "Which operator is used for strict equality (checks both value and type)?", "options": ["==" ,"=" ,"===" ,"!=" ], "answer": "===", "userAnswer": "", "hash": "f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2"},
            { "id": "26", "explanation": "", "question": "How do you write a comment in JavaScript that spans multiple lines?", "options": ["// This is a comment" ,"" ,"/* This is a comment */" ,"# This is a comment" ], "answer": "/* This is a comment */", "userAnswer": "", "hash": "a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3"},
            { "id": "27", "explanation": "", "question": "What is the purpose of `console.log()`?", "options": ["To create a pop-up alert." ,"To print output to the browser's console for debugging." ,"To add a new HTML element." ,"To define a new variable." ], "answer": "To print output to the browser's console for debugging.", "userAnswer": "", "hash": "b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4"},
            { "id": "28", "explanation": "", "question": "Which built-in method removes the last element from an array and returns that element?", "options": ["shift()" ,"splice()" ,"pop()" ,"slice()" ], "answer": "pop()", "userAnswer": "", "hash": "c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5"},
            { "id": "29", "explanation": "", "question": "How do you access the first element of an array named `myArray`?", "options": ["myArray[1]" ,"myArray.first()" ,"myArray[0]" ,"myArray.startIndex" ], "answer": "myArray[0]", "userAnswer": "", "hash": "d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6"}
          ]
        },
        {
          "difficulty": "medium",
          "id": "13",
          "questions": [
            { "id": "0", "explanation": "", "question": "Explain the concept of the 'this' keyword in different contexts (global, function, method, constructor, arrow function).", "options": ["Global: window/global object. Function: window/global (strict mode: undefined). Method: the object the method is called on. Constructor: the newly created instance. Arrow Function: the `this` of the enclosing lexical scope.","`this` always refers to the global object.","`this` is determined by where the function is defined, not where it is called.","In arrow functions, `this` is always undefined."], "answer": "Global: window/global object. Function: window/global (strict mode: undefined). Method: the object the method is called on. Constructor: the newly created instance. Arrow Function: the `this` of the enclosing lexical scope.", "userAnswer": "", "hash": "0708a1b2c3d4e5f9"},
            { "id": "1", "explanation": "", "question": "What are Web Workers and how do they help with performance?", "options": ["They are a way to run scripts in background threads, allowing long-running tasks to be executed without blocking the main UI thread.","They are a way to make multiple API requests concurrently.","They are a feature for caching web assets.","They are a way to share memory between different browser tabs."], "answer": "They are a way to run scripts in background threads, allowing long-running tasks to be executed without blocking the main UI thread.", "userAnswer": "", "hash": "08a1b2c3d4e5f620"},
            { "id": "2", "explanation": "", "question": "What is the Temporal Dead Zone (TDZ) in ES6?", "options": ["The period between entering scope and the declaration of a `let` or `const` variable, during which the variable cannot be accessed.","A zone in memory where dead objects are stored before garbage collection.","A specific time of day when JavaScript execution is paused.","A feature for time-travel debugging."], "answer": "The period between entering scope and the declaration of a `let` or `const` variable, during which the variable cannot be accessed.", "userAnswer": "", "hash": "a1b2c3d4e5f60722"},
            { "id": "3", "explanation": "", "question": "What are Generators in JavaScript?", "options": ["Functions that can be paused and resumed, allowing for more control over iteration. They are defined with `function*` and use the `yield` keyword.","Functions that generate random numbers.","Functions that generate other functions.","A way to create infinite loops without crashing the browser."], "answer": "Functions that can be paused and resumed, allowing for more control over iteration. They are defined with `function*` and use the `yield` keyword.", "userAnswer": "", "hash": "b2c3d4e5f60708af"},
            { "id": "4", "explanation": "", "question": "What is tail call optimization?", "options": ["A process where a recursive function call at the very end of a function can be optimized to avoid growing the call stack.","A way to optimize the tail end of an array.","A technique for optimizing asynchronous function calls.","A method for reducing the size of the JavaScript bundle."], "answer": "A process where a recursive function call at the very end of a function can be optimized to avoid growing the call stack.", "userAnswer": "", "hash": "c3d4e5f60708a1c0"},
            { "id": "5", "explanation": "", "question": "What are Proxies in ES6?", "options": ["Objects that are used to define custom behavior for fundamental operations (e.g., property lookup, assignment, enumeration, function invocation).","A way to make secure network requests.","A feature for creating private properties in objects.","A way to create a proxy for another website."], "answer": "Objects that are used to define custom behavior for fundamental operations (e.g., property lookup, assignment, enumeration, function invocation).", "userAnswer": "", "hash": "d4e5f60708a1b2d1"},
            { "id": "6", "explanation": "", "question": "What is the difference between microtasks and macrotasks in the event loop?", "options": ["Microtasks (e.g., `Promise.then`, `queueMicrotask`) have a higher priority and are executed before the next macrotask (e.g., `setTimeout`, `setInterval`).","Macrotasks are for larger tasks, and microtasks are for smaller tasks.","Microtasks run on a separate thread, while macrotasks run on the main thread.","There is no difference; they are just different names for the same thing."], "answer": "Microtasks (e.g., `Promise.then`, `queueMicrotask`) have a higher priority and are executed before the next macrotask (e.g., `setTimeout`, `setInterval`).", "userAnswer": "", "hash": "e5f60708a1b2c3e2"},
            { "id": "7", "explanation": "", "question": "What is the purpose of `Symbol` in ES6?", "options": ["To create unique and immutable primitive values that can be used as the key for an object property, avoiding naming collisions.","To create symbols for mathematical equations.","A way to represent icons and special characters.","A feature for creating symbolic links between objects."], "answer": "To create unique and immutable primitive values that can be used as the key for an object property, avoiding naming collisions.", "userAnswer": "", "hash": "f60708a1b2c3d4e9"},
            { "id": "8", "explanation": "", "question": "What is tree shaking?", "options": ["A form of dead code elimination where unused exports are removed from the final bundle, often used with ES modules.","A way to visualize the component tree of a React application.","A technique for balancing a binary search tree.","A method for animating DOM elements to look like they are shaking."], "answer": "A form of dead code elimination where unused exports are removed from the final bundle, often used with ES modules.", "userAnswer": "", "hash": "0708a1b2c3d4e5fa"},
            { "id": "9", "explanation": "", "question": "What is the `Atomics` object in JavaScript?", "options": ["An object that provides atomic operations for `SharedArrayBuffer` objects, ensuring that operations are performed without interruption.","An object for performing atomic CSS transitions.","A way to create atomic components in React.","A library for working with nuclear physics simulations."], "answer": "An object that provides atomic operations for `SharedArrayBuffer` objects, ensuring that operations are performed without interruption.", "userAnswer": "", "hash": "08a1b2c3d4e5f621"},
            { "id": "10", "explanation": "", "question": "What is prototypal inheritance?", "options": ["A feature in JavaScript where objects can inherit properties and methods from other objects.","A way to create classes in JavaScript.","A design pattern for creating objects.","A method for copying properties from one object to another."], "answer": "A feature in JavaScript where objects can inherit properties and methods from other objects.", "userAnswer": "", "hash": "e5f60708a1b2c3e0"},
            { "id": "11", "explanation": "", "question": "What are Promises in JavaScript?", "options": ["An object that represents the eventual completion (or failure) of an asynchronous operation and its resulting value.","A way to write synchronous code that looks asynchronous.","A guarantee that a function will be executed.","A syntax for handling callbacks."], "answer": "An object that represents the eventual completion (or failure) of an asynchronous operation and its resulting value.", "userAnswer": "", "hash": "f60708a1b2c3d4e7"},
            { "id": "12", "explanation": "", "question": "What is the difference between `call`, `apply`, and `bind`?", "options": ["`call` and `apply` invoke the function immediately, while `bind` returns a new function. `call` takes arguments individually, while `apply` takes them as an array.","`bind` and `apply` invoke the function immediately, while `call` returns a new function.","They are all used to set the `this` value of a function, but they have different syntax.","`call` is for calling functions, `apply` is for applying styles, and `bind` is for binding data."], "answer": "`call` and `apply` invoke the function immediately, while `bind` returns a new function. `call` takes arguments individually, while `apply` takes them as an array.", "userAnswer": "", "hash": "0708a1b2c3d4e5f8"},
            { "id": "13", "explanation": "", "question": "What are higher-order functions?", "options": ["Functions that take other functions as arguments or return functions as their result.","Functions with a higher execution priority.","Functions that are defined at the top level of the scope.","Functions that operate on higher-dimensional arrays."], "answer": "Functions that take other functions as arguments or return functions as their result.", "userAnswer": "", "hash": "08a1b2c3d4e5f619"},
            { "id": "14", "explanation": "", "question": "What is currying in JavaScript?", "options": ["The process of transforming a function that takes multiple arguments into a sequence of functions that each take a single argument.","A way to add seasoning to your code.","A technique for memoizing functions.","A method for handling asynchronous operations."], "answer": "The process of transforming a function that takes multiple arguments into a sequence of functions that each take a single argument.", "userAnswer": "", "hash": "a1b2c3d4e5f60721"},
            { "id": "15", "explanation": "", "question": "What is the purpose of `async/await`?", "options": ["To provide syntactic sugar for working with Promises, making asynchronous code look more like synchronous code.","To make JavaScript code run faster.","To create a new thread for executing code.","To replace the event loop."], "answer": "To provide syntactic sugar for working with Promises, making asynchronous code look more like synchronous code.", "userAnswer": "", "hash": "b2c3d4e5f60708ae"},
            { "id": "16", "explanation": "", "question": "What are JavaScript modules?", "options": ["A way to split JavaScript code into reusable, organized files. They can be imported and exported using the `import` and `export` keywords.","A way to create plugins for JavaScript libraries.","A feature for managing memory in JavaScript.","A way to compile JavaScript to a lower-level language."], "answer": "A way to split JavaScript code into reusable, organized files. They can be imported and exported using the `import` and `export` keywords.", "userAnswer": "", "hash": "c3d4e5f60708a1bf"},
            { "id": "17", "explanation": "", "question": "What is event delegation?", "options": ["A technique where you attach a single event listener to a parent element to handle events for all of its children.","A way to pass events from a parent component to a child component.","A method for creating custom events.","A way to delegate event handling to a web worker."], "answer": "A technique where you attach a single event listener to a parent element to handle events for all of its children.", "userAnswer": "", "hash": "d4e5f60708a1b2d0"},
            { "id": "18", "explanation": "", "question": "What is the difference between `null` and `undefined`?", "options": ["`undefined` means a variable has been declared but not yet assigned a value, while `null` is an assignment value that represents the intentional absence of any object value.","`null` means a variable has been declared but not yet assigned a value, while `undefined` is an assignment value.","They are the same.","`null` is a primitive type, and `undefined` is an object."], "answer": "`undefined` means a variable has been declared but not yet assigned a value, while `null` is an assignment value that represents the intentional absence of any object value.", "userAnswer": "", "hash": "e5f60708a1b2c3e1"},
            { "id": "19", "explanation": "", "question": "What is memoization?", "options": ["An optimization technique where the results of expensive function calls are cached and returned when the same inputs occur again.","A way to store data in the browser's memory.","A method for compressing data.","A technique for creating self-aware functions."], "answer": "An optimization technique where the results of expensive function calls are cached and returned when the same inputs occur again.", "userAnswer": "", "hash": "f60708a1b2c3d4e8"},
            { "id": "20", "explanation": "", "question": "Explain the concept of 'hoisting' in JavaScript.", "options": ["Moving variables to the top of a function during execution." ,"JavaScript's default behavior of moving declarations to the top of the current scope during the compilation phase, but not the assignments." ,"It only applies to `const` declarations." ,"It's a type of error handling." ], "answer": "JavaScript's default behavior of moving declarations to the top of the current scope during the compilation phase, but not the assignments.", "userAnswer": "", "hash": "e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7"},
            { "id": "21", "explanation": "", "question": "What is the difference between `null` and `undefined` in JavaScript?", "options": ["`null` means an unassigned variable; `undefined` means an empty value." ,"`undefined` means a variable has been declared but not yet assigned a value, or a missing function argument. `null` is an assignment value, indicating the intentional absence of any object value." ,"They are interchangeable." ,"`null` is a primitive, `undefined` is an object." ], "answer": "`undefined` means a variable has been declared but not yet assigned a value, or a missing function argument. `null` is an assignment value, indicating the intentional absence of any object value.", "userAnswer": "", "hash": "f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8"},
            { "id": "22", "explanation": "", "question": "How does event delegation work in JavaScript, and what are its benefits?", "options": ["It's a way to send events directly to the server." ,"Instead of attaching event listeners to individual child elements, a single event listener is attached to a common parent element. It reduces memory usage and simplifies dynamic element handling." ,"It prevents events from propagating." ,"It is only for click events." ], "answer": "Instead of attaching event listeners to individual child elements, a single event listener is attached to a common parent element. It reduces memory usage and simplifies dynamic element handling.", "userAnswer": "", "hash": "a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9"},
            { "id": "23", "explanation": "", "question": "What is a closure in JavaScript?", "options": ["A type of loop." ,"A function bundled together with references to its surrounding state (the lexical environment). It gives you access to an outer function's scope from an inner function even after the outer function has finished executing." ,"A way to close a web page." ,"A method to restrict variable access." ], "answer": "A function bundled together with references to its surrounding state (the lexical environment). It gives you access to an outer function's scope from an inner function even after the outer function has finished executing.", "userAnswer": "", "hash": "b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0"},
            { "id": "24", "explanation": "", "question": "Describe the concept of 'event bubbling' and 'event capturing'.", "options": ["They are unrelated to DOM events." ,"Bubbling is when an event propagates from the target element up to the document root. Capturing is when an event propagates from the document root down to the target element (rarely used in practice)." ,"Bubbling is for mouse events, capturing for keyboard events." ,"They are two names for the same process." ], "answer": "Bubbling is when an event propagates from the target element up to the document root. Capturing is when an event propagates from the document root down to the target element (rarely used in practice).", "userAnswer": "", "hash": "c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1"},
            { "id": "25", "explanation": "", "question": "What is the difference between `let`, `const`, and `var` in terms of scope and reassignment?", "options": ["`var` is block-scoped, `let` and `const` are function-scoped." ,"`var` is function-scoped and can be reassigned. `let` is block-scoped and can be reassigned. `const` is block-scoped and cannot be reassigned after initial declaration." ,"`const` can be reassigned, `let` cannot." ,"They are all interchangeable." ], "answer": "`var` is function-scoped and can be reassigned. `let` is block-scoped and can be reassigned. `const` is block-scoped and cannot be reassigned after initial declaration.", "userAnswer": "", "hash": "d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2"},
            { "id": "26", "explanation": "", "question": "Explain asynchronous JavaScript and how Promises help manage it.", "options": ["Asynchronous JavaScript runs code line by line, synchronously." ,"Asynchronous JavaScript allows code to run in the background without blocking the main thread (e.g., fetching data). Promises are objects representing the eventual completion or failure of an asynchronous operation, making it easier to manage callbacks and avoid 'callback hell'." ,"Promises are only for error handling." ,"Asynchronous JavaScript is only used in Node.js." ], "answer": "Asynchronous JavaScript allows code to run in the background without blocking the main thread (e.g., fetching data). Promises are objects representing the eventual completion or failure of an asynchronous operation, making it easier to manage callbacks and avoid 'callback hell'.", "userAnswer": "", "hash": "e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3"},
            { "id": "27", "explanation": "", "question": "What is the `this` keyword in JavaScript, and how does its value change?", "options": ["`this` always refers to the global object." ,"`this` refers to the object that is currently executing the code. Its value depends on how a function is called (e.g., global context, method call, constructor call, explicit binding with `call`/`apply`/`bind`, or `undefined` in strict mode for unbound functions)." ,"`this` always refers to the function itself." ,"`this` is a reserved keyword for declaring constants." ], "answer": "`this` refers to the object that is currently executing the code. Its value depends on how a function is called (e.g., global context, method call, constructor call, explicit binding with `call`/`apply`/`bind`, or `undefined` in strict mode for unbound functions).", "userAnswer": "", "hash": "f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4"},
            { "id": "28", "explanation": "", "question": "What are template literals (template strings), and what are their benefits?", "options": ["A way to define HTML templates only." ,"String literals allowing embedded expressions, multi-line strings, and string interpolation. They are enclosed by backticks (`) and improve readability and flexibility over traditional string concatenation." ,"They are only for numbers." ,"They are a deprecated feature." ], "answer": "String literals allowing embedded expressions, multi-line strings, and string interpolation. They are enclosed by backticks (`) and improve readability and flexibility over traditional string concatenation.", "userAnswer": "", "hash": "a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5"},
            { "id": "29", "explanation": "", "question": "What is destructuring assignment in JavaScript?", "options": ["A way to delete variables." ,"A syntax that allows you to unpack values from arrays or properties from objects into distinct variables, making code more concise and readable." ,"A method to combine arrays." ,"A type of loop." ], "answer": "A syntax that allows you to unpack values from arrays or properties from objects into distinct variables, making code more concise and readable.", "userAnswer": "", "hash": "b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6"}
          ]
        },
        {
          "difficulty": "hard",
          "id": "14",
          "questions": [
            { "id": "0", "explanation": "", "question": "Explain the JavaScript event loop, microtask queue, and macrotask queue.", "options": ["The event loop manages synchronous code execution only." ,"The event loop continuously checks the call stack and queues. When the call stack is empty, it processes tasks from the microtask queue (e.g., Promises, `queueMicrotask`) before checking the macrotask queue (e.g., `setTimeout`, `setInterval`, I/O)." ,"Microtasks run before macrotasks, but only if the call stack is full." ,"There is only one queue for all asynchronous tasks." ], "answer": "The event loop continuously checks the call stack and queues. When the call stack is empty, it processes tasks from the microtask queue (e.g., Promises, `queueMicrotask`) before checking the macrotask queue (e.g., `setTimeout`, `setInterval`, I/O).", "userAnswer": "", "hash": "c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7"},
            { "id": "1", "explanation": "", "question": "Describe prototypal inheritance in JavaScript and how it differs from classical inheritance.", "options": ["JavaScript uses classical inheritance with classes." ,"In prototypal inheritance, objects inherit directly from other objects via a prototype chain, rather than from classes. Each object has a prototype object from which it inherits methods and properties. Classical inheritance is class-based with a hierarchy." ,"They are the same concept with different names." ,"Prototypal inheritance is only for functions." ], "answer": "In prototypal inheritance, objects inherit directly from other objects via a prototype chain, rather than from classes. Each object has a prototype object from which it inherits methods and properties. Classical inheritance is class-based with a hierarchy.", "userAnswer": "", "hash": "d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8"},
            { "id": "2", "explanation": "", "question": "What is the concept of 'IIFE' (Immediately Invoked Function Expression) and its use cases?", "options": ["A function that runs on a timer." ,"An IIFE is a JavaScript function that runs as soon as it is defined. It creates a private scope for variables, preventing pollution of the global scope, useful for module patterns and avoiding naming conflicts." ,"It's a function that returns another function." ,"It's only for asynchronous operations." ], "answer": "An IIFE is a JavaScript function that runs as soon as it is defined. It creates a private scope for variables, preventing pollution of the global scope, useful for module patterns and avoiding naming conflicts.", "userAnswer": "", "hash": "e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9"},
            { "id": "3", "explanation": "", "question": "Discuss the potential issues with floating-point arithmetic in JavaScript and common ways to mitigate them.", "options": ["JavaScript handles all numbers perfectly without issues." ,"JavaScript uses 64-bit floating-point numbers (IEEE 754), leading to precision issues with decimals (e.g., `0.1 + 0.2 !== 0.3`). Mitigation includes using integer arithmetic for financial calculations, or libraries like `Decimal.js` or `Big.js`." ,"Issues only occur with integers." ,"Just round all numbers to two decimal places." ], "answer": "JavaScript uses 64-bit floating-point numbers (IEEE 754), leading to precision issues with decimals (e.g., `0.1 + 0.2 !== 0.3`). Mitigation includes using integer arithmetic for financial calculations, or libraries like `Decimal.js` or `Big.js`.", "userAnswer": "", "hash": "f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0"},
            { "id": "4", "explanation": "", "question": "What are Generators in JavaScript, and what problem do they solve?", "options": ["Functions that generate random numbers." ,"Functions that can be paused and resumed, yielding (returning) multiple values over time using the `yield` keyword. They simplify working with iterators and asynchronous code (e.g., creating custom iterators or controlling complex asynchronous flows with `async/await` like syntax before it existed)." ,"They are a replacement for Promises." ,"They only work with arrays." ], "answer": "Functions that can be paused and resumed, yielding (returning) multiple values over time using the `yield` keyword. They simplify working with iterators and asynchronous code (e.g., creating custom iterators or controlling complex asynchronous flows with `async/await` like syntax before it existed).", "userAnswer": "", "hash": "a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1"},
            { "id": "5", "explanation": "", "question": "Explain the concept of 'pure functions' in JavaScript and their benefits.", "options": ["Functions that do not use any parameters." ,"Functions that, given the same inputs, will always return the same output, and produce no side effects (they don't modify external state). Benefits include easier testing, debugging, parallelism, and predictability." ,"Functions that are only used in functional programming." ,"Functions that throw an error if inputs are invalid." ], "answer": "Functions that, given the same inputs, will always return the same output, and produce no side effects (they don't modify external state). Benefits include easier testing, debugging, parallelism, and predictability.", "userAnswer": "", "hash": "b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2"},
            { "id": "6", "explanation": "", "question": "How do `call`, `apply`, and `bind` methods differ in how they affect the `this` context of a function?", "options": ["They are all identical." ,"`call()` invokes a function immediately with `this` set to a specific value and arguments passed individually. `apply()` is similar but takes arguments as an array. `bind()` returns a new function with `this` permanently bound, without immediately invoking it." ,"`bind()` invokes the function, `call()` and `apply()` return new functions." ,"They only work with arrow functions." ], "answer": "`call()` invokes a function immediately with `this` set to a specific value and arguments passed individually. `apply()` is similar but takes arguments as an array. `bind()` returns a new function with `this` permanently bound, without immediately invoking it.", "userAnswer": "", "hash": "c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3"},
            { "id": "7", "explanation": "", "question": "Discuss the advantages and disadvantages of using mutable vs. immutable data structures in JavaScript.", "options": ["Mutable data structures are always preferred for performance." ,"Mutable: easy to modify, potentially better performance for in-place changes, but can lead to unexpected side effects and make debugging harder. Immutable: predictable state, easier debugging, better for concurrent programming, but might involve more memory overhead for copies." ,"Immutable data is faster to modify." ,"JavaScript does not support immutable data." ], "answer": "Mutable: easy to modify, potentially better performance for in-place changes, but can lead to unexpected side effects and make debugging harder. Immutable: predictable state, easier debugging, better for concurrent programming, but might involve more memory overhead for copies.", "userAnswer": "", "hash": "d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4"},
            { "id": "8", "explanation": "", "question": "What is the 'Temporal Dead Zone' (TDZ) in JavaScript?", "options": ["A specific time of day when JavaScript execution is paused." ,"The period between entering a scope where `let` or `const` variables are declared and the actual declaration being evaluated. Accessing them during this time results in a `ReferenceError`." ,"A zone where `var` variables are hoisted." ,"It only applies to global variables." ], "answer": "The period between entering a scope where `let` or `const` variables are declared and the actual declaration being evaluated. Accessing them during this time results in a `ReferenceError`.", "userAnswer": "", "hash": "e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5"},
            { "id": "9", "explanation": "", "question": "Explain the concept of `Proxy` and `Reflect` in ES6.", "options": ["They are for server-side routing." ,"`Proxy` allows you to define custom behavior for fundamental operations (e.g., property lookup, assignment, function invocation). `Reflect` is a built-in object that provides methods for interceptable JavaScript operations, often used in conjunction with `Proxy` handlers." ,"They are deprecated features." ,"They are alternatives to `Promise`." ], "answer": "`Proxy` allows you to define custom behavior for fundamental operations (e.g., property lookup, assignment, function invocation). `Reflect` is a built-in object that provides methods for interceptable JavaScript operations, often used in conjunction with `Proxy` handlers.", "userAnswer": "", "hash": "f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6"}
          ]
        }
      ]
    },
    {
      "category": "typescript",
      "id": "5",
      "description": "Test your knowledge across various topics in Typescript. You will get questions that are tailored to test your understanding of the subject",
      "levels": [
        {
           "difficulty": "easy",
           "id": "15",
           "questions": [
              { "id": "0", "explanation": "", "question": "What is TypeScript?", "options": ["A typed superset of JavaScript that compiles to plain JavaScript.","A new version of JavaScript.","A linter for JavaScript.","A framework for building web applications."], "answer": "A typed superset of JavaScript that compiles to plain JavaScript.", "userAnswer": "", "hash": "a1b2c3d4e5f60723"},
              { "id": "1", "explanation": "", "question": "How do you define a variable with a specific type in TypeScript?", "options": ["let myVar: string = 'hello';","let myVar = string('hello');","string myVar = 'hello';","let myVar = 'hello' as string;"], "answer": "let myVar: string = 'hello';", "userAnswer": "", "hash": "b2c3d4e5f60708b0"},
              { "id": "2", "explanation": "", "question": "What are the basic types in TypeScript?", "options": ["string, number, boolean, array, object, any, null, undefined, void, never","string, int, float, bool, array, object","All JavaScript types are also TypeScript types.","char, short, long, double, string"], "answer": "string, number, boolean, array, object, any, null, undefined, void, never", "userAnswer": "", "hash": "c3d4e5f60708a1c1"},
              { "id": "3", "explanation": "", "question": "What is an interface in TypeScript?", "options": ["A way to define the shape of an object, specifying the types of its properties.","A special type of class that cannot be instantiated.","A way to create a user interface.","A connection point between two modules."], "answer": "A way to define the shape of an object, specifying the types of its properties.", "userAnswer": "", "hash": "d4e5f60708a1b2d2"},
              { "id": "4", "explanation": "", "question": "How do you define an array of numbers in TypeScript?", "options": ["let myArray: number[] = [1, 2, 3];","let myArray: Array<number> = [1, 2, 3];","Both a and b are correct.","let myArray = [1, 2, 3] as number[];"], "answer": "Both a and b are correct.", "userAnswer": "", "hash": "e5f60708a1b2c3e3"},
              { "id": "5", "explanation": "", "question": "What is the `any` type in TypeScript?", "options": ["A type that can be any type of value, effectively opting out of type checking for that variable.","A type for a variable that can hold multiple types.","A type for a variable that has not yet been assigned a value.","A placeholder type for generics."], "answer": "A type that can be any type of value, effectively opting out of type checking for that variable.", "userAnswer": "", "hash": "f60708a1b2c3d4ea"},
              { "id": "6", "explanation": "", "question": "How do you define a function with typed arguments and a return type in TypeScript?", "options": ["function add(a: number, b: number): number { return a + b; }","function add(a, b) { return a + b; } as (a: number, b: number) => number;","function add<number>(a, b) { return a + b; }","function add(a: number, b: number) -> number { return a + b; }"], "answer": "function add(a: number, b: number): number { return a + b; }", "userAnswer": "", "hash": "0708a1b2c3d4e5fb"},
              { "id": "7", "explanation": "", "question": "What is a tuple in TypeScript?", "options": ["An array with a fixed number of elements whose types are known.","A special type of object with a fixed set of keys.","A data structure that holds key-value pairs.","A type that can be one of several types."], "answer": "An array with a fixed number of elements whose types are known.", "userAnswer": "", "hash": "08a1b2c3d4e5f622"},
              { "id": "8", "explanation": "", "question": "What is an Enum in TypeScript?", "options": ["A way of giving more friendly names to sets of numeric values.","A way to enumerate the properties of an object.","A type for a list of strings.","A feature for creating immutable objects."], "answer": "A way of giving more friendly names to sets of numeric values.", "userAnswer": "", "hash": "a1b2c3d4e5f60724"},
              { "id": "9", "explanation": "", "question": "How do you compile a TypeScript file (`.ts`) to a JavaScript file (`.js`)?", "options": ["Using the TypeScript compiler command: `tsc filename.ts`","It is compiled automatically by the browser.","By renaming the file from `.ts` to `.js`.","Using the `node filename.ts` command."], "answer": "Using the TypeScript compiler command: `tsc filename.ts`", "userAnswer": "", "hash": "b2c3d4e5f60708b1"},
              { "id": "10", "explanation": "", "question": "What is TypeScript primarily?", "options": ["A new programming language entirely separate from JavaScript." ,"A superset of JavaScript that adds optional static typing." ,"A framework for building web applications." ,"A database query language." ], "answer": "A superset of JavaScript that adds optional static typing.", "userAnswer": "", "hash": "a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6"},
              { "id": "11", "explanation": "", "question": "Which command is used to compile TypeScript code into JavaScript?", "options": ["npm run build" ,"tsc" ,"node compile" ,"ts-node" ], "answer": "tsc", "userAnswer": "", "hash": "b2e2d9a6c7f8e1a0b3c4d5e6f7a8b9c0"},
              { "id": "12", "explanation": "", "question": "How do you declare a variable as a string type in TypeScript?", "options": ["let name = 'Alice';" ,"let name: string = 'Alice';" ,"const string name = 'Alice';" ,"var name as string = 'Alice';" ], "answer": "let name: string = 'Alice';", "userAnswer": "", "hash": "c0746b102c918a902f5a8c2f1f5f2d4e"},
              { "id": "13", "explanation": "", "question": "What is an 'interface' in TypeScript?", "options": ["A way to define a new class." ,"A construct that defines the shape of an object or class, providing type-checking for properties and methods without implementing them." ,"A built-in data type." ,"A way to create HTML elements." ], "answer": "A construct that defines the shape of an object or class, providing type-checking for properties and methods without implementing them.", "userAnswer": "", "hash": "d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0"},
              { "id": "14", "explanation": "", "question": "Which file typically configures a TypeScript project?", "options": ["package.json" ,"index.html" ,"tsconfig.json" ,"app.js" ], "answer": "tsconfig.json", "userAnswer": "", "hash": "e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1"},
              { "id": "15", "explanation": "", "question": "What does `any` type in TypeScript signify?", "options": ["It means the variable can only be a number or a string." ,"It indicates that the variable can hold any type of value, effectively opting out of type-checking for that variable." ,"It is a type that can only be null or undefined." ,"It represents an empty object." ], "answer": "It indicates that the variable can hold any type of value, effectively opting out of type-checking for that variable.", "userAnswer": "", "hash": "f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2"},
              { "id": "16", "explanation": "", "question": "How do you define a function that takes a number and returns a string in TypeScript?", "options": ["function convert(num: any): any { return String(num); }" ,"function convert(num: number): string { return String(num); }" ,"function convert(num): string { return String(num); }" ,"function convert(num: string): number { return Number(num); }" ], "answer": "function convert(num: number): string { return String(num); }", "userAnswer": "", "hash": "a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3"},
              { "id": "17", "explanation": "", "question": "What is a 'union type' in TypeScript?", "options": ["A type that combines multiple arrays." ,"A type that can be one of several types (e.g., `string | number`)." ,"A type that is always a string." ,"A type that defines a new class." ], "answer": "A type that can be one of several types (e.g., `string | number`).", "userAnswer": "", "hash": "b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4"},
              { "id": "18", "explanation": "", "question": "Which keyword is used to create an enumeration in TypeScript?", "options": ["enum" ,"type" ,"interface" ,"const" ], "answer": "enum", "userAnswer": "", "hash": "c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5"},
              { "id": "19", "explanation": "", "question": "What is the benefit of using TypeScript for large-scale applications?", "options": ["It automatically fixes all runtime errors." ,"Improved code maintainability, early error detection (at compile time), better tooling support, and enhanced collaboration due to clear type definitions." ,"It makes JavaScript faster." ,"It reduces the size of the final JavaScript bundle." ], "answer": "Improved code maintainability, early error detection (at compile time), better tooling support, and enhanced collaboration due to clear type definitions.", "userAnswer": "", "hash": "d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6"},
              { "id": "20", "explanation": "", "question": "What is TypeScript?", "options": ["A database language","A CSS preprocessor","A typed superset of JavaScript","A version of Java"], "answer": "A typed superset of JavaScript", "userAnswer": "", "hash": "118027de436cf08fa156a065a430db0aea00e5b5068f29d5e033266c398bbf00"},
              { "id": "21", "explanation": "", "question": "Which extension is used for TypeScript files?", "options": [".js",".ts",".tsc",".jsx"], "answer": ".ts", "userAnswer": "", "hash": "2768cb241344baba06005c023d358656264e7d2bf38f9593f9326a6012b12f7b"},
              { "id": "22", "explanation": "", "question": "How do you define a variable with an explicit type in TypeScript?", "options": ["let x = number;","let x: number;","number x = let;","x: number = let;"], "answer": "let x: number;", "userAnswer": "", "hash": "8a3c9681d34f336edbbf93335ba3dd31f577387ec214abc4adb9f2e49d5431af"},
              { "id": "23", "explanation": "", "question": "Which of the following is a valid TypeScript type?", "options": ["float","integer","boolean","char"], "answer": "boolean", "userAnswer": "", "hash": "8040c1e230bed60d109ff314fc8e7fadcf307889596c2ee9bb3c60f8f706b375"},
              { "id": "24", "explanation": "", "question": "What does the 'any' type represent in TypeScript?", "options": ["Only string values","An unknown type","A type that can hold any value","A type that throws errors"], "answer": "A type that can hold any value", "userAnswer": "", "hash": "30e49b50ce583314265d121e90b795519a30d56f2be7746dbd9213da98f60adf"},
              { "id": "25", "explanation": "", "question": "What command compiles TypeScript to JavaScript?", "options": ["tsc","tsrun","compile-ts","tscompile"], "answer": "tsc", "userAnswer": "", "hash": "2e951d9e83e2a206e4159dd23b1cff3f8c2dbec9d0e93f0207632f51ae5ee4ae"},
              { "id": "26", "explanation": "", "question": "Which keyword is used to define an interface in TypeScript?", "options": ["interface","type","struct","schema"], "answer": "interface", "userAnswer": "", "hash": "3ec2ad807c06245f62bf19d9d438816cca6dea256e0b0d4c55cc6cf5ebd4fd4b"},
              { "id": "27", "explanation": "", "question": "Which feature of TypeScript helps catch errors during development?", "options": ["Dynamic typing","Runtime type inference","Static type checking","Hot module replacement"], "answer": "Static type checking", "userAnswer": "", "hash": "aeedad208c0cac06ee07b7a9c030434c13d60e8a9b06f9bb6b51ee46411d0d85"},
              { "id": "28", "explanation": "", "question": "Which of the following is NOT a valid TypeScript primitive type?", "options": ["string","number","boolean","character"], "answer": "character", "userAnswer": "", "hash": "7a10542abd17dfa77e0768d001042089b101e8521f3a1f8ffd4dc1545bb0cc1b"},
              { "id": "29", "explanation": "", "question": "Which of the following keywords allows type aliases in TypeScript?", "options": ["alias","typedef","type","define"], "answer": "type", "userAnswer": "", "hash": "2607dca502de2cb5528b0cfc26f2e4add752b3856ed62829914f05bd2918ea78"}
           ]
        },
        {
          "difficulty": "medium",
          "id": "16",
          "questions": [
            { "id": "0", "explanation": "", "question": "What is the difference between an `interface` and a `type` alias in TypeScript?", "options": ["Interfaces can be extended and implemented by classes, and can be merged. Type aliases are more flexible and can represent unions, intersections, and primitives.","Interfaces are for objects, and type aliases are for functions.","There is no significant difference; they can be used interchangeably.","Type aliases are the modern way to define types, and interfaces are legacy."], "answer": "Interfaces can be extended and implemented by classes, and can be merged. Type aliases are more flexible and can represent unions, intersections, and primitives.", "userAnswer": "", "hash": "c3d4e5f60708a1c2"},
            { "id": "1", "explanation": "", "question": "What are generics in TypeScript?", "options": ["A way to create reusable components that can work with a variety of types rather than a single one.","A way to generate types automatically.","A type that can be any type.","A feature for creating generic classes that can be extended."], "answer": "A way to create reusable components that can work with a variety of types rather than a single one.", "userAnswer": "", "hash": "d4e5f60708a1b2d3"},
            { "id": "2", "explanation": "", "question": "What is a union type in TypeScript?", "options": ["A type that can be one of several types, using the `|` operator.","A type that combines multiple types into one, using the `&` operator.","A type for an array where all elements are of the same type.","A way to unite multiple interfaces into one."], "answer": "A type that can be one of several types, using the `|` operator.", "userAnswer": "", "hash": "e5f60708a1b2c3e4"},
            { "id": "3", "explanation": "", "question": "What are type guards in TypeScript?", "options": ["Expressions that perform a runtime check that guarantees the type in some scope, often used with union types.","A way to protect your types from being modified.","A feature for securing your TypeScript code.","A linting rule for enforcing type safety."], "answer": "Expressions that perform a runtime check that guarantees the type in some scope, often used with union types.", "userAnswer": "", "hash": "f60708a1b2c3d4eb"},
            { "id": "4", "explanation": "", "question": "What is the `never` type in TypeScript?", "options": ["A type that represents the type of values that never occur, for example, a function that always throws an error or has an infinite loop.","An alias for the `null` type.","A type that should never be used.","A type for a variable that has not been initialized."], "answer": "A type that represents the type of values that never occur, for example, a function that always throws an error or has an infinite loop.", "userAnswer": "", "hash": "0708a1b2c3d4e5fc"},
            { "id": "5", "explanation": "", "question": "What is the purpose of the `as` keyword in TypeScript?", "options": ["To perform a type assertion, telling the compiler to treat a value as a different type.","To create an alias for a type.","To define an asynchronous function.","To import a module with a different name."], "answer": "To perform a type assertion, telling the compiler to treat a value as a different type.", "userAnswer": "", "hash": "08a1b2c3d4e5f623"},
            { "id": "6", "explanation": "", "question": "What are mapped types in TypeScript?", "options": ["A way to create new types by transforming the properties of an existing type.","A type for a key-value map.","A way to map one type to another.","A feature for creating geographic maps with TypeScript."], "answer": "A way to create new types by transforming the properties of an existing type.", "userAnswer": "", "hash": "a1b2c3d4e5f60725"},
            { "id": "7", "explanation": "", "question": "What is the difference between `unknown` and `any`?", "options": ["`unknown` is a type-safe counterpart of `any`. You cannot perform any operations on a value of type `unknown` without first performing a type check or assertion.","`any` is a type-safe counterpart of `unknown`.","They are identical.","`unknown` is for values that are not yet known, while `any` is for values that can be anything."], "answer": "`unknown` is a type-safe counterpart of `any`. You cannot perform any operations on a value of type `unknown` without first performing a type check or assertion.", "userAnswer": "", "hash": "b2c3d4e5f60708b2"},
            { "id": "8", "explanation": "", "question": "What are decorators in TypeScript?", "options": ["A special kind of declaration that can be attached to a class declaration, method, accessor, property, or parameter to modify its behavior.","A way to add comments to your code.","A feature for styling components.","A way to create higher-order functions."], "answer": "A special kind of declaration that can be attached to a class declaration, method, accessor, property, or parameter to modify its behavior.", "userAnswer": "", "hash": "c3d4e5f60708a1c3"},
            { "id": "9", "explanation": "", "question": "What is the `tsconfig.json` file?", "options": ["A file that specifies the root files and the compiler options required to compile a TypeScript project.","A file that contains the JSON schema for a TypeScript project.","A file that lists the dependencies of a TypeScript project.","A file that configures the TypeScript linter."], "answer": "A file that specifies the root files and the compiler options required to compile a TypeScript project.", "userAnswer": "", "hash": "d4e5f60708a1b2d4"},
            { "id": "10", "explanation": "", "question": "Explain the difference between `interface` and `type` aliases in TypeScript.", "options": ["`interface` is for classes, `type` is for objects." ,"`interface` can be implemented by classes and can be merged (declaration merging), while `type` aliases cannot be implemented or merged, but can represent more complex types like union types and tuples." ,"They are completely interchangeable." ,"`type` is for primitive types only." ], "answer": "`interface` can be implemented by classes and can be merged (declaration merging), while `type` aliases cannot be implemented or merged, but can represent more complex types like union types and tuples.", "userAnswer": "", "hash": "e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7"},
            { "id": "11", "explanation": "", "question": "What is 'Type Inference' in TypeScript?", "options": ["A method to explicitly declare all types." ,"TypeScript's ability to automatically deduce the type of a variable, function return, or expression based on its initial value or usage, without explicit type annotations." ,"It's a process for converting types at runtime." ,"It's an error that occurs when types don't match." ], "answer": "TypeScript's ability to automatically deduce the type of a variable, function return, or expression based on its initial value or usage, without explicit type annotations.", "userAnswer": "", "hash": "f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8"},
            { "id": "12", "explanation": "", "question": "How do you define an optional property in a TypeScript interface or type?", "options": ["propertyName: type | undefined;" ,"propertyName?: type;" ,"optional propertyName: type;" ,"propertyName!: type;" ], "answer": "propertyName?: type;", "userAnswer": "", "hash": "a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9"},
            { "id": "13", "explanation": "", "question": "What is a 'Tuple' type in TypeScript?", "options": ["An array with a fixed number of elements of the same type." ,"An array where the type of each element at a specific index is known and fixed." ,"A type for key-value pairs." ,"A synonym for an object type." ], "answer": "An array where the type of each element at a specific index is known and fixed.", "userAnswer": "", "hash": "b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0"},
            { "id": "14", "explanation": "", "question": "Explain 'Type Assertion' in TypeScript and when you might use it.", "options": ["It forces TypeScript to infer a type." ,"It's a way to tell the TypeScript compiler that you know more about the type of a value than TypeScript currently does. It's used when you are confident about a type and want to override the compiler's inference, typically with `as Type` or `<Type>value`." ,"It's for converting data types at runtime." ,"It's a way to define new types." ], "answer": "It's a way to tell the TypeScript compiler that you know more about the type of a value than TypeScript currently does. It's used when you are confident about a type and want to override the compiler's inference, typically with `as Type` or `<Type>value`.", "userAnswer": "", "hash": "c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1"},
            { "id": "15", "explanation": "", "question": "What is the purpose of the `readonly` modifier in TypeScript?", "options": ["To make a variable accessible only within a specific function." ,"To prevent a property from being reassigned after its initial assignment, ensuring immutability for that property." ,"To make a variable public." ,"To mark a property as optional." ], "answer": "To prevent a property from being reassigned after its initial assignment, ensuring immutability for that property.", "userAnswer": "", "hash": "d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2"},
            { "id": "16", "explanation": "", "question": "How do you define a function that takes a callback function as an argument in TypeScript?", "options": ["function doSomething(cb: any) { ... }" ,"function doSomething(cb: Function) { ... }" ,"function doSomething(cb: (arg1: string, arg2: number) => void) { ... }" ,"function doSomething(cb: { call(): void }) { ... }" ], "answer": "function doSomething(cb: (arg1: string, arg2: number) => void) { ... }", "userAnswer": "", "hash": "e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3"},
            { "id": "17", "explanation": "", "question": "What are 'Generics' in TypeScript, and why are they useful?", "options": ["They are a way to make types optional." ,"Generics allow you to write reusable components that can work with a variety of types, rather than a single one. They provide type safety while maintaining flexibility, typically using angle brackets (e.g., `<T>`)." ,"They are for defining global variables." ,"They are a way to create new built-in types." ], "answer": "Generics allow you to write reusable components that can work with a variety of types, rather than a single one. They provide type safety while maintaining flexibility, typically using angle brackets (e.g., `<T>`).", "userAnswer": "", "hash": "f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4"},
            { "id": "18", "explanation": "", "question": "Explain the concept of 'Type Narrowing' in TypeScript.", "options": ["Making types less specific." ,"TypeScript's ability to refine types based on runtime checks (e.g., `typeof`, `instanceof`, truthiness checks) within conditional blocks, allowing you to work with more specific types inside those blocks." ,"It's a way to ignore type errors." ,"It forces all variables to be of the same type." ], "answer": "TypeScript's ability to refine types based on runtime checks (e.g., `typeof`, `instanceof`, truthiness checks) within conditional blocks, allowing you to work with more specific types inside those blocks.", "userAnswer": "", "hash": "a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5"},
            { "id": "19", "explanation": "", "question": "What is the purpose of the `!` (non-null assertion operator) in TypeScript?", "options": ["To make a variable optional." ,"To assert to the compiler that a value is non-null and non-undefined, even if TypeScript's analysis can't prove it (use with caution as it bypasses strict null checks)." ,"To negate a boolean expression." ,"To define a new type." ], "answer": "To assert to the compiler that a value is non-null and non-undefined, even if TypeScript's analysis can't prove it (use with caution as it bypasses strict null checks).", "userAnswer": "", "hash": "b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6"}
          ]
        },
        {
          "difficulty": "hard",
          "id": "17",
          "questions": [
            { "id": "0", "explanation": "", "question": "What are conditional types in TypeScript?", "options": ["Types that select one of two possible types based on a condition expressed as a type relationship test, using the `extends` keyword.","Types that are only applied if a certain condition is met at runtime.","A way to create types that depend on the value of a variable.","A feature for conditional compilation."], "answer": "Types that select one of two possible types based on a condition expressed as a type relationship test, using the `extends` keyword.", "userAnswer": "", "hash": "e5f60708a1b2c3e5"},
            { "id": "1", "explanation": "", "question": "What is the `infer` keyword in TypeScript?", "options": ["A keyword used in conditional types to infer a type from another type.","A way to automatically infer the type of a variable.","A keyword for inferring the return type of a function.","A way to infer the properties of an object."], "answer": "A keyword used in conditional types to infer a type from another type.", "userAnswer": "", "hash": "f60708a1b2c3d4ec"},
            { "id": "2", "explanation": "", "question": "What are declaration files (`.d.ts`) in TypeScript?", "options": ["Files that provide type information for JavaScript libraries that were not written in TypeScript.","Files that declare all the variables used in a project.","Files that are automatically generated by the compiler to declare the types of the compiled code.","Files that contain the documentation for a TypeScript project."], "answer": "Files that provide type information for JavaScript libraries that were not written in TypeScript.", "userAnswer": "", "hash": "0708a1b2c3d4e5fd"},
            { "id": "3", "explanation": "", "question": "What is declaration merging in TypeScript?", "options": ["A feature where the compiler merges two or more separate declarations with the same name into a single definition, most commonly used with interfaces.","A way to merge two TypeScript files into one.","A technique for merging the declarations of a class and an interface.","A way to combine multiple type aliases."], "answer": "A feature where the compiler merges two or more separate declarations with the same name into a single definition, most commonly used with interfaces.", "userAnswer": "", "hash": "08a1b2c3d4e5f624"},
            { "id": "4", "explanation": "", "question": "What are branded types (or nominal typing) in TypeScript?", "options": ["A technique to create types that are structurally identical but treated as distinct by the compiler, often using an intersection with a unique property.","A way to add a brand name to a type.","A feature for creating types that are based on their name rather than their structure.","A way to enforce brand guidelines in your code."], "answer": "A technique to create types that are structurally identical but treated as distinct by the compiler, often using an intersection with a unique property.", "userAnswer": "", "hash": "a1b2c3d4e5f60726"},
            { "id": "5", "explanation": "", "question": "What is the purpose of the `Omit` utility type?", "options": ["To create a new type by picking all properties from a type and then removing a specified set of keys.","To create a new type by picking a specified set of keys from a type.","To make all properties of a type optional.","To remove all properties from a type."], "answer": "To create a new type by picking all properties from a type and then removing a specified set of keys.", "userAnswer": "", "hash": "b2c3d4e5f60708b3"},
            { "id": "6", "explanation": "", "question": "What is variance in TypeScript (covariance, contravariance, and bivariance)?", "options": ["It describes how subtyping relationships between complex types relate to the subtyping relationships of their component types.","A way to vary the types of variables at runtime.","A feature for creating types that can have multiple variants.","A way to measure the variance of data in a TypeScript program."], "answer": "It describes how subtyping relationships between complex types relate to the subtyping relationships of their component types.", "userAnswer": "", "hash": "c3d4e5f60708a1c4"},
            { "id": "7", "explanation": "", "question": "What is the `satisfies` operator in TypeScript?", "options": ["An operator that allows you to validate that an expression matches some type, without changing the type of the expression itself.","An operator that checks if an object satisfies an interface.","A way to create a type that satisfies a set of constraints.","An alias for the `as` keyword."], "answer": "An operator that allows you to validate that an expression matches some type, without changing the type of the expression itself.", "userAnswer": "", "hash": "d4e5f60708a1b2d5"},
            { "id": "8", "explanation": "", "question": "What are template literal types?", "options": ["Types that allow you to create new string literal types by concatenating other string literal types.","Types for string templates.","A way to create types from HTML templates.","A feature for creating types that are based on a template."], "answer": "Types that allow you to create new string literal types by concatenating other string literal types.", "userAnswer": "", "hash": "e5f60708a1b2c3e6"},
            { "id": "9", "explanation": "", "question": "How can you use TypeScript to ensure exhaustive checks in a `switch` statement over a union type?", "options": ["By using a `default` case that assigns the subject of the switch to a variable of type `never`.","TypeScript automatically checks for exhaustiveness.","By using a special `// @ts-check-exhaustive` comment.","This is not possible in TypeScript."], "answer": "By using a `default` case that assigns the subject of the switch to a variable of type `never`.", "userAnswer": "", "hash": "f60708a1b2c3d4ed"},
            { "id": "10", "explanation": "", "question": "How do 'Declaration Merging' work with interfaces in TypeScript, and what is a common use case?", "options": ["Declaration merging combines separate `type` aliases into one." ,"Declaration merging allows TypeScript to combine multiple declarations with the same name into a single definition. For interfaces, this means properties/methods from different declarations of the same interface are merged. Common use case: extending third-party library types (e.g., adding properties to `window` or `HTMLElement` interfaces)." ,"It's a way to automatically resolve type conflicts." ,"It only works with classes." ], "answer": "Declaration merging allows TypeScript to combine multiple declarations with the same name into a single definition. For interfaces, this means properties/methods from different declarations of the same interface are merged. Common use case: extending third-party library types (e.g., adding properties to `window` or `HTMLElement` interfaces).", "userAnswer": "", "hash": "c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7"},
            { "id": "11", "explanation": "", "question": "Explain 'Conditional Types' in TypeScript and provide a simple example.", "options": ["Types that depend on runtime conditions." ,"Conditional types allow a type to be chosen based on whether one type extends another, using a syntax like `T extends U ? X : Y`. Example: `type IsString<T> = T extends string ? true : false;`" ,"Types that are always optional." ,"Types that can only be `boolean`." ], "answer": "Conditional types allow a type to be chosen based on whether one type extends another, using a syntax like `T extends U ? X : Y`. Example: `type IsString<T> = T extends string ? true : false;`", "userAnswer": "", "hash": "d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8"},
            { "id": "12", "explanation": "", "question": "What is the purpose of the `keyof` and `typeof` operators in TypeScript?", "options": ["Both are used for runtime type checking." ,"`keyof` creates a union type of the literal string or symbol types representing the keys (property names) of an object type. `typeof` is used to get the TypeScript type of a variable or property at compile time, not its JavaScript runtime type." ,"`typeof` gets the runtime type, `keyof` gets the values." ,"They are only used with `any` type." ], "answer": "`keyof` creates a union type of the literal string or symbol types representing the keys (property names) of an object type. `typeof` is used to get the TypeScript type of a variable or property at compile time, not its JavaScript runtime type.", "userAnswer": "", "hash": "e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9"},
            { "id": "13", "explanation": "", "question": "Explain 'Mapped Types' in TypeScript and their utility.", "options": ["Types that are mapped to database tables." ,"Mapped types allow you to create new object types based on existing ones by iterating over the properties of a type and transforming them (e.g., making all properties optional, or readonly). This is done using a syntax like `[P in KeyType]: TransformedType`." ,"They are for defining literal types." ,"They are used for type assertions." ], "answer": "Mapped types allow you to create new object types based on existing ones by iterating over the properties of a type and transforming them (e.g., making all properties optional, or readonly). This is done using a syntax like `[P in KeyType]: TransformedType`.", "userAnswer": "", "hash": "f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0"},
            { "id": "14", "explanation": "", "question": "What is the purpose of the `declare` keyword in TypeScript, particularly in `.d.ts` files?", "options": ["To define new types that can be used globally." ,"To tell the TypeScript compiler that a variable, function, or class exists elsewhere (e.g., in a JavaScript library or native browser API) and has a certain type, without providing an implementation. Used in declaration (`.d.ts`) files to describe existing JavaScript code." ,"To create a new instance of a class." ,"To export types from a module." ], "answer": "To tell the TypeScript compiler that a variable, function, or class exists elsewhere (e.g., in a JavaScript library or native browser API) and has a certain type, without providing an implementation. Used in declaration (`.d.ts`) files to describe existing JavaScript code.", "userAnswer": "", "hash": "a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1"},
            { "id": "15", "explanation": "", "question": "Explain 'Literal Types' and 'Template Literal Types' in TypeScript.", "options": ["They are for numerical values only." ,"Literal types allow you to specify exact string, number, or boolean values as types (e.g., `'hello'`, `10`, `true`). Template Literal Types allow you to create new string literal types by concatenating string literals with union types, often used to model string patterns." ,"They are both used for defining complex object shapes." ,"They are deprecated features." ], "answer": "Literal types allow you to specify exact string, number, or boolean values as types (e.g., `'hello'`, `10`, `true`). Template Literal Types allow you to create new string literal types by concatenating string literals with union types, often used to model string patterns.", "userAnswer": "", "hash": "b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2"},
            { "id": "16", "explanation": "", "question": "What is the role of `strictNullChecks` in `tsconfig.json` and its impact?", "options": ["It forces all variables to be non-null." ,"When `strictNullChecks` is enabled, `null` and `undefined` are no longer assignable to every type (e.g., `string | null` instead of just `string`). This helps catch common null/undefined related errors at compile time, improving code robustness, but might require more explicit type handling." ,"It makes all type errors runtime errors." ,"It disables type inference." ], "answer": "When `strictNullChecks` is enabled, `null` and `undefined` are no longer assignable to every type (e.g., `string | null` instead of just `string`). This helps catch common null/undefined related errors at compile time, improving code robustness, but might require more explicit type handling.", "userAnswer": "", "hash": "c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3"},
            { "id": "17", "explanation": "", "question": "Explain the concept of 'Type Guards' and common ways to implement them.", "options": ["Functions that prevent incorrect types from being assigned." ,"Type guards are special functions or language constructs that narrow down the type of a variable within a certain scope. Common implementations include `typeof` guards, `instanceof` guards, `in` operator guards, and user-defined type guard functions (e.g., `value is Type`)." ,"They are for encrypting type definitions." ,"They only work with `any` types." ], "answer": "Type guards are special functions or language constructs that narrow down the type of a variable within a certain scope. Common implementations include `typeof` guards, `instanceof` guards, `in` operator guards, and user-defined type guard functions (e.g., `value is Type`).", "userAnswer": "", "hash": "d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4"},
            { "id": "18", "explanation": "", "question": "How do TypeScript Decorators work, and what are their typical use cases (e.g., in frameworks)?", "options": ["Decorators are functions that modify the appearance of HTML elements." ,"Decorators are a special kind of declaration that can be attached to a class declaration, method, accessor, property, or parameter. They allow you to add annotations and a meta-programming syntax for modifying classes and members. Common use cases include dependency injection (Angular), ORM mappings (TypeORM), and logging/authentication (NestJS)." ,"They are a replacement for interfaces." ,"They are used for CSS styling." ], "answer": "Decorators are a special kind of declaration that can be attached to a class declaration, method, accessor, property, or parameter. They allow you to add annotations and a meta-programming syntax for modifying classes and members. Common use cases include dependency injection (Angular), ORM mappings (TypeORM), and logging/authentication (NestJS).", "userAnswer": "", "hash": "e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5"},
            { "id": "19", "explanation": "", "question": "Explain the 'covariance' and 'contravariance' in TypeScript's type system, particularly with respect to function types.", "options": ["They relate to array sizing." ,"Covariance means a type can be replaced by a more specific type (e.g., `Animal` can be replaced by `Dog` in return types). Contravariance means a type can be replaced by a more general type (e.g., `Dog` can be replaced by `Animal` in function parameters). TypeScript functions are contravariant in parameters and covariant in return types." ,"They only apply to primitive types." ,"They are about type casting." ], "answer": "Covariance means a type can be replaced by a more specific type (e.g., `Animal` can be replaced by `Dog` in return types). Contravariance means a type can be replaced by a more general type (e.g., `Dog` can be replaced by `Animal` in function parameters). TypeScript functions are contravariant in parameters and covariant in return types.", "userAnswer": "", "hash": "f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6"}
          ]
        }
      ]
    },
    {
      "category": "hardhat",
      "id": "6",
      "description": "Test your knowledge across various topics in Hardhat. You will get questions that are tailored to test your understanding of the subject",
      "levels":  [
        {
          "difficulty": "easy",
          "id": "18",
          "questions": [
            { "id": "0", "explanation": "", "question": "What is Hardhat?", "options": ["An Ethereum development environment for compiling, deploying, testing, and debugging smart contracts.","A type of helmet worn by construction workers.","A hardware wallet for storing cryptocurrencies.","A layer-2 scaling solution for Ethereum."], "answer": "An Ethereum development environment for compiling, deploying, testing, and debugging smart contracts.", "userAnswer": "", "hash": "0708a1b2c3d4e5fe"},
            { "id": "1", "explanation": "", "question": "What is the purpose of the `hardhat.config.js` file?", "options": ["To configure the Hardhat environment, including networks, Solidity compiler versions, and plugins.","To store the private keys for your development accounts.","To write the tests for your smart contracts.","To define the smart contract code."], "answer": "To configure the Hardhat environment, including networks, Solidity compiler versions, and plugins.", "userAnswer": "", "hash": "08a1b2c3d4e5f625"},
            { "id": "2", "explanation": "", "question": "What is the Hardhat Network?", "options": ["A local Ethereum network designed for development, which is built-in to Hardhat.","A testnet for deploying and testing smart contracts.","The Ethereum mainnet.","A network of Hardhat users."], "answer": "A local Ethereum network designed for development, which is built-in to Hardhat.", "userAnswer": "", "hash": "a1b2c3d4e5f60727"},
            { "id": "3", "explanation": "", "question": "How do you compile your smart contracts using Hardhat?", "options": ["npx hardhat compile","npx hardhat build","npx hardhat make","npx hardhat run compile"], "answer": "npx hardhat compile", "userAnswer": "", "hash": "b2c3d4e5f60708b4"},
            { "id": "4", "explanation": "", "question": "What is the purpose of the `artifacts` directory in a Hardhat project?", "options": ["To store the compiled contract ABIs and bytecode.","To store the deployment scripts.","To store the test files.","To store the project's dependencies."], "answer": "To store the compiled contract ABIs and bytecode.", "userAnswer": "", "hash": "c3d4e5f60708a1c5"},
            { "id": "5", "explanation": "", "question": "How do you run tests in a Hardhat project?", "options": ["npx hardhat test","npx hardhat run-tests","npm test","Both a and c can be configured to work."], "answer": "npx hardhat test", "userAnswer": "", "hash": "d4e5f60708a1b2d6"},
            { "id": "6", "explanation": "", "question": "What is a Hardhat task?", "options": ["A JavaScript function that you can define and run from the command line to automate project tasks.","A to-do list item for your project.","A special type of smart contract.","A test case for a smart contract."], "answer": "A JavaScript function that you can define and run from the command line to automate project tasks.", "userAnswer": "", "hash": "e5f60708a1b2c3e7"},
            { "id": "7", "explanation": "", "question": "How do you deploy a smart contract to a network using Hardhat?", "options": ["By running a deployment script with `npx hardhat run scripts/deploy.js --network <network-name>`.","By using the `npx hardhat deploy` command.","By copying the bytecode and pasting it into a wallet.","By using the `npx hardhat send` command."], "answer": "By running a deployment script with `npx hardhat run scripts/deploy.js --network <network-name>`.", "userAnswer": "", "hash": "f60708a1b2c3d4ee"},
            { "id": "8", "explanation": "", "question": "What library is commonly used with Hardhat for writing smart contract tests?", "options": ["Ethers.js","Web3.js","Mocha and Chai","All of the above are commonly used together."], "answer": "All of the above are commonly used together.", "userAnswer": "", "hash": "0708a1b2c3d4e5ff"},
            { "id": "9", "explanation": "", "question": "What is the purpose of the `console.log` feature in Hardhat?", "options": ["To print log messages from within your Solidity smart contracts during testing.","To log messages to the browser console.","To create a log file of all Hardhat activity.","To log the configuration of the Hardhat environment."], "answer": "To print log messages from within your Solidity smart contracts during testing.", "userAnswer": "", "hash": "08a1b2c3d4e5f626"},
            { "id": "10", "explanation": "", "question": "What is Hardhat primarily used for in blockchain development?", "options": ["Deploying dApps to production servers." ,"Developing, testing, and deploying Ethereum smart contracts." ,"Mining new cryptocurrencies." ,"Creating front-end user interfaces." ], "answer": "Developing, testing, and deploying Ethereum smart contracts.", "userAnswer": "", "hash": "a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6"},
            { "id": "11", "explanation": "", "question": "Which programming language are smart contracts written in for use with Hardhat?", "options": ["JavaScript" ,"Python" ,"Solidity" ,"Rust" ], "answer": "Solidity", "userAnswer": "", "hash": "b2e2d9a6c7f8e1a0b3c4d5e6f7a8b9c0"},
            { "id": "12", "explanation": "", "question": "What is the name of the built-in development network provided by Hardhat?", "options": ["Ganache" ,"Hardhat Network" ,"Localhost" ,"Ropsten" ], "answer": "Hardhat Network", "userAnswer": "", "hash": "c0746b102c918a902f5a8c2f1f5f2d4e"},
            { "id": "13", "explanation": "", "question": "How do you run a Hardhat script?", "options": ["npm start" ,"hardhat deploy" ,"npx hardhat run scripts/my-script.js" ,"hardhat compile" ], "answer": "npx hardhat run scripts/my-script.js", "userAnswer": "", "hash": "d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0"},
            { "id": "14", "explanation": "", "question": "What is the purpose of `hardhat.config.js`?", "options": ["To define front-end routes." ,"To configure the Hardhat environment, including networks, Solidity versions, and plugins." ,"To store smart contract data." ,"To manage user accounts." ], "answer": "To configure the Hardhat environment, including networks, Solidity versions, and plugins.", "userAnswer": "", "hash": "e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1"},
            { "id": "15", "explanation": "", "question": "Which task is used to compile Solidity contracts in Hardhat?", "options": ["hardhat test" ,"hardhat run" ,"hardhat compile" ,"hardhat clean" ], "answer": "hardhat compile", "userAnswer": "", "hash": "f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2"},
            { "id": "16", "explanation": "", "question": "How do you obtain a `Signer` object to interact with an account in Hardhat tests/scripts?", "options": ["ethers.Wallet.createRandom()" ,"hre.ethers.getSigners()" ,"web3.eth.getAccounts()" ,"new Signer()" ], "answer": "hre.ethers.getSigners()", "userAnswer": "", "hash": "a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3"},
            { "id": "17", "explanation": "", "question": "What is the purpose of Hardhat's `console.log` equivalent for Solidity?", "options": ["It logs messages directly to the browser console." ,"It allows printing values from Solidity contracts during development and testing to the Hardhat terminal, useful for debugging." ,"It's a function to deploy contracts." ,"It's a way to send transactions." ], "answer": "It allows printing values from Solidity contracts during development and testing to the Hardhat terminal, useful for debugging.", "userAnswer": "", "hash": "b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4"},
            { "id": "18", "explanation": "", "question": "Which library does Hardhat use by default for interacting with Ethereum (instead of Web3.js)?", "options": ["Web3.js" ,"Ethers.js" ,"Truffle" ,"Remix" ], "answer": "Ethers.js", "userAnswer": "", "hash": "c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5"},
            { "id": "19", "explanation": "", "question": "What is the purpose of a 'task' in Hardhat?", "options": ["A task is a function that runs automatically on a timer." ,"A task is a reusable piece of code that can be executed from the command line, often used for deployment, testing, or other development operations." ,"A task is a smart contract." ,"A task is a variable declaration." ], "answer": "A task is a reusable piece of code that can be executed from the command line, often used for deployment, testing, or other development operations.", "userAnswer": "", "hash": "d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6"}
          ]
        },
        {
          "difficulty": "medium",
          "id": "19",
          "questions":[
            { "id": "0", "explanation": "", "question": "What is forking the mainnet in Hardhat?", "options": ["Running a local Hardhat Network that simulates the state of the Ethereum mainnet at a specific block number.","Creating a copy of the Ethereum mainnet blockchain on your local machine.","Deploying your contracts to a fork of the Ethereum mainnet.","A way to contribute to the development of the Ethereum protocol."], "answer": "Running a local Hardhat Network that simulates the state of the Ethereum mainnet at a specific block number.", "userAnswer": "", "hash": "a1b2c3d4e5f60728"},
            { "id": "1", "explanation": "", "question": "How can you impersonate an account in a Hardhat test?", "options": ["Using the `hardhat_impersonateAccount` RPC method.","By getting the private key of the account.","This is not possible in Hardhat.","By using a special `impersonate` function in your test."], "answer": "Using the `hardhat_impersonateAccount` RPC method.", "userAnswer": "", "hash": "b2c3d4e5f60708b5"},
            { "id": "2", "explanation": "", "question": "What is the purpose of the `hardhat-ethers` plugin?", "options": ["To integrate the Ethers.js library with Hardhat, providing helpers for deploying contracts and interacting with them.","To provide type safety for your smart contract interactions.","To scan your contracts for vulnerabilities.","To connect Hardhat to the Etherscan API."], "answer": "To integrate the Ethers.js library with Hardhat, providing helpers for deploying contracts and interacting with them.", "userAnswer": "", "hash": "c3d4e5f60708a1c6"},
            { "id": "3", "explanation": "", "question": "How do you verify a contract on Etherscan using Hardhat?", "options": ["Using the `hardhat-etherscan` plugin and running a verification task.","By manually uploading the source code to Etherscan.","Hardhat does this automatically upon deployment.","By sending a special transaction to the Etherscan contract."], "answer": "Using the `hardhat-etherscan` plugin and running a verification task.", "userAnswer": "", "hash": "d4e5f60708a1b2d7"},
            { "id": "4", "explanation": "", "question": "What is the role of the `hre` (Hardhat Runtime Environment)?", "options": ["An object containing all the functionality that Hardhat exposes when running a task, test, or script. It is passed to tasks and can be accessed in scripts and tests.","The HTML rendering engine for Hardhat.","The Hardhat Real-time Executor.","A configuration object for the Hardhat REPL."], "answer": "An object containing all the functionality that Hardhat exposes when running a task, test, or script. It is passed to tasks and can be accessed in scripts and tests.", "userAnswer": "", "hash": "e5f60708a1b2c3e8"},
            { "id": "5", "explanation": "", "question": "How can you control the time in the Hardhat Network for testing time-dependent logic?", "options": ["Using the `evm_increaseTime` and `evm_mine` RPC methods.","By changing the system clock of your computer.","This is not possible.","By using a special `setTime` function in your tests."], "answer": "Using the `evm_increaseTime` and `evm_mine` RPC methods.", "userAnswer": "", "hash": "f60708a1b2c3d4ef"},
            { "id": "6", "explanation": "", "question": "What is the purpose of the `hardhat-gas-reporter` plugin?", "options": ["To report the gas usage of your smart contract functions during testing.","To report the current gas price on the Ethereum mainnet.","To generate a report on the gas efficiency of your dApp.","To report gas-related errors in your contracts."], "answer": "To report the gas usage of your smart contract functions during testing.", "userAnswer": "", "hash": "0708a1b2c3d4e600"},
            { "id": "7", "explanation": "", "question": "How do you test for events being emitted in a Hardhat test?", "options": ["Using Chai matchers like `await expect(tx).to.emit(contract, 'EventName').withArgs(...)`.","By manually inspecting the transaction receipt.","By using `console.log` in the event.","By using a special `assert.emits` function."], "answer": "Using Chai matchers like `await expect(tx).to.emit(contract, 'EventName').withArgs(...)`.", "userAnswer": "", "hash": "08a1b2c3d4e5f627"},
            { "id": "8", "explanation": "", "question": "What is the difference between `npx hardhat run` and `npx hardhat node`?", "options": ["`npx hardhat run` executes a script, while `npx hardhat node` starts a standalone Hardhat Network node.","`npx hardhat run` runs a node, while `npx hardhat node` runs a script.","They are aliases for the same command.","`npx hardhat run` is for running tests, and `npx hardhat node` is for running a deployment."], "answer": "`npx hardhat run` executes a script, while `npx hardhat node` starts a standalone Hardhat Network node.", "userAnswer": "", "hash": "a1b2c3d4e5f60729"},
            { "id": "9", "explanation": "", "question": "How can you get the signers (accounts) for your Hardhat tests?", "options": ["Using `await ethers.getSigners()`.","They are automatically available in the global scope.","By using `hre.getNamedAccounts()`.","By importing them from the `hardhat` package."], "answer": "Using `await ethers.getSigners()`.", "userAnswer": "", "hash": "b2c3d4e5f60708b6"},
            { "id": "10", "explanation": "", "question": "How does Hardhat's testing environment differ from running tests on a public testnet, and what are the advantages?", "options": ["Hardhat tests are slower but more realistic." ,"Hardhat Network provides a local, in-memory blockchain specifically for testing, offering instant transaction confirmations, isolated environments, and direct control over time/mining, making tests faster and more reliable than public testnets." ,"Public testnets are always preferred for testing." ,"Hardhat tests don't support Solidity." ], "answer": "Hardhat Network provides a local, in-memory blockchain specifically for testing, offering instant transaction confirmations, isolated environments, and direct control over time/mining, making tests faster and more reliable than public testnets.", "userAnswer": "", "hash": "e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7"},
            { "id": "11", "explanation": "", "question": "Explain how Hardhat allows you to interact with deployed contracts using the `ethers.js` library in a script.", "options": ["You can only interact with contracts you've deployed in the current script." ,"After deploying a contract, Hardhat returns a `Contract` object (from `ethers.js`). You can then call its methods directly (e.g., `contract.myFunction(args)`) or use `ethers.getContractFactory()` and `attach()` for existing contracts." ,"It requires manual ABI and address input every time." ,"Hardhat only supports `web3.js` for contract interaction." ], "answer": "After deploying a contract, Hardhat returns a `Contract` object (from `ethers.js`). You can then call its methods directly (e.g., `contract.myFunction(args)`) or use `ethers.getContractFactory()` and `attach()` for existing contracts.", "userAnswer": "", "hash": "f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8"},
            { "id": "12", "explanation": "", "question": "What is the purpose of the `nomicfoundation/hardhat-chai-matchers` plugin?", "options": ["To deploy contracts faster." ,"It provides a set of custom Chai matchers (assertions) specifically designed for testing Solidity smart contracts, making tests more expressive and readable (e.g., `expect(await contract.balanceOf(addr)).to.equal(amount)`)." ,"To generate contract ABIs automatically." ,"To create new Hardhat tasks." ], "answer": "It provides a set of custom Chai matchers (assertions) specifically designed for testing Solidity smart contracts, making tests more expressive and readable (e.g., `expect(await contract.balanceOf(addr)).to.equal(amount)`).", "userAnswer": "", "hash": "a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9"},
            { "id": "13", "explanation": "", "question": "How can you debug a Solidity smart contract using Hardhat?", "options": ["By inserting `console.log` directly into Solidity code." ,"Hardhat allows for detailed transaction tracing, step-by-step debugging of Solidity code in a debugger (e.g., VS Code extension), and using Hardhat Network's built-in `console.log` equivalents within Solidity." ,"Only by reviewing transaction receipts on Etherscan." ,"Hardhat has no debugging tools for Solidity." ], "answer": "Hardhat allows for detailed transaction tracing, step-by-step debugging of Solidity code in a debugger (e.g., VS Code extension), and using Hardhat Network's built-in `console.log` equivalents within Solidity.", "userAnswer": "", "hash": "b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0"},
            { "id": "14", "explanation": "", "question": "What is the purpose of Hardhat's 'ethers' object and how is it typically accessed in a script?", "options": ["It's for deploying contracts to live networks only." ,"It's an instance of the `ethers.js` library specifically configured for the current Hardhat network. It's usually accessed via `hre.ethers` (Hardhat Runtime Environment) or globally if the `require('@nomicfoundation/hardhat-ethers')` plugin is used." ,"It's a custom logger." ,"It only works with Web3.js." ], "answer": "It's an instance of the `ethers.js` library specifically configured for the current Hardhat network. It's usually accessed via `hre.ethers` (Hardhat Runtime Environment) or globally if the `require('@nomicfoundation/hardhat-ethers')` plugin is used.", "userAnswer": "", "hash": "c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1"},
            { "id": "15", "explanation": "", "question": "How do you interact with a contract that is already deployed on a public testnet (e.g., Sepolia) using a Hardhat script?", "options": ["You can't; Hardhat only works with local deployments." ,"Configure the network in `hardhat.config.js` with its RPC URL and private key, then use `ethers.getContractAt('ContractName', 'contractAddress')` to get a contract instance." ,"By manually copying the ABI into your script." ,"You need to redeploy the contract to the local Hardhat Network." ], "answer": "Configure the network in `hardhat.config.js` with its RPC URL and private key, then use `ethers.getContractAt('ContractName', 'contractAddress')` to get a contract instance.", "userAnswer": "", "hash": "d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2"},
            { "id": "16", "explanation": "", "question": "What is the purpose of Hardhat artifacts, and where are they typically stored?", "options": ["They are temporary files that can be deleted." ,"Artifacts (JSON files containing contract ABI, bytecode, deployed address, etc.) are generated during compilation. They are typically stored in the `artifacts/` and `cache/` directories and are crucial for interacting with contracts from the client-side or other scripts." ,"They only contain the source code of the contract." ,"They are stored on the blockchain." ], "answer": "Artifacts (JSON files containing contract ABI, bytecode, deployed address, etc.) are generated during compilation. They are typically stored in the `artifacts/` and `cache/` directories and are crucial for interacting with contracts from the client-side or other scripts.", "userAnswer": "", "hash": "e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3"},
            { "id": "17", "explanation": "", "question": "How can you reset the Hardhat Network to its initial state for a fresh test run?", "options": ["Restart your computer." ,"Call `network.provider.send('hardhat_reset')` in your test/script or simply stop and restart the Hardhat Network process." ,"Delete the `node_modules` folder." ,"Redeploy all contracts manually." ], "answer": "Call `network.provider.send('hardhat_reset')` in your test/script or simply stop and restart the Hardhat Network process.", "userAnswer": "", "hash": "f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4"},
            { "id": "18", "explanation": "", "question": "What is the primary benefit of using TypeScript with Hardhat for smart contract development?", "options": ["It makes Solidity code run faster." ,"It provides type safety for your JavaScript/TypeScript tests and deployment scripts, catching errors at compile time, improving code reliability, and offering better IDE support for contract interactions." ,"It automatically deploys contracts for you." ,"It's only for front-end development." ], "answer": "It provides type safety for your JavaScript/TypeScript tests and deployment scripts, catching errors at compile time, improving code reliability, and offering better IDE support for contract interactions.", "userAnswer": "", "hash": "a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5"},
            { "id": "19", "explanation": "", "question": "How can you verify a deployed smart contract on Etherscan using Hardhat?", "options": ["Manually copy-pasting the contract code to Etherscan." ,"By using the `@nomiclabs/hardhat-etherscan` plugin, which automates the verification process from your Hardhat project." ,"Hardhat does not support Etherscan verification." ,"Only possible if you deployed the contract with Remix." ], "answer": "By using the `@nomiclabs/hardhat-etherscan` plugin, which automates the verification process from your Hardhat project.", "userAnswer": "", "hash": "b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6"}
          ]
        },
        {
          "difficulty": "hard",
          "id": "20",
          "questions":[
            { "id": "0", "explanation": "", "question": "What is the purpose of the `hardhat-deploy` plugin?", "options": ["To manage deployments and contract dependencies, especially in complex projects. It adds a `deploy` folder and tracks deployments.","A simpler way to deploy contracts than writing scripts.","A plugin for deploying to IPFS.","A plugin for deploying to multiple networks at once."], "answer": "To manage deployments and contract dependencies, especially in complex projects. It adds a `deploy` folder and tracks deployments.", "userAnswer": "", "hash": "c3d4e5f60708a1c7"},
            { "id": "1", "explanation": "", "question": "How can you debug a transaction in Hardhat?", "options": ["By using `console.log` in your Solidity code and running tests.","By using a debugger like the one provided by Remix or Tenderly.","By using the `hardhat_traceTransaction` RPC method.","All of the above are valid methods."], "answer": "All of the above are valid methods.", "userAnswer": "", "hash": "d4e5f60708a1b2d8"},
            { "id": "2", "explanation": "", "question": "How do you handle contract upgrades (proxies) in a Hardhat project?", "options": ["By using the `hardhat-upgrades` plugin from OpenZeppelin.","By deploying a new contract and manually migrating the data.","This is not possible with Hardhat.","By using a special `upgrade` command in Hardhat."], "answer": "By using the `hardhat-upgrades` plugin from OpenZeppelin.", "userAnswer": "", "hash": "e5f60708a1b2c3e9"},
            { "id": "3", "explanation": "", "question": "What is a fixture in the context of Hardhat tests?", "options": ["A setup function that is run once, and its state is snapshotted. This snapshot can be restored before each test, making tests faster and less dependent on each other.","A set of mock data for your tests.","A special type of test case.","A way to fix broken tests."], "answer": "A setup function that is run once, and its state is snapshotted. This snapshot can be restored before each test, making tests faster and less dependent on each other.", "userAnswer": "", "hash": "f60708a1b2c3d4f0"},
            { "id": "4", "explanation": "", "question": "How can you integrate a static analysis tool like Slither into your Hardhat workflow?", "options": ["By using a community-built Hardhat plugin for Slither or by running Slither as a separate command-line tool on your contracts.","Slither is built into Hardhat.","By using the `npx hardhat slither` command.","This is not possible."], "answer": "By using a community-built Hardhat plugin for Slither or by running Slither as a separate command-line tool on your contracts.", "userAnswer": "", "hash": "0708a1b2c3d4e601"},
            { "id": "5", "explanation": "", "question": "What is the purpose of the `accounts` option in the Hardhat network configuration?", "options": ["To customize the number of accounts, their balance, and even their private keys for the local Hardhat Network.","To specify which accounts to use for deployment.","To list the accounts on the Ethereum mainnet.","To connect to a hardware wallet."], "answer": "To customize the number of accounts, their balance, and even their private keys for the local Hardhat Network.", "userAnswer": "", "hash": "08a1b2c3d4e5f628"},
            { "id": "6", "explanation": "", "question": "How can you simulate network latency and a variable block time in the Hardhat Network?", "options": ["By configuring the `mining` option in the Hardhat network config, including `auto` and `interval` mining.","This requires a custom provider.","Hardhat Network always has instant mining.","By using a `setTimeout` in your tests."], "answer": "By configuring the `mining` option in the Hardhat network config, including `auto` and `interval` mining.", "userAnswer": "", "hash": "a1b2c3d4e5f60730"},
            { "id": "7", "explanation": "", "question": "What are some limitations of forking the mainnet with Hardhat?", "options": ["It can be slow, requires a connection to an archive node for older states, and does not perfectly replicate the mempool behavior.","It is not possible to fork networks other than mainnet.","It is not possible to deploy new contracts on a forked network.","There are no significant limitations."], "answer": "It can be slow, requires a connection to an archive node for older states, and does not perfectly replicate the mempool behavior.", "userAnswer": "", "hash": "b2c3d4e5f60708b7"},
            { "id": "8", "explanation": "", "question": "How do you use Hardhat in a CI/CD pipeline?", "options": ["By running Hardhat commands like `compile`, `test`, and `lint` in a script within the pipeline configuration (e.g., GitHub Actions).","Hardhat has a built-in CI/CD feature.","This requires a special Hardhat plugin for CI/CD.","You cannot use Hardhat in a CI/CD pipeline."], "answer": "By running Hardhat commands like `compile`, `test`, and `lint` in a script within the pipeline configuration (e.g., GitHub Actions).", "userAnswer": "", "hash": "c3d4e5f60708a1c8"},
            { "id": "9", "explanation": "", "question": "What is the `hardhat-tracer` plugin used for?", "options": ["To provide a detailed trace of function calls, events, and state changes for a given transaction.","To trace the origin of a bug in your code.","To trace the network requests made by Hardhat.","To trace the execution path of a test."], "answer": "To provide a detailed trace of function calls, events, and state changes for a given transaction.", "userAnswer": "", "hash": "d4e5f60708a1b2d9"},
            { "id": "10", "explanation": "", "question": "Explain how Hardhat's 'forking' feature works with Hardhat Network and its common use cases.", "options": ["Forking creates a new independent blockchain from scratch." ,"Forking allows Hardhat Network to mimic a specific public blockchain (e.g., Ethereum Mainnet) at a given block number. This enables testing contracts against realistic, existing on-chain data and state without deploying to a live network. Use cases include testing interactions with deployed protocols or specific token states." ,"It's only for deploying to production." ,"Forking is a security vulnerability." ], "answer": "Forking allows Hardhat Network to mimic a specific public blockchain (e.g., Ethereum Mainnet) at a given block number. This enables testing contracts against realistic, existing on-chain data and state without deploying to a live network. Use cases include testing interactions with deployed protocols or specific token states.", "userAnswer": "", "hash": "c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7"},
            { "id": "11", "explanation": "", "question": "How would you simulate time-dependent smart contract logic (e.g., time-locks, vesting schedules) efficiently in Hardhat tests?", "options": ["Wait for real-world time to pass during tests." ,"Use Hardhat Network's `evm_increaseTime` and `evm_mine` RPC methods (exposed via `network.provider.send()`) to artificially advance the blockchain's time and mine new blocks, allowing rapid testing of time-based logic." ,"Modify the system clock of your testing machine." ,"It's not possible to simulate time in Hardhat." ], "answer": "Use Hardhat Network's `evm_increaseTime` and `evm_mine` RPC methods (exposed via `network.provider.send()`) to artificially advance the blockchain's time and mine new blocks, allowing rapid testing of time-based logic.", "userAnswer": "", "hash": "d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8"},
            { "id": "12", "explanation": "", "question": "Explain the concept of 'fixtures' in Hardhat testing (e.g., using `hardhat-deploy`) and their benefits.", "options": ["Fixtures are a type of smart contract." ,"Fixtures define a set of contracts or initial blockchain state that can be deployed once and reused across multiple tests. This significantly speeds up test execution by avoiding redundant deployments, while maintaining a clean state for each test by snapshotting and reverting." ,"Fixtures are only for deploying to mainnet." ,"They are a deprecated testing pattern." ], "answer": "Fixtures define a set of contracts or initial blockchain state that can be deployed once and reused across multiple tests. This significantly speeds up test execution by avoiding redundant deployments, while maintaining a clean state for each test by snapshotting and reverting.", "userAnswer": "", "hash": "e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9"},
            { "id": "13", "explanation": "", "question": "How can you simulate a reorg (reorganization) of the blockchain in Hardhat Network for testing purposes?", "options": ["It's not possible to simulate reorgs locally." ,"By using `evm_snapshot` to save a state, then mining new blocks, and then using `evm_revert` to revert to the snapshot before the new blocks, effectively creating a reorg for subsequent operations." ,"By restarting the Hardhat Network and deploying new contracts." ,"Only by using a real testnet." ], "answer": "By using `evm_snapshot` to save a state, then mining new blocks, and then using `evm_revert` to revert to the snapshot before the new blocks, effectively creating a reorg for subsequent operations.", "userAnswer": "", "hash": "f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0"},
            { "id": "14", "explanation": "", "question": "Describe how Hardhat allows for flexible contract deployment and linking of libraries using its scripts and factories.", "options": ["All contracts must be deployed in a single transaction." ,"Hardhat's `ethers.getContractFactory()` can accept a library object, automatically linking deployed library addresses to contracts that depend on them before deployment. Deployment scripts can be written in JavaScript/TypeScript, allowing for complex deployment flows and conditional logic." ,"Libraries cannot be linked dynamically; they must be embedded." ,"Hardhat only supports manual deployment." ], "answer": "Hardhat's `ethers.getContractFactory()` can accept a library object, automatically linking deployed library addresses to contracts that depend on them before deployment. Deployment scripts can be written in JavaScript/TypeScript, allowing for complex deployment flows and conditional logic.", "userAnswer": "", "hash": "a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1"},
            { "id": "15", "explanation": "", "question": "When might you use Hardhat's `extendEnvironment` feature, and what problem does it solve?", "options": ["To create new Solidity functions." ,"To add new properties or modify existing ones on the Hardhat Runtime Environment (HRE), effectively customizing and extending Hardhat's capabilities. It allows integrating custom tools, helper functions, or third-party libraries seamlessly into the Hardhat context." ,"To change the Solidity compiler version." ,"It's for deploying contracts to a different network." ], "answer": "To add new properties or modify existing ones on the Hardhat Runtime Environment (HRE), effectively customizing and extending Hardhat's capabilities. It allows integrating custom tools, helper functions, or third-party libraries seamlessly into the Hardhat context.", "userAnswer": "", "hash": "b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2"},
            { "id": "16", "explanation": "", "question": "How would you implement a gas report for your smart contracts using Hardhat to identify and optimize gas usage?", "options": ["Manually calculate gas for each function call." ,"By using plugins like `hardhat-gas-reporter` (which often integrates with Istanbul for code coverage). This plugin analyzes transaction costs during tests and generates a detailed report, highlighting gas consumption of contract functions." ,"Hardhat does not support gas reporting." ,"Only by deploying to mainnet and observing actual gas costs." ], "answer": "By using plugins like `hardhat-gas-reporter` (which often integrates with Istanbul for code coverage). This plugin analyzes transaction costs during tests and generates a detailed report, highlighting gas consumption of contract functions.", "userAnswer": "", "hash": "c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3"},
            { "id": "17", "explanation": "", "question": "Describe the process of upgrading a smart contract using a proxy pattern with Hardhat for deployment and interaction.", "options": ["Requires redeploying the entire contract with a new address." ,"Deploy a proxy contract (e.g., UUPS or Transparent) and an initial implementation contract. When upgrading, deploy a new implementation contract and then call an upgrade function on the proxy to point to the new implementation, all managed via Hardhat deployment scripts and potentially `oz-defender` or `upgrades` plugins." ,"Only possible if the contract is open-source." ,"Hardhat doesn't support contract upgrades." ], "answer": "Deploy a proxy contract (e.g., UUPS or Transparent) and an initial implementation contract. When upgrading, deploy a new implementation contract and then call an upgrade function on the proxy to point to the new implementation, all managed via Hardhat deployment scripts and potentially `oz-defender` or `upgrades` plugins.", "userAnswer": "", "hash": "d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4"},
            { "id": "18", "explanation": "", "question": "How can you integrate Hardhat with a Continuous Integration/Continuous Deployment (CI/CD) pipeline?", "options": ["It requires manual execution on the CI server." ,"Hardhat tasks (e.g., `compile`, `test`, `run`) are command-line executable, making them ideal for CI/CD. You can configure CI workflows (e.g., GitHub Actions, Jenkins) to run these commands on code pushes, execute tests, and even deploy contracts to testnets or mainnet automatically after successful builds." ,"Hardhat has no CLI for automation." ,"CI/CD is only for frontend applications." ], "answer": "Hardhat tasks (e.g., `compile`, `test`, `run`) are command-line executable, making them ideal for CI/CD. You can configure CI workflows (e.g., GitHub Actions, Jenkins) to run these commands on code pushes, execute tests, and even deploy contracts to testnets or mainnet automatically after successful builds.", "userAnswer": "", "hash": "e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5"},
            { "id": "19", "explanation": "", "question": "What are Hardhat Runners, and when would you use them over standard `npx hardhat run`?", "options": ["Runners are a type of test framework." ,"Runners are a way to execute Hardhat tasks programmatically from within other JavaScript/TypeScript code (e.g., a custom script or a web server), providing more control over the Hardhat Runtime Environment and allowing for more complex integrations beyond simple command-line execution." ,"Runners are for deploying contracts only." ,"They are a deprecated feature." ], "answer": "Runners are a way to execute Hardhat tasks programmatically from within other JavaScript/TypeScript code (e.g., a custom script or a web server), providing more control over the Hardhat Runtime Environment and allowing for more complex integrations beyond simple command-line execution.", "userAnswer": "", "hash": "f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6"}
          ]
        }
      ]
    },
    {
      "category": "farcaster-sdk",
      "id": "7",
      "description": "Test your knowledge across various fields in Farcaster SDK. You will get questions that are tailored to test your understanding of the subject",
      "levels": [
        {
          "difficulty":"easy",
          "id": "21",
          "questions": [
            { "id": "0", "explanation": "", "question": "What is Farcaster?", "options": ["A sufficiently decentralized social network protocol.","A new cryptocurrency.","A framework for building decentralized applications.","A layer-2 scaling solution for Ethereum."], "answer": "A sufficiently decentralized social network protocol.", "userAnswer": "", "hash": "e5f60708a1b2c3ea"},
            { "id": "1", "explanation": "", "question": "What is a 'cast' in the context of Farcaster?", "options": ["A public message posted by a user.","A private message between two users.","A type of smart contract on the Farcaster network.","A user's profile."], "answer": "A public message posted by a user.", "userAnswer": "", "hash": "f60708a1b2c3d4f1"},
            { "id": "2", "explanation": "", "question": "What is the primary purpose of the Farcaster SDK?", "options": ["To make it easier for developers to build applications on top of the Farcaster protocol.","To manage a Farcaster node.","To create a new Farcaster identity.","To explore the Farcaster network."], "answer": "To make it easier for developers to build applications on top of the Farcaster protocol.", "userAnswer": "", "hash": "0708a1b2c3d4e602"},
            { "id": "3", "explanation": "", "question": "What is a Farcaster ID (FID)?", "options": ["A unique identifier for a Farcaster account.","The ID of a cast.","The ID of a Farcaster channel.","The ID of a Farcaster frame."], "answer": "A unique identifier for a Farcaster account.", "userAnswer": "", "hash": "08a1b2c3d4e5f629"},
            { "id": "4", "explanation": "", "question": "How would you use the Farcaster SDK to post a cast?", "options": ["By using a client object to call a `publishCast` or similar function.","By sending an HTTP request to the Farcaster API.","By calling a smart contract function.","By using the Farcaster command-line interface."], "answer": "By using a client object to call a `publishCast` or similar function.", "userAnswer": "", "hash": "a1b2c3d4e5f60731"},
            { "id": "5", "explanation": "", "question": "What is a 'Hub' in the Farcaster architecture?", "options": ["A server that stores Farcaster data and makes it available to clients.","The central authority of the Farcaster network.","A user's personal data store.","A place where developers can collaborate on Farcaster projects."], "answer": "A server that stores Farcaster data and makes it available to clients.", "userAnswer": "", "hash": "b2c3d4e5f60708b8"},
            { "id": "6", "explanation": "", "question": "What is the relationship between Farcaster and Ethereum?", "options": ["Farcaster uses Ethereum for identity management and account ownership.","Farcaster is built on top of Ethereum.","Farcaster is a competitor to Ethereum.","There is no relationship."], "answer": "Farcaster uses Ethereum for identity management and account ownership.", "userAnswer": "", "hash": "c3d4e5f60708a1c9"},
            { "id": "7", "explanation": "", "question": "What are Farcaster Frames?", "options": ["Interactive and embeddable applications within a cast.","The user interface of a Farcaster client.","A way to frame your Farcaster profile picture.","A type of data structure for storing casts."], "answer": "Interactive and embeddable applications within a cast.", "userAnswer": "", "hash": "d4e5f60708a1b2da"},
            { "id": "8", "explanation": "", "question": "How do you authenticate with the Farcaster network using the SDK?", "options": ["By creating a signer and providing it to the client.","With a username and password.","With an API key.","Authentication is not required."], "answer": "By creating a signer and providing it to the client.", "userAnswer": "", "hash": "e5f60708a1b2c3eb"},
            { "id": "9", "explanation": "", "question": "What is the core purpose of the Farcaster SDK?", "options": ["To manage cryptocurrency wallets." ,"To facilitate interaction with the Farcaster protocol, enabling dApps to read and write Farcaster data." ,"To create new blockchain networks." ,"To develop smart contracts." ], "answer": "To facilitate interaction with the Farcaster protocol, enabling dApps to read and write Farcaster data.", "userAnswer": "", "hash": "a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6"},
            { "id": "10", "explanation": "", "question": "What kind of data does the Farcaster SDK primarily help you interact with?", "options": ["Traditional financial market data." ,"Social graph data, posts (casts), reactions, and profiles on the Farcaster network." ,"Private user information." ,"Supply chain logistics." ], "answer": "Social graph data, posts (casts), reactions, and profiles on the Farcaster network.", "userAnswer": "", "hash": "b2e2d9a6c7f8e1a0b3c4d5e6f7a8b9c0"},
            { "id": "11", "explanation": "", "question": "Which of these actions can you typically perform using the Farcaster SDK?", "options": ["Mine Bitcoin." ,"Publish a new 'cast' (post)." ,"Launch a new blockchain." ,"Trade stocks." ], "answer": "Publish a new 'cast' (post).", "userAnswer": "", "hash": "c0746b102c918a902f5a8c2f1f5f2d4e"},
            { "id": "12", "explanation": "", "question": "What is a 'FID' in the Farcaster context?", "options": ["A financial identification number." ,"A Farcaster ID, which is a unique identifier for a Farcaster user." ,"A type of data format." ,"A file extension." ], "answer": "A Farcaster ID, which is a unique identifier for a Farcaster user.", "userAnswer": "", "hash": "d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0"},
            { "id": "13", "explanation": "", "question": "To get started with the Farcaster SDK, what kind of client do you usually initialize?", "options": ["A database client." ,"A Hub client to connect to a Farcaster Hub." ,"A web server client." ,"A smart contract client." ], "answer": "A Hub client to connect to a Farcaster Hub.", "userAnswer": "", "hash": "e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1"},
            { "id": "14", "explanation": "", "question": "What does a 'cast' refer to on Farcaster?", "options": ["A cryptocurrency transaction." ,"A user's post or message." ,"A type of digital asset." ,"A smart contract function call." ], "answer": "A user's post or message.", "userAnswer": "", "hash": "f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2"},
            { "id": "15", "explanation": "", "question": "Is Farcaster a centralized or decentralized protocol?", "options": ["Centralized" ,"Decentralized" ,"Hybrid" ,"It depends on the SDK version." ], "answer": "Decentralized", "userAnswer": "", "hash": "a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3"},
            { "id": "16", "explanation": "", "question": "What is the typical method for retrieving a user's profile information using the Farcaster SDK?", "options": ["client.getUserData()" ,"client.getFidProfile()" ,"client.getUserDetails()" ,"client.readProfile()" ], "answer": "client.getUserData()", "userAnswer": "", "hash": "b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4"},
            { "id": "17", "explanation": "", "question": "What role do 'Farcaster Hubs' play in the Farcaster ecosystem?", "options": ["They are central servers that control all Farcaster data." ,"They are peer-to-peer nodes that store and replicate Farcaster messages, providing access to the network's data." ,"They are Farcaster's official front-end applications." ,"They are smart contracts on Ethereum." ], "answer": "They are peer-to-peer nodes that store and replicate Farcaster messages, providing access to the network's data.", "userAnswer": "", "hash": "c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5"},
            { "id": "18", "explanation": "", "question": "Can you use the Farcaster SDK to interact with Ethereum smart contracts directly?", "options": ["Yes, it's a full-featured Web3 library." ,"No, it focuses on Farcaster protocol interactions; you'd typically use another library (like Ethers.js or Web3.js) for direct Ethereum interactions." ,"Only for deploying contracts." ,"Only for reading contract events." ], "answer": "No, it focuses on Farcaster protocol interactions; you'd typically use another library (like Ethers.js or Web3.js) for direct Ethereum interactions.", "userAnswer": "", "hash": "d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6"},
            { "id": "19", "explanation": "", "question": "What is the primary purpose of the Farcaster SDK?", "options": ["To build traditional social media apps" ,"To help developers interact with the Farcaster protocol" ,"To create new blockchain networks" ,"To design user interfaces for mobile apps" ], "answer": "To help developers interact with the Farcaster protocol", "userAnswer": "", "hash": "f1a2b3c4d5e6f7g8"},
            { "id": "20", "explanation": "", "question": "Farcaster is a protocol for which type of application?", "options": ["Decentralized finance (DeFi)" ,"Gaming" ,"Decentralized social networks" ,"Supply chain management" ], "answer": "Decentralized social networks", "userAnswer": "", "hash": "f2a3b4c5d6e7f8g9"},
            { "id": "21", "explanation": "", "question": "What does 'casts' refer to in the Farcaster ecosystem?", "options": ["Smart contracts" ,"Messages or posts by users" ,"Blockchain blocks" ,"User profiles" ], "answer": "Messages or posts by users", "userAnswer": "", "hash": "f3a4b5c6d7e8f9g0"},
            { "id": "22", "explanation": "", "question": "Is Farcaster a centralized or decentralized protocol?", "options": ["Centralized" ,"Decentralized" ,"Hybrid" ,"Neither" ], "answer": "Decentralized", "userAnswer": "", "hash": "f4a5b6c7d8e9f0g1"},
            { "id": "23", "explanation": "", "question": "What is the role of a 'Hub' in the Farcaster network?", "options": ["To manage user passwords" ,"To store and relay Farcaster messages" ,"To develop new features for the protocol" ,"To regulate content on the network" ], "answer": "To store and relay Farcaster messages", "userAnswer": "", "hash": "f5a6b7c8d9e0f1g2"},
            { "id": "24", "explanation": "", "question": "Which programming language is commonly used with the Farcaster SDK?", "options": ["Python" ,"JavaScript/TypeScript" ,"Java" ,"Ruby" ], "answer": "JavaScript/TypeScript", "userAnswer": "", "hash": "f6a7b8c9d0e1f2g3"},
            { "id": "25", "explanation": "", "question": "What is the purpose of 'FIDs' in Farcaster?", "options": ["File identifiers" ,"Farcaster IDs, unique identifiers for users" ,"Feature identifiers" ,"Forum identification numbers" ], "answer": "Farcaster IDs, unique identifiers for users", "userAnswer": "", "hash": "f7a8b9c0d1e2f3g4"},
            { "id": "26", "explanation": "", "question": "Does Farcaster rely on a single central server for all operations?", "options": ["Yes, entirely" ,"No, it uses a decentralized network of Hubs" ,"Only for user authentication" ,"It uses a hybrid model with a primary central server" ], "answer": "No, it uses a decentralized network of Hubs", "userAnswer": "", "hash": "f8a9b0c1d2e3f4g5"},
            { "id": "27", "explanation": "", "question": "What is the primary benefit of building on Farcaster for social applications?", "options": ["Guaranteed monetization" ,"Censorship resistance and user ownership of data" ,"Faster video streaming" ,"Pre-built user interfaces" ], "answer": "Censorship resistance and user ownership of data", "userAnswer": "", "hash": "f9a0b1c2d3e4f5g6"},
            { "id": "28", "explanation": "", "question": "What does the Farcaster SDK allow developers to do regarding user interactions?", "options": ["Only read public data" ,"Create, publish, and interact with Farcaster messages and profiles" ,"Control user accounts remotely" ,"Send emails to Farcaster users" ], "answer": "Create, publish, and interact with Farcaster messages and profiles", "userAnswer": "", "hash": "fa0b1c2d3e4f5g6h"}
          ]
        },
        {
          "difficulty":"medium",
          "id": "22",
          "questions":[
            { "id": "0", "explanation": "", "question": "Explain how Farcaster ensures message authenticity and integrity without a central server.", "options": ["By relying on a trusted third party for verification" ,"Through cryptographic signatures (signed by user keys) and a decentralized network of Hubs for propagation" ,"Each message is manually reviewed by moderators" ,"It uses a simple checksum for verification" ], "answer": "Through cryptographic signatures (signed by user keys) and a decentralized network of Hubs for propagation", "userAnswer": "", "hash": "f1m2e3d4i5u6m7h8"},
            { "id": "1", "explanation": "", "question": "What is the purpose of 'Signers' in the Farcaster protocol, and how do they relate to user accounts?", "options": ["Signers are only used for creating new Farcaster accounts" ,"Signers are cryptographic keys that authorize actions on behalf of a Farcaster ID (FID), allowing for key rotation and delegated control" ,"Signers are external services that authenticate users" ,"Signers are responsible for mining new Farcaster tokens" ], "answer": "Signers are cryptographic keys that authorize actions on behalf of a Farcaster ID (FID), allowing for key rotation and delegated control", "userAnswer": "", "hash": "f2m3e4d5i6u7m8h9"},
            { "id": "2", "explanation": "", "question": "Describe the data replication and eventual consistency model in Farcaster Hubs.", "options": ["All Hubs must be perfectly synchronized at all times" ,"Hubs gossip messages to each other to achieve eventual consistency, meaning data might temporarily differ but will eventually converge" ,"Data is only stored on a single Hub" ,"Consistency is managed by a centralized database" ], "answer": "Hubs gossip messages to each other to achieve eventual consistency, meaning data might temporarily differ but will eventually converge", "userAnswer": "", "hash": "f3m4e5d6i7u8m9h0"},
            { "id": "3", "explanation": "", "question": "How does Farcaster handle user registration and account recovery in a decentralized manner?", "options": ["Through traditional email and password recovery" ,"It uses Ethereum smart contracts for ID registration and key management, enabling self-custody and potential recovery mechanisms" ,"Users cannot recover their accounts if they lose their keys" ,"Account management is handled by a central Farcaster entity" ], "answer": "It uses Ethereum smart contracts for ID registration and key management, enabling self-custody and potential recovery mechanisms", "userAnswer": "", "hash": "f4m5e6d7i8u9m0h1"},
            { "id": "4", "explanation": "", "question": "What is the significance of the 'Neynar' API in the Farcaster developer ecosystem?", "options": ["It is the only way to interact with Farcaster" ,"It provides a simplified, hosted API layer for Farcaster data, abstracting away the complexities of running a Hub" ,"Neynar is a separate social network entirely" ,"It's a tool for creating NFTs on Farcaster" ], "answer": "It provides a simplified, hosted API layer for Farcaster data, abstracting away the complexities of running a Hub", "userAnswer": "", "hash": "f5m6e7d8i9u0m1h2"},
            { "id": "5", "explanation": "", "question": "What kind of 'messages' can be published on Farcaster using the SDK?", "options": ["Only text-based posts" ,"Casts (posts), reactions (likes/reposts), follows, and user profile updates" ,"Strictly private, encrypted messages" ,"Financial transactions only" ], "answer": "Casts (posts), reactions (likes/reposts), follows, and user profile updates", "userAnswer": "", "hash": "f6m7e8d9i0u1m2h3"},
            { "id": "6", "explanation": "", "question": "How does the Farcaster SDK support the creation of custom 'clients' or applications?", "options": ["It restricts development to official Farcaster clients" ,"By providing the necessary tools and libraries to read from and write to the Farcaster protocol, enabling diverse user interfaces" ,"It only provides data, not interaction capabilities" ,"Developers must build everything from scratch without the SDK" ], "answer": "By providing the necessary tools and libraries to read from and write to the Farcaster protocol, enabling diverse user interfaces", "userAnswer": "", "hash": "f7m8e9d0i1u2m3h4"},
            { "id": "7", "explanation": "", "question": "What is the benefit of Farcaster's 'off-chain' data storage model for most social interactions?", "options": ["It makes data less secure" ,"It significantly reduces transaction costs and increases scalability compared to storing every interaction on-chain" ,"It centralizes data storage" ,"It makes data more difficult to access" ], "answer": "It significantly reduces transaction costs and increases scalability compared to storing every interaction on-chain", "userAnswer": "", "hash": "f8m9e0d1i2u3m4h5"},
            { "id": "8", "explanation": "", "question": "How do developers handle 'optimistic updates' in Farcaster applications?", "options": ["They wait for absolute confirmation from all Hubs before updating the UI" ,"They update the user interface immediately, assuming the message will eventually be propagated, and handle potential reconciliation later" ,"Optimistic updates are not supported by the Farcaster SDK" ,"They only update the UI once all network nodes confirm the message" ], "answer": "They update the user interface immediately, assuming the message will eventually be propagated, and handle potential reconciliation later", "userAnswer": "", "hash": "f9m0e1d2i3u4m5h6"},
            { "id": "9", "explanation": "", "question": "What are 'Frames' in Farcaster, and how do they extend social interactions?", "options": ["Static images embedded in casts" ,"Interactive mini-applications embedded directly within casts, allowing for rich experiences without leaving the feed" ,"Design templates for Farcaster clients" ,"Video content formats" ], "answer": "Interactive mini-applications embedded directly within casts, allowing for rich experiences without leaving the feed", "userAnswer": "", "hash": "fm0e1d2i3u4m5h6i"},
            { "id": "10", "explanation": "", "question": "Explain the concept of 'signers' in Farcaster and how they relate to user identity and the SDK.", "options": ["Signers are physical signatures of users." ,"Signers are cryptographic keys (e.g., Ethereum private keys or derived app-specific keys) used to sign Farcaster messages, proving ownership and authorizing actions on behalf of a Farcaster ID (FID)." ,"Signers are unique Farcaster IDs." ,"Signers are only for reading data." ], "answer": "Signers are cryptographic keys (e.g., Ethereum private keys or derived app-specific keys) used to sign Farcaster messages, proving ownership and authorizing actions on behalf of a Farcaster ID (FID).", "userAnswer": "", "hash": "e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7"},
            { "id": "11", "explanation": "", "question": "How does Farcaster handle user registration and identity, and what role does Ethereum play?", "options": ["Users register directly with Farcaster by creating a username and password." ,"User Farcaster IDs (FIDs) are typically registered and managed on Ethereum (e.g., via ENS or a dedicated contract), linking an Ethereum address to a Farcaster identity. This provides a decentralized root of trust for Farcaster profiles." ,"Farcaster uses a centralized database for identity." ,"Ethereum is only used for payments on Farcaster." ], "answer": "User Farcaster IDs (FIDs) are typically registered and managed on Ethereum (e.g., via ENS or a dedicated contract), linking an Ethereum address to a Farcaster identity. This provides a decentralized root of trust for Farcaster profiles.", "userAnswer": "", "hash": "f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8"},
            { "id": "12", "explanation": "", "question": "What is the significance of 'FIDs' and 'storage' in the Farcaster protocol, particularly when writing data?", "options": ["FIDs are just usernames, storage is irrelevant." ,"FIDs represent distinct user identities. Users must acquire 'storage' (e.g., by paying for it) to publish messages on Farcaster. This mechanism helps manage network resources and prevent spam by making publishing costly." ,"FIDs are for internal use only, storage is free." ,"Storage is only for media files." ], "answer": "FIDs represent distinct user identities. Users must acquire 'storage' (e.g., by paying for it) to publish messages on Farcaster. This mechanism helps manage network resources and prevent spam by making publishing costly.", "userAnswer": "", "hash": "a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9"},
            { "id": "13", "explanation": "", "question": "How does the Farcaster SDK handle the interaction with multiple Farcaster Hubs?", "options": ["It connects to only one Hub at a time." ,"The SDK can be configured to connect to multiple Hub endpoints. It often attempts to connect to available Hubs or allows specifying a preferred Hub, ensuring data redundancy and availability." ,"It automatically finds all active Hubs without configuration." ,"You must manually manage connections to each Hub." ], "answer": "The SDK can be configured to connect to multiple Hub endpoints. It often attempts to connect to available Hubs or allows specifying a preferred Hub, ensuring data redundancy and availability.", "userAnswer": "", "hash": "b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0"},
            { "id": "14", "explanation": "", "question": "What is the purpose of 'Neynar' in the Farcaster ecosystem, and how does it relate to the SDK?", "options": ["Neynar is a separate blockchain for Farcaster." ,"Neynar is a platform providing APIs and developer tools that abstract away some complexities of interacting with Farcaster Hubs and smart contracts, making it easier to build dApps. The Farcaster SDK often integrates or complements Neynar's services." ,"Neynar is Farcaster's official wallet." ,"Neynar is a data analytics tool only." ], "answer": "Neynar is a platform providing APIs and developer tools that abstract away some complexities of interacting with Farcaster Hubs and smart contracts, making it easier to build dApps. The Farcaster SDK often integrates or complements Neynar's services.", "userAnswer": "", "hash": "c6dyy1e8f9a0b1c2d3e4f5a6b7c8d9e0"}
          ]
        },
        {
          "difficulty":"hard",
          "id": "23",
          "questions":[
            { "id": "0", "explanation": "", "question": "Deep dive into the cryptographic primitives and signature schemes used by Farcaster to secure user messages and identities.", "options": ["Farcaster relies on simple symmetric encryption for all security" ,"It leverages secp256k1 elliptic curve cryptography for FID generation and message signing, ensuring message authenticity and non-repudiation" ,"Security is based on a proprietary, undisclosed algorithm" ,"Only hash functions are used for security" ], "answer": "It leverages secp256k1 elliptic curve cryptography for FID generation and message signing, ensuring message authenticity and non-repudiation", "userAnswer": "", "hash": "f1h2a3r4d5c6r7y8"},
            { "id": "1", "explanation": "", "question": "Analyze the trade-offs of Farcaster's hybrid on-chain/off-chain architecture for scalability and decentralization.", "options": ["The hybrid model offers no trade-offs; it's perfect" ,"It balances scalability (off-chain messages via Hubs) with core decentralization (on-chain FIDs/key registration), but introduces complexity and reliance on Hub operators for data availability" ,"It primarily sacrifices decentralization for extreme scalability" ,"The architecture is purely on-chain for maximum decentralization" ], "answer": "It balances scalability (off-chain messages via Hubs) with core decentralization (on-chain FIDs/key registration), but introduces complexity and reliance on Hub operators for data availability", "userAnswer": "", "hash": "f2h3a4r5d6c7r8y9"},
            { "id": "2", "explanation": "", "question": "Discuss the challenges and potential solutions for 'data pruning' and long-term data archival in a growing decentralized social network like Farcaster.", "options": ["Data pruning is unnecessary; all data is stored forever by default" ,"Challenges include managing ever-increasing data size on Hubs and ensuring historical data access; solutions involve explicit data expiry, archival to cheaper storage (e.g., Arweave), or community-run archival nodes" ,"Data is automatically deleted after a short period" ,"There are no challenges related to data management" ], "answer": "Challenges include managing ever-increasing data size on Hubs and ensuring historical data access; solutions involve explicit data expiry, archival to cheaper storage (e.g., Arweave), or community-run archival nodes", "userAnswer": "", "hash": "f3h4a5r6d7c8r9y0"},
            { "id": "3", "explanation": "", "question": "How does Farcaster's protocol design mitigate censorship and provide resistance against malicious actors?", "options": ["It has centralized moderators who approve all content" ,"By decentralizing data storage across multiple Hubs, allowing users to choose their Hub, and making message signing verifiable, it makes it difficult for a single entity to censor content" ,"Censorship resistance is not a primary goal for Farcaster" ,"It relies on legal frameworks to prevent censorship" ], "answer": "By decentralizing data storage across multiple Hubs, allowing users to choose their Hub, and making message signing verifiable, it makes it difficult for a single entity to censor content", "userAnswer": "", "hash": "f4h5a6r7d8c9r0y1"},
            { "id": "4", "explanation": "", "question": "Explore the implications of 'Frames' for the future of composable and interactive content within decentralized social applications.", "options": ["Frames are a niche feature with limited impact" ,"Frames enable rich, dynamic, and potentially monetizable experiences directly in the social feed, fostering greater engagement and opening new avenues for dApps and Web3 integrations" ,"Frames will primarily be used for static advertisements" ,"Frames centralize content creation" ], "answer": "Frames enable rich, dynamic, and potentially monetizable experiences directly in the social feed, fostering greater engagement and opening new avenues for dApps and Web3 integrations", "userAnswer": "", "hash": "f5h6a7r8d9c0r1y2"},
            { "id": "5", "explanation": "", "question": "What role do 'Ethereum Name Service (ENS)' or similar decentralized naming systems play in enhancing Farcaster user experience?", "options": ["They are irrelevant to Farcaster" ,"They provide human-readable names for Farcaster IDs, making profiles easier to remember and share than raw FIDs or wallet addresses" ,"They are used for domain registration only" ,"They replace the need for Farcaster IDs entirely" ], "answer": "They provide human-readable names for Farcaster IDs, making profiles easier to remember and share than raw FIDs or wallet addresses", "userAnswer": "", "hash": "f6h7a8r9d0c1r2y3"},
            { "id": "6", "explanation": "", "question": "Discuss the challenges of migrating an existing Web2 social graph to a decentralized protocol like Farcaster.", "options": ["Migration is straightforward and automatic" ,"Challenges include user onboarding, data interoperability, maintaining existing relationships, and incentivizing adoption without a central authority" ,"There are no challenges, only benefits" ,"Web2 social graphs are fundamentally incompatible with decentralized protocols" ], "answer": "Challenges include user onboarding, data interoperability, maintaining existing relationships, and incentivizing adoption without a central authority", "userAnswer": "", "hash": "f7h8a9r0d1c2r3y4"},
            { "id": "7", "explanation": "", "question": "How does Farcaster aim to achieve 'sybil resistance' in a decentralized environment?", "options": ["By relying on IP address filtering" ,"Through a combination of on-chain FID registration (which can involve a small fee) and a focus on unique, human-readable identities over anonymous ones" ,"It does not address sybil resistance" ,"By requiring users to submit government IDs" ], "answer": "Through a combination of on-chain FID registration (which can involve a small fee) and a focus on unique, human-readable identities over anonymous ones", "userAnswer": "", "hash": "f8h9a0r1d2c3r4y5"},
            { "id": "8", "explanation": "", "question": "What are the engineering considerations for running a Farcaster Hub, particularly regarding data storage, processing, and network connectivity?", "options": ["Running a Hub requires minimal resources" ,"Considerations include significant storage for message history, sufficient CPU/RAM for processing and validating messages, and robust network bandwidth for P2P gossip and data synchronization" ,"Hubs are purely theoretical and not meant to be run by individuals" ,"Only basic internet connectivity is needed" ], "answer": "Considerations include significant storage for message history, sufficient CPU/RAM for processing and validating messages, and robust network bandwidth for P2P gossip and data synchronization", "userAnswer": "", "hash": "f9h0a1r2d3c4r5y6"},
            { "id": "9", "explanation": "", "question": "Evaluate the long-term sustainability model for Farcaster, considering potential tokenomics, funding mechanisms, and community governance.", "options": ["Farcaster has no long-term sustainability plan" ,"Sustainability could come from protocol fees (e.g., FID registration), community grants, or value accrual to associated tokens, managed by decentralized governance structures" ,"It relies solely on venture capital funding indefinitely" ,"The protocol will eventually become fully free and require no funding" ], "answer": "Sustainability could come from protocol fees (e.g., FID registration), community grants, or value accrual to associated tokens, managed by decentralized governance structures", "userAnswer": "", "hash": "fh0a1r2d3c4r5y6i"}
          ]
        }
      ]
    },
    {
      "category": "defi",
      "id": "8",
      "description": "Test your knowledge across various topics in DeFi. You will get questions that are tailored to test your understanding of the space",
      "levels": [
        {
          "difficulty":"easy",
          "id": "24",
          "questions":[
            { "id": "0", "explanation": "", "question": "What does DeFi stand for?","options": ["Default Finance","Decentralized Finance","Defined Finance","Digital Federation"],"answer": 1,"userAnswer": "","hash": "2d6d25158db5fddc5b77babb2a191335faa52a97e5180558312f5c97222ba264"},
            { "id": "1", "explanation": "", "question": "Which blockchain is most commonly associated with DeFi?","options": ["Bitcoin","Solana","Ethereum","Cardano"],"answer": 2,"userAnswer": "","hash": "85ea8ed8b1087bf615d9617c9e386bf05bebabb3cb22d7956785ff3773dabbbc"},
            { "id": "2", "explanation": "", "question": "What is a DEX in the context of DeFi?","options": ["Digital Exchange","Distributed Executor","Decentralized Exchange","Data Extraction Tool"],"answer": 2,"userAnswer": "","hash": "1cccf42bba2cc0407d444582ebd3b7f2896c155cee7ba918d9757bd6c899a546"},
            { "id": "3", "explanation": "", "question": "What does DeFi stand for?", "options": ["Decentralized Finance" ,"Digital Economy Fund" ,"Distributed Financials" ,"Decentralized Funds" ], "answer": "Decentralized Finance", "userAnswer": "", "hash": "a1b2c3d4e5f67890"},
            { "id": "4", "explanation": "", "question": "Which blockchain is most commonly associated with early DeFi growth?", "options": ["Bitcoin" ,"Ethereum" ,"Solana" ,"Ripple" ], "answer": "Ethereum", "userAnswer": "", "hash": "b2c3d4e5f67890a1"},
            { "id": "5", "explanation": "", "question": "What is a common term for lending and borrowing in DeFi?", "options": ["Staking" ,"Yield Farming" ,"Liquidity Pools" ,"Decentralized Exchanges" ], "answer": "Liquidity Pools", "userAnswer": "", "hash": "c3d4e5f67890a1b2"},
            { "id": "6", "explanation": "", "question": "What is the purpose of a stablecoin in DeFi?", "options": ["To gain high returns" ,"To provide price stability" ,"To facilitate quick transactions" ,"To act as collateral" ], "answer": "To provide price stability", "userAnswer": "", "hash": "d4e5f67890a1b2c3"},
            { "id": "7", "explanation": "", "question": "Which of the following is NOT a core component of DeFi?", "options": ["Smart Contracts" ,"Centralized Banks" ,"Decentralized Applications (dApps)" ,"Blockchain Technology" ], "answer": "Centralized Banks", "userAnswer": "", "hash": "e5f67890a1b2c3d4"},
            { "id": "8", "explanation": "", "question": "What does an Automated Market Maker (AMM) do in DeFi?", "options": ["Manually matches buyers and sellers" ,"Uses algorithms to facilitate trading" ,"Provides investment advice" ,"Regulates cryptocurrency prices" ], "answer": "Uses algorithms to facilitate trading", "userAnswer": "", "hash": "f67890a1b2c3d4e5"},
            { "id": "9", "explanation": "", "question": "What is 'yield farming' in simple terms?", "options": ["Growing crops on a farm" ,"Maximizing crypto returns through various strategies" ,"Mining new cryptocurrencies" ,"Selling cryptocurrency for profit" ], "answer": "Maximizing crypto returns through various strategies", "userAnswer": "", "hash": "7890a1b2c3d4e5f6"},
            { "id": "10", "explanation": "", "question": "What is a 'flash loan' in DeFi?", "options": ["A loan that must be repaid within an hour" ,"A loan that requires no collateral" ,"A loan taken and repaid within the same blockchain transaction" ,"A loan with a very high interest rate" ], "answer": "A loan taken and repaid within the same blockchain transaction", "userAnswer": "", "hash": "890a1b2c3d4e5f67"},
            { "id": "11", "explanation": "", "question": "What is the primary goal of DeFi?", "options": ["To replace all traditional banks" ,"To create an open and accessible financial system" ,"To make cryptocurrency trading easier" ,"To allow anonymous transactions only" ], "answer": "To create an open and accessible financial system", "userAnswer": "", "hash": "90a1b2c3d4e5f678"},
            { "id": "12", "explanation": "", "question": "What does impermanent loss refer to in DeFi?", "options": ["The permanent loss of funds in a hack" ,"The temporary loss of funds due to price divergence in a liquidity pool" ,"A loss that is irreversible" ,"Losses incurred during a bear market" ], "answer": "The temporary loss of funds due to price divergence in a liquidity pool", "userAnswer": "", "hash": "0a1b2c3d4e5f6789"}
          ]
        },
        {
          "difficulty":"medium",
          "id": "25",
          "questions":[
            { "id": "0", "explanation": "", "question": "What is the function of an automated market maker (AMM)?","options": ["To manage digital identity","To automate smart contracts","To facilitate token swaps without order books","To track gas fees"],"answer": 2,"userAnswer": "","hash": "b0cd59179a4de7a75cb948d3aae74ddff26fa70c7001fcee8976deddca47bad4"},
            { "id": "1", "explanation": "", "question": "What are liquidity pools used for in DeFi?","options": ["Holding NFTs","Powering data analytics","Facilitating peer-to-peer lending","Providing liquidity for decentralized exchanges"],"answer": 3,"userAnswer": "","hash": "3694653572f7669da92bb9859d160459191661cfa51577a1992fa7f7586c7019"},
            { "id": "2", "explanation": "", "question": "Which of the following is a lending protocol in DeFi?","options": ["OpenSea","Aave","Uniswap","MetaMask"],"answer": 1,"userAnswer": "","hash": "6fb0f5d1b7d4ef0ccfae8042d3e383e5a680f23016876c7578f5d8fcd3ccc4a6"},
            { "id": "3", "explanation": "", "question": "Explain the concept of 'wrapped' tokens in DeFi.", "options": ["Tokens that are physically wrapped in paper" ,"Tokens that are backed 1:1 by another cryptocurrency, usually on a different blockchain" ,"Tokens that are secured by smart contracts" ,"Tokens that are used for gift cards" ], "answer": "Tokens that are backed 1:1 by another cryptocurrency, usually on a different blockchain", "userAnswer": "", "hash": "1b2c3d4e5f67890a"},
            { "id": "4", "explanation": "", "question": "How do Decentralized Autonomous Organizations (DAOs) contribute to DeFi governance?", "options": ["They are centralized entities that control DeFi protocols" ,"They allow token holders to vote on protocol changes and upgrades" ,"They only exist for marketing purposes" ,"They issue new cryptocurrencies" ], "answer": "They allow token holders to vote on protocol changes and upgrades", "userAnswer": "", "hash": "2c3d4e5f67890a1b"},
            { "id": "5", "explanation": "", "question": "What is the difference between an order book exchange and an AMM in DeFi?", "options": ["Order books are for traditional finance, AMMs are for crypto" ,"Order books match buyers and sellers, while AMMs use liquidity pools" ,"AMMs are more centralized than order book exchanges" ,"There is no significant difference" ], "answer": "Order books match buyers and sellers, while AMMs use liquidity pools", "userAnswer": "", "hash": "3d4e5f67890a1b2c"},
            { "id": "6", "explanation": "", "question": "Describe the function of a 'bridge' in the context of DeFi.", "options": ["A physical structure connecting two landmasses" ,"A protocol that allows assets to be transferred between different blockchains" ,"A tool for smart contract deployment" ,"A mechanism for securing transactions" ], "answer": "A protocol that allows assets to be transferred between different blockchains", "userAnswer": "", "hash": "4e5f67890a1b2c3d"},
            { "id": "7", "explanation": "", "question": "What are some of the risks associated with participating in DeFi?", "options": ["Zero risk, as everything is decentralized" ,"Smart contract bugs, impermanent loss, and regulatory uncertainty" ,"Only risks associated with traditional banking" ,"The risk of losing physical assets" ], "answer": "Smart contract bugs, impermanent loss, and regulatory uncertainty", "userAnswer": "", "hash": "5f67890a1b2c3d4e"},
            { "id": "8", "explanation": "", "question": "How does 'liquid staking' differ from traditional staking in DeFi?", "options": ["Liquid staking involves physical assets" ,"Traditional staking provides liquidity while liquid staking does not" ,"Liquid staking allows users to receive a liquid token representing their staked assets" ,"There is no difference" ], "answer": "Liquid staking allows users to receive a liquid token representing their staked assets", "userAnswer": "", "hash": "6f7890a1b2c3d4e5"},
            { "id": "9", "explanation": "", "question": "What is the role of an 'oracle' in DeFi?", "options": ["To predict future cryptocurrency prices" ,"To provide smart contracts with external real-world data" ,"To manage liquidity pools" ,"To issue new tokens" ], "answer": "To provide smart contracts with external real-world data", "userAnswer": "", "hash": "7f890a1b2c3d4e5f"},
            { "id": "10", "explanation": "", "question": "Explain 'collateralized debt positions' (CDPs) in DeFi lending.", "options": ["Loans that require no collateral" ,"Borrowing against locked collateral, often stablecoins" ,"A type of uncollateralized loan" ,"Investments with guaranteed returns" ], "answer": "Borrowing against locked collateral, often stablecoins", "userAnswer": "", "hash": "8f90a1b2c3d4e5f6"},
            { "id": "11", "explanation": "", "question": "What is the significance of composability in DeFi?", "options": ["It allows different DeFi protocols to be combined and integrated" ,"It means DeFi is very complex" ,"It refers to the ability to compose new musical pieces" ,"It is a security feature to prevent hacks" ], "answer": "It allows different DeFi protocols to be combined and integrated", "userAnswer": "", "hash": "9f0a1b2c3d4e5f67"},
            { "id": "12", "explanation": "", "question": "How do 'synthetic assets' function in DeFi?", "options": ["They are physically manufactured assets" ,"They are digital assets that mimic the price of other assets (e.g., stocks, commodities)" ,"They are used for creating new cryptocurrencies" ,"They are assets with no real-world value" ], "answer": "They are digital assets that mimic the price of other assets (e.g., stocks, commodities)", "userAnswer": "", "hash": "0a1b2c3d4e5f6789"}
          ]
        },
        {
          "difficulty":"hard",
          "id": "26",
          "questions":[
            { "id": "0", "explanation": "", "question": "What is impermanent loss in DeFi?","options": ["temporary drop in token price","penalty fee for early withdrawal","Loss incurred by providing liquidity due to price divergence","A drop in wallet balances due to hacks"],"answer": 2,"userAnswer": "","hash": "3d75e7b259317d0a9bf64264fe2fdbf0aba30288ebf4d914a9f500ad37d04a19"},
            { "id": "1", "explanation": "", "question": "What role does Chainlink play in the DeFi ecosystem?","options": ["Token exchange","Blockchain scalability","Providing decentralized oracles","Gas fee tracking"],"answer": 2,"userAnswer": "","hash": "56b12b6150080901776573e8634062093ba95ed8493b07222315e73c20fb7942"},
            { "id": "2", "explanation": "", "question": "Which protocol implements yield farming strategies using vaults?","options": ["Uniswap","Yearn Finance","SushiSwap","Compound"],"answer": 1,"userAnswer": "","hash": "b475082b70449bc8e890bd7039e969a6e10e898f193123054a53dbdb1c7ba9fb"},
            { "id": "3", "explanation": "", "question": "Discuss the 'DeFi Legos' metaphor and its implications for innovation.", "options": ["It refers to the playful nature of DeFi development" ,"It highlights how DeFi protocols can be stacked and combined to create new financial products" ,"It means DeFi is rigid and inflexible" ,"It's a branding strategy for new DeFi projects" ], "answer": "It highlights how DeFi protocols can be stacked and combined to create new financial products", "userAnswer": "", "hash": "a1b2c3d4e5f67891"},
            { "id": "4", "explanation": "", "question": "Analyze the potential systemic risks introduced by highly interconnected DeFi protocols.", "options": ["Interconnectedness reduces all risks" ,"A failure in one protocol could cascade and affect others, leading to widespread instability" ,"Systemic risks are only present in traditional finance" ,"Interconnectedness makes DeFi more secure" ], "answer": "A failure in one protocol could cascade and affect others, leading to widespread instability", "userAnswer": "", "hash": "b2c3d4e5f67891a1"},
            { "id": "5", "explanation": "", "question": "How might DeFi evolve to incorporate real-world assets (RWAs) more effectively?", "options": ["By ignoring RWAs entirely" ,"Through tokenization, legal frameworks, and robust oracle solutions" ,"By relying solely on off-chain data" ,"By making RWAs fully decentralized" ], "answer": "Through tokenization, legal frameworks, and robust oracle solutions", "userAnswer": "", "hash": "c3d4e5f67891a1b2"},
            { "id": "6", "explanation": "", "question": "Evaluate the challenges and opportunities of scaling DeFi beyond Ethereum.", "options": ["There are no challenges, only opportunities" ,"Challenges include interoperability and liquidity fragmentation, opportunities include lower fees and higher throughput" ,"Scaling DeFi is not necessary" ,"Ethereum is the only viable blockchain for DeFi" ], "answer": "Challenges include interoperability and liquidity fragmentation, opportunities include lower fees and higher throughput", "userAnswer": "", "hash": "d4e5f67891a1b2c3"},
            { "id": "7", "explanation": "", "question": "Discuss the regulatory landscape for DeFi and its potential impact on future development.", "options": ["Regulation will have no impact on DeFi" ,"Unclear regulations could hinder innovation, while well-defined rules could foster adoption and security" ,"DeFi should remain completely unregulated" ,"Only self-regulation is needed" ], "answer": "Unclear regulations could hinder innovation, while well-defined rules could foster adoption and security", "userAnswer": "", "hash": "e5f67891a1b2c3d4"},
            { "id": "8", "explanation": "", "question": "How can 'identity' be integrated into DeFi while maintaining decentralization and privacy?", "options": ["By requiring full KYC for all users" ,"Through decentralized identity solutions (DIDs) and zero-knowledge proofs" ,"Identity is not relevant to DeFi" ,"Only centralized identity providers should be used" ], "answer": "Through decentralized identity solutions (DIDs) and zero-knowledge proofs", "userAnswer": "", "hash": "f67891a1b2c3d4e5"},
            { "id": "9", "explanation": "", "question": "Explore the economic implications of 'tokenomics' in driving DeFi protocol adoption and sustainability.", "options": ["Tokenomics are irrelevant to DeFi success" ,"Well-designed tokenomics incentivize participation, govern the protocol, and capture value, fostering long-term growth" ,"Only high token prices matter for sustainability" ,"Tokenomics are a purely theoretical concept" ], "answer": "Well-designed tokenomics incentivize participation, govern the protocol, and capture value, fostering long-term growth", "userAnswer": "", "hash": "7891a1b2c3d4e5f6"},
            { "id": "10", "explanation": "", "question": "What role do 'security audits' play in ensuring the safety and trustworthiness of DeFi protocols?", "options": ["They are unnecessary in decentralized systems" ,"They identify vulnerabilities and bugs in smart contracts, reducing the risk of exploits and hacks" ,"They are only for regulatory compliance" ,"They guarantee that a protocol will never be hacked" ], "answer": "They identify vulnerabilities and bugs in smart contracts, reducing the risk of exploits and hacks", "userAnswer": "", "hash": "891a1b2c3d4e5f67"},
            { "id": "11", "explanation": "", "question": "How can DeFi address the challenge of 'user experience' to achieve broader mainstream adoption?", "options": ["User experience is not a priority for DeFi" ,"Through simpler interfaces, improved onboarding, and abstracting away blockchain complexities" ,"By increasing technical jargon" ,"By relying on existing traditional finance interfaces" ], "answer": "Through simpler interfaces, improved onboarding, and abstracting away blockchain complexities", "userAnswer": "", "hash": "91a1b2c3d4e5f678"},
            { "id": "12", "explanation": "", "question": "Propose solutions for mitigating the 'oracle problem' in DeFi for more robust and reliable data feeds.", "options": ["Eliminating oracles entirely" ,"Utilizing decentralized oracle networks, multi-source aggregation, and cryptographic proofs" ,"Relying on single, centralized data sources" ,"Ignoring external data for DeFi operations" ], "answer": "Utilizing decentralized oracle networks, multi-source aggregation, and cryptographic proofs", "userAnswer": "", "hash": "0a1b2c3d4e5f67891"}
          ]
        }
      ]
    },
    {
      "category": "celo",
      "id": "9",
      "description": "Test your knowledge across Celo ecosystem. You will get questions that are tailored to test your understanding of the platform",
      "levels": [
        {
          "difficulty":"easy",
          "id": "27",
          "questions":[
            { "id": "0", "explanation": "", "question": "What is the primary goal of the Celo blockchain?", "options": ["To be the fastest blockchain for gaming" ,"To build a mobile-first financial system that anyone can access" ,"To create a new type of NFT marketplace" ,"To compete directly with Bitcoin as a store of value" ], "answer": "To build a mobile-first financial system that anyone can access", "userAnswer": "", "hash": "c1c2c3c4c5c6c7c8"},
            { "id": "1", "explanation": "", "question": "What is the native cryptocurrency of the Celo blockchain?", "options": ["CELO" ,"CUSD" ,"CEUR" ,"CBTC" ], "answer": "CELO", "userAnswer": "", "hash": "c2c3c4c5c6c7c8c9"},
            { "id": "2", "explanation": "", "question": "Which stablecoin is native to the Celo network and pegged to the US Dollar?", "options": ["USDT" ,"DAI" ,"cUSD" ,"BUSD" ], "answer": "cUSD", "userAnswer": "", "hash": "c3c4c5c6c7c8c9c1"},
            { "id": "3", "explanation": "", "question": "Celo uses which consensus mechanism?", "options": ["Proof of Work (PoW)" ,"Proof of Stake (PoS)" ,"Delegated Proof of Stake (DPoS)" ,"Proof of Authority (PoA)" ], "answer": "Proof of Stake (PoS)", "userAnswer": "", "hash": "c4c5c6c7c8c9c1c2"},
            { "id": "4", "explanation": "", "question": "What feature allows Celo users to send and receive payments using phone numbers?", "options": ["Email addresses" ,"Public key infrastructure" ,"Address-based payments" ,"Key-backed accounts and address-based encryption" ], "answer": "Key-backed accounts and address-based encryption", "userAnswer": "", "hash": "c5c6c7c8c9c1c2c3"},
            { "id": "5", "explanation": "", "question": "What is the Celo Alliance for Prosperity?", "options": ["A group of validators on the Celo network" ,"A global consortium of organizations building on Celo" ,"A marketing campaign for Celo" ,"A research group for blockchain technology" ], "answer": "A global consortium of organizations building on Celo", "userAnswer": "", "hash": "c6c7c8c9c1c2c3c4"},
            { "id": "6", "explanation": "", "question": "What problem does Celo aim to solve regarding financial inclusion?", "options": ["High transaction fees for large corporations" ,"Lack of access to financial services for unbanked populations" ,"Slow processing times for international transfers" ,"The need for more complex financial instruments" ], "answer": "Lack of access to financial services for unbanked populations", "userAnswer": "", "hash": "c7c8c9c1c2c3c4c5"},
            { "id": "7", "explanation": "", "question": "Which type of assets are designed to be stable in value on Celo?", "options": ["Volatile cryptocurrencies" ,"NFTs" ,"Stablecoins" ,"Governance tokens" ], "answer": "Stablecoins", "userAnswer": "", "hash": "c8c9c1c2c3c4c5c6"},
            { "id": "8", "explanation": "", "question": "Celo's approach to gas fees is unique because:", "options": ["They are always free" ,"They can be paid in stablecoins like cUSD" ,"They are paid in Bitcoin" ,"They are fixed at a very high rate" ], "answer": "They can be paid in stablecoins like cUSD", "userAnswer": "", "hash": "c9c1c2c3c4c5c6c7"},
            { "id": "9", "explanation": "", "question": "What is the Celo Reserve's function?", "options": ["To store all CELO tokens" ,"To back the value of Celo stablecoins" ,"To fund new Celo projects" ,"To provide liquidity to exchanges" ], "answer": "To back the value of Celo stablecoins", "userAnswer": "", "hash": "c1c2c3c4c5c6c7c8d"}
          ]
        },
        {
          "difficulty":"medium",
          "id": "28",
          "questions":[
            { "id": "0", "explanation": "", "question": "Explain how Celo's stability mechanism works for its stablecoins.", "options": ["It relies on a centralized bank to maintain the peg" ,"It uses a dual-asset system with the CELO token acting as a reserve asset and a decentralized reserve of other cryptocurrencies" ,"It is backed solely by fiat currency in a bank account" ,"There is no stability mechanism, it's a free-floating currency" ], "answer": "It uses a dual-asset system with the CELO token acting as a reserve asset and a decentralized reserve of other cryptocurrencies", "userAnswer": "", "hash": "c1c2c3c4c5c6c7c8e"},
            { "id": "1", "explanation": "", "question": "What is the significance of Celo's EVM compatibility?", "options": ["It means Celo can only run Bitcoin applications" ,"It allows developers to easily migrate or build dApps from Ethereum to Celo" ,"It makes Celo incompatible with other blockchains" ,"It's a security feature that prevents hacks" ], "answer": "It allows developers to easily migrate or build dApps from Ethereum to Celo", "userAnswer": "", "hash": "c2c3c4c5c6c7c8e1"},
            { "id": "2", "explanation": "", "question": "How does Celo's mobile-first approach impact its design and features?", "options": ["It prioritizes complex desktop interfaces" ,"It emphasizes light clients, phone number mapping, and low transaction fees" ,"It only allows mobile devices to act as validators" ,"Mobile access is an afterthought" ], "answer": "It emphasizes light clients, phone number mapping, and low transaction fees", "userAnswer": "", "hash": "c3c4c5c6c7c8e1c2"},
            { "id": "3", "explanation": "", "question": "What is the role of validators and governance in the Celo ecosystem?", "options": ["Validators are only responsible for marketing" ,"Validators secure the network and participate in governance decisions alongside CELO holders" ,"Governance is controlled by a single entity" ,"There is no governance in Celo" ], "answer": "Validators secure the network and participate in governance decisions alongside CELO holders", "userAnswer": "", "hash": "c4c5c6c7c8e1c2c3"},
            { "id": "4", "explanation": "", "question": "Describe the Celo Camp initiative.", "options": ["A summer camp for children interested in blockchain" ,"A virtual accelerator program for startups building on Celo" ,"A physical location where Celo developers work" ,"A community outreach program for Celo users" ], "answer": "A virtual accelerator program for startups building on Celo", "userAnswer": "", "hash": "c5c6c7c8e1c2c3c4"},
            { "id": "5", "explanation": "", "question": "How does Celo enable carbon offsetting and regenerative finance?", "options": ["By solely relying on government regulations" ,"Through partnerships and initiatives focused on tokenizing natural assets and supporting climate-positive projects" ,"It has no focus on environmental initiatives" ,"By using a proof-of-work consensus mechanism" ], "answer": "Through partnerships and initiatives focused on tokenizing natural assets and supporting climate-positive projects", "userAnswer": "", "hash": "c6c7c8e1c2c3c4c5"},
            { "id": "6", "explanation": "", "question": "What is the purpose of the 'Donut' hardfork on Celo?", "options": ["To change the Celo logo" ,"To introduce new stablecoins" ,"To bring Ethereum improvements and reduce transaction costs" ,"To make Celo less secure" ], "answer": "To bring Ethereum improvements and reduce transaction costs", "userAnswer": "", "hash": "c7c8e1c2c3c4c5c6"},
            { "id": "7", "explanation": "", "question": "How does Celo address the issue of transaction finality compared to other blockchains?", "options": ["It has slower finality than Bitcoin" ,"It aims for fast transaction finality to support real-world payments" ,"Transaction finality is not a concern for Celo" ,"It relies on off-chain solutions for finality" ], "answer": "It aims for fast transaction finality to support real-world payments", "userAnswer": "", "hash": "c8e1c2c3c4c5c6c7"},
            { "id": "8", "explanation": "", "question": "What is the role of 'governance proposals' in the Celo ecosystem?", "options": ["They are only for technical upgrades" ,"They allow the community to propose and vote on changes to the protocol and its parameters" ,"They are purely advisory and have no real impact" ,"They are controlled by a central foundation" ], "answer": "They allow the community to propose and vote on changes to the protocol and its parameters", "userAnswer": "", "hash": "c8e1c2c3c4c5c6c7d"},
            { "id": "9", "explanation": "", "question": "How does Celo aim to achieve scalability while maintaining decentralization?", "options": ["By centralizing all operations" ,"Through a performant PoS consensus and planned sharding in the future" ,"By limiting the number of users" ,"Scalability is not a goal for Celo" ], "answer": "Through a performant PoS consensus and planned sharding in the future", "userAnswer": "", "hash": "c8e1c2c3c4c5c6c7e"}
          ]
        },
        {
          "difficulty":"hard",
          "id": "29",
          "questions":[
            { "id": "0", "explanation": "", "question": "Analyze the potential challenges and opportunities for Celo's interoperability with other blockchain ecosystems.", "options": ["Celo is designed to be completely isolated" ,"Challenges include bridging complexities; opportunities include expanding reach and liquidity through cross-chain solutions" ,"Interoperability is not a focus for Celo" ,"All blockchains are inherently interoperable" ], "answer": "Challenges include bridging complexities; opportunities include expanding reach and liquidity through cross-chain solutions", "userAnswer": "", "hash": "c1c2c3c4c5c6c7c8f"},
            { "id": "1", "explanation": "", "question": "Discuss the economic model of CELO and its role in securing the network and stabilizing cStable assets.", "options": ["CELO has no economic model" ,"CELO is a governance and utility token used for staking, transaction fees, and as a collateral asset for cStables" ,"CELO is only used for speculative trading" ,"The economic model is controlled by a single central entity" ], "answer": "CELO is a governance and utility token used for staking, transaction fees, and as a collateral asset for cStables", "userAnswer": "", "hash": "c2c3c4c5c6c7c8f1"},
            { "id": "2", "explanation": "", "question": "Evaluate the effectiveness of Celo's mobile-first strategy in fostering financial inclusion in developing regions.", "options": ["The mobile-first strategy is irrelevant to financial inclusion" ,"Its focus on low-cost transactions, phone number mapping, and stablecoins directly addresses barriers to traditional financial systems" ,"Mobile-first only benefits developed regions" ,"Financial inclusion is not a goal for Celo" ], "answer": "Its focus on low-cost transactions, phone number mapping, and stablecoins directly addresses barriers to traditional financial systems", "userAnswer": "", "hash": "c3c4c5c6c7c8f1c2"},
            { "id": "3", "explanation": "", "question": "How does Celo's governance model aim to balance decentralization with efficient decision-making?", "options": ["By having a single centralized authority make all decisions" ,"Through a combination of on-chain voting by CELO holders and a foundation/community-led proposal process" ,"Decentralization is prioritized over efficiency" ,"Efficiency is prioritized over decentralization" ], "answer": "Through a combination of on-chain voting by CELO holders and a foundation/community-led proposal process", "userAnswer": "", "hash": "c4c5c6c7c8f1c2c3"},
            { "id": "4", "explanation": "", "question": "Examine the role of the Celo Foundation and cLabs in the ongoing development and growth of the Celo ecosystem.", "options": ["They are purely advisory bodies" ,"They play crucial roles in ecosystem development, grants, partnerships, and core protocol contributions" ,"They have no impact on Celo's development" ,"They are solely responsible for marketing" ], "answer": "They play crucial roles in ecosystem development, grants, partnerships, and core protocol contributions", "userAnswer": "", "hash": "c5c6c7c8f1c2c3c4"},
            { "id": "5", "explanation": "", "question": "Discuss the trade-offs and benefits of Celo's choice to use 'account abstraction' for simpler user interactions.", "options": ["Account abstraction complicates user interactions" ,"Benefits include easier onboarding and gas payment flexibility; trade-offs might involve increased smart contract complexity" ,"There are no benefits to account abstraction" ,"Account abstraction is only for developers" ], "answer": "Benefits include easier onboarding and gas payment flexibility; trade-offs might involve increased smart contract complexity", "userAnswer": "", "hash": "c6c7c8f1c2c3c4c5"},
            { "id": "6", "explanation": "", "question": "How does Celo's approach to transaction fees contribute to its goal of accessibility?", "options": ["High fees promote accessibility" ,"Allowing gas payment in stablecoins and aiming for low, predictable fees makes transactions affordable for wider audiences" ,"Transaction fees are not a factor in accessibility" ,"Fees are only paid in CELO" ], "answer": "Allowing gas payment in stablecoins and aiming for low, predictable fees makes transactions affordable for wider audiences", "userAnswer": "", "hash": "c7c8f1c2c3c4c5c6"},
            { "id": "7", "explanation": "", "question": "What is the potential impact of Celo's proposed move to an Ethereum Layer 2 solution?", "options": ["It will make Celo less decentralized" ,"It could enhance security, leverage Ethereum's network effects, and improve scalability for Celo's dApps" ,"It will make Celo a separate, incompatible blockchain" ,"It has no significant impact" ], "answer": "It could enhance security, leverage Ethereum's network effects, and improve scalability for Celo's dApps", "userAnswer": "", "hash": "c8f1c2c3c4c5c6c7"},
            { "id": "8", "explanation": "", "question": "Critically assess Celo's strategy for attracting and retaining developers within its ecosystem.", "options": ["Celo has no strategy for developers" ,"Through EVM compatibility, developer grants, comprehensive documentation, and a supportive community" ,"Only by offering high token rewards" ,"By making development very complex" ], "answer": "Through EVM compatibility, developer grants, comprehensive documentation, and a supportive community", "userAnswer": "", "hash": "c8f1c2c3c4c5c6c7d"},
            { "id": "9", "explanation": "", "question": "How does Celo's focus on 'Regenerative Finance' (ReFi) align with its broader mission?", "options": ["ReFi is unrelated to Celo's mission" ,"ReFi aligns with Celo's mission to create an inclusive and prosperous financial system by addressing climate change and promoting sustainable economic models" ,"ReFi is purely a marketing term" ,"Celo only focuses on traditional finance" ], "answer": "ReFi aligns with Celo's mission to create an inclusive and prosperous financial system by addressing climate change and promoting sustainable economic models", "userAnswer": "", "hash": "c8f1c2c3c4c5c6c7e"}
          ]
        }
      ]
    },
    {
      "category": "self-protocol",
      "id": "10",
      "description": "Test your knowledge of the Self protocol. You will get questions that are tailored to test your understanding of the protocol",
      "levels": [
        {
          "difficulty":"easy",
          "id": "30",
          "questions":[
            { "id": "0", "explanation": "", "question": "What is the primary function of the Self-Protocol SDK?", "options": ["To develop mobile games" ,"To help developers integrate decentralized identity into their applications" ,"To build traditional web applications" ,"To manage cryptocurrency portfolios" ], "answer": "To help developers integrate decentralized identity into their applications", "userAnswer": "", "hash": "s1s2s3s4s5s6s7s8"},
            { "id": "1", "explanation": "", "question": "Which core concept does Self-Protocol focus on for users?", "options": ["Centralized data storage" ,"Self-sovereign identity (SSI)" ,"Anonymous Browse" ,"Social media networking" ], "answer": "Self-sovereign identity (SSI)", "userAnswer": "", "hash": "s2s3s4s5s6s7s8s9"},
            { "id": "2", "explanation": "", "question": "What does SSI stand for in the context of Self-Protocol?", "options": ["Smart System Integration" ,"Self-Sustaining Infrastructure" ,"Self-Sovereign Identity" ,"Secure Server Interface" ], "answer": "Self-Sovereign Identity", "userAnswer": "", "hash": "s3s4s5s6s7s8s9s1"},
            { "id": "3", "explanation": "", "question": "Does the Self-Protocol SDK aim to remove intermediaries in identity management?", "options": ["No, it adds more intermediaries" ,"Yes, by giving users control over their data" ,"Only for specific use cases" ,"It is not concerned with intermediaries" ], "answer": "Yes, by giving users control over their data", "userAnswer": "", "hash": "s4s5s6s7s8s9s1s2"},
            { "id": "4", "explanation": "", "question": "What kind of data can users control with Self-Protocol?", "options": ["Only financial data" ,"Any digital identity attributes they choose to share" ,"Only public social media profiles" ,"Strictly limited personal information" ], "answer": "Any digital identity attributes they choose to share", "userAnswer": "", "hash": "s5s6s7s8s9s1s2s3"},
            { "id": "5", "explanation": "", "question": "Is the Self-Protocol SDK typically used for Web2 or Web3 applications?", "options": ["Exclusively Web2" ,"Exclusively Web3" ,"Primarily Web3, but can be integrated with Web2 systems" ,"Neither" ], "answer": "Primarily Web3, but can be integrated with Web2 systems", "userAnswer": "", "hash": "s6s7s8s9s1s2s3s4"},
            { "id": "6", "explanation": "", "question": "What is a 'Verifiable Credential' in the context of decentralized identity?", "options": ["A username and password combination" ,"A digital certificate issued by a central authority" ,"A tamper-proof digital record of an attribute about a user, issued by an issuer" ,"A physical ID card" ], "answer": "A tamper-proof digital record of an attribute about a user, issued by an issuer", "userAnswer": "", "hash": "s7s8s9s1s2s3s4s5"},
            { "id": "7", "explanation": "", "question": "Does Self-Protocol aim to reduce the need for multiple logins?", "options": ["No, it encourages more logins" ,"Yes, by providing a unified identity layer" ,"Only for specific websites" ,"It is not related to logins" ], "answer": "Yes, by providing a unified identity layer", "userAnswer": "", "hash": "s8s9s1s2s3s4s5s6"},
            { "id": "8", "explanation": "", "question": "What is a 'DID' in the Self-Protocol ecosystem?", "options": ["Decentralized Internet Domain" ,"Digital Identification Document" ,"Decentralized Identifier" ,"Distributed Identity Directory" ], "answer": "Decentralized Identifier", "userAnswer": "", "hash": "s9s1s2s3s4s5s6s7"},
            { "id": "9", "explanation": "", "question": "Which key benefit does Self-Protocol offer to users regarding their data?", "options": ["Complete anonymity at all times" ,"The ability to monetize all their personal data" ,"Greater control and privacy over their personal information" ,"Faster data processing speeds" ], "answer": "Greater control and privacy over their personal information", "userAnswer": "", "hash": "s1s2s3s4s5s6s7s8e"}
          ]
        },
        {
          "difficulty":"medium",
          "id": "31",
          "questions":[
            { "id": "0", "explanation": "", "question": "Explain the interaction between a 'Holder', 'Issuer', and 'Verifier' in the Self-Protocol identity model.", "options": ["Holder is the issuer, Issuer is the verifier, Verifier is the holder" ,"Holder possesses the credential, Issuer issues it, Verifier verifies it" ,"They are all interchangeable roles" ,"Holder provides the service, Issuer manages the service, Verifier pays for the service" ], "answer": "Holder possesses the credential, Issuer issues it, Verifier verifies it", "userAnswer": "", "hash": "s1s2s3s4s5s6s7s8f"},
            { "id": "1", "explanation": "", "question": "How does the Self-Protocol SDK facilitate privacy-preserving data sharing?", "options": ["By sharing all data publicly" ,"Through selective disclosure and cryptographic proofs (e.g., zero-knowledge proofs)" ,"By encrypting data on a central server" ,"It does not focus on privacy" ], "answer": "Through selective disclosure and cryptographic proofs (e.g., zero-knowledge proofs)", "userAnswer": "", "hash": "s2s3s4s5s6s7s8f1"},
            { "id": "2", "explanation": "", "question": "What are the advantages of using Decentralized Identifiers (DIDs) over traditional identifiers?", "options": ["DIDs are less secure" ,"DIDs are more censorship-resistant, globally resolvable, and user-controlled" ,"DIDs are only for offline use" ,"There are no significant advantages" ], "answer": "DIDs are more censorship-resistant, globally resolvable, and user-controlled", "userAnswer": "", "hash": "s3s4s5s6s7s8f1s2"},
            { "id": "3", "explanation": "", "question": "How does the Self-Protocol SDK leverage blockchain technology?", "options": ["It doesn't use blockchain at all" ,"To anchor DIDs and Verifiable Credential schemas, providing immutability and decentralization" ,"To store all personal user data on-chain" ,"Only for transaction processing" ], "answer": "To anchor DIDs and Verifiable Credential schemas, providing immutability and decentralization", "userAnswer": "", "hash": "s4s5s6s7s8f1s2s3"},
            { "id": "4", "explanation": "", "question": "What is the concept of 'progressive disclosure' in Self-Protocol?", "options": ["Revealing all user data at once" ,"Only disclosing the minimum necessary information to a verifier" ,"Gradually releasing new features of the protocol" ,"A method of data compression" ], "answer": "Only disclosing the minimum necessary information to a verifier", "userAnswer": "", "hash": "s5s6s7s8f1s2s3s4"},
            { "id": "5", "explanation": "", "question": "What are some potential use cases for the Self-Protocol SDK?", "options": ["Building simple calculators" ,"Decentralized logins, KYC/AML, digital attestations, and secure data sharing" ,"Creating physical products" ,"Managing traditional banking accounts" ], "answer": "Decentralized logins, KYC/AML, digital attestations, and secure data sharing", "userAnswer": "", "hash": "s6s7s8f1s2s3s4s5"},
            { "id": "6", "explanation": "", "question": "How does Self-Protocol aim to reduce fraud and identity theft?", "options": ["By collecting more personal data" ,"By empowering users with control over their identity and enabling cryptographically secure verifications" ,"By using traditional password systems" ,"It has no impact on fraud" ], "answer": "By empowering users with control over their identity and enabling cryptographically secure verifications", "userAnswer": "", "hash": "s7s8f1s2s3s4s5s6"},
            { "id": "7", "explanation": "", "question": "What kind of developers would primarily use the Self-Protocol SDK?", "options": ["Game developers" ,"Web3 developers, dApp builders, and traditional app developers seeking decentralized identity solutions" ,"Hardware engineers" ,"Financial analysts" ], "answer": "Web3 developers, dApp builders, and traditional app developers seeking decentralized identity solutions", "userAnswer": "", "hash": "s8f1s2s3s4s5s6s7"},
            { "id": "8", "explanation": "", "question": "What is the importance of 'revocation' in a decentralized identity system like Self-Protocol?", "options": ["It allows anyone to delete a user's identity" ,"It allows issuers to invalidate previously issued credentials when necessary" ,"It's a feature for resetting passwords" ,"Revocation is not necessary in decentralized systems" ], "answer": "It allows issuers to invalidate previously issued credentials when necessary", "userAnswer": "", "hash": "s9f1s2s3s4s5s6s7"},
            { "id": "9", "explanation": "", "question": "How does Self-Protocol differ from traditional centralized identity providers (like Google or Facebook login)?", "options": ["It's slower and less secure" ,"It gives users centralized control over their data, unlike traditional providers" ,"It gives users decentralized control and eliminates reliance on single points of failure" ,"There is no fundamental difference" ], "answer": "It gives users decentralized control and eliminates reliance on single points of failure", "userAnswer": "", "hash": "s1s2s3s4s5s6s7s8e2"}
          ]
        },
        {
          "difficulty":"hard",
          "id": "32",
          "questions":[
            { "id": "0", "explanation": "", "question": "Discuss the cryptographic primitives used by Self-Protocol to ensure the security and privacy of identity data.", "options": ["Only simple encryption algorithms" ,"Public-key cryptography, digital signatures, and potentially zero-knowledge proofs for selective disclosure" ,"Proprietary, undisclosed algorithms" ,"No cryptographic primitives are used" ], "answer": "Public-key cryptography, digital signatures, and potentially zero-knowledge proofs for selective disclosure", "userAnswer": "", "hash": "s1s2s3s4s5s6s7s8h"},
            { "id": "1", "explanation": "", "question": "Analyze the scalability challenges and solutions for decentralized identity systems like Self-Protocol.", "options": ["Scalability is not an issue for decentralized identity" ,"Challenges include on-chain storage and transaction costs; solutions involve off-chain data storage and layer-2 solutions" ,"Only centralized solutions can scale" ,"Scalability is irrelevant to user experience" ], "answer": "Challenges include on-chain storage and transaction costs; solutions involve off-chain data storage and layer-2 solutions", "userAnswer": "", "hash": "s2s3s4s5s6s7s8h1"},
            { "id": "2", "explanation": "", "question": "How does Self-Protocol address the 'recoverability' of DIDs and associated credentials in case of key loss?", "options": ["There is no recovery mechanism" ,"Through various key recovery mechanisms, such as social recovery or multi-signature schemes" ,"By relying on a central authority for key backup" ,"By requiring users to memorize long passwords" ], "answer": "Through various key recovery mechanisms, such as social recovery or multi-signature schemes", "userAnswer": "", "hash": "s3s4s5s6s7s8h1s2"},
            { "id": "3", "explanation": "", "question": "Evaluate the regulatory implications for decentralized identity solutions, especially concerning data protection laws (e.g., GDPR).", "options": ["Decentralized identity is exempt from all regulations" ,"SSI can enable compliance by giving users control, but legal clarity is still evolving regarding data custodianship and liability" ,"Data protection laws hinder decentralized identity" ,"Only national laws apply, not international ones" ], "answer": "SSI can enable compliance by giving users control, but legal clarity is still evolving regarding data custodianship and liability", "userAnswer": "", "hash": "s4s5s6s7s8h1s2s3"},
            { "id": "4", "explanation": "", "question": "Discuss the potential for Self-Protocol to foster new business models and applications beyond current Web2 paradigms.", "options": ["It will only replicate existing Web2 models" ,"By enabling new forms of data exchange, trustless interactions, and user-centric services, potentially leading to decentralized marketplaces and reputation systems" ,"It has no impact on business models" ,"It's too niche for broad application" ], "answer": "By enabling new forms of data exchange, trustless interactions, and user-centric services, potentially leading to decentralized marketplaces and reputation systems", "userAnswer": "", "hash": "s5s6s7s8h1s2s3s4"},
            { "id": "5", "explanation": "", "question": "How does Self-Protocol's approach to identity contribute to the broader vision of Web3?", "options": ["It has no relation to Web3" ,"By establishing a foundational layer for self-sovereign digital identities, empowering users in decentralized applications and economies" ,"It only focuses on Web2 principles" ,"Web3 does not require identity solutions" ], "answer": "By establishing a foundational layer for self-sovereign digital identities, empowering users in decentralized applications and economies", "userAnswer": "", "hash": "s6s7s8h1s2s3s4s5"},
            { "id": "6", "explanation": "", "question": "What are the technical considerations for integrating the Self-Protocol SDK into existing legacy systems?", "options": ["Integration is impossible with legacy systems" ,"Challenges include data mapping, API integration, and ensuring compatibility with existing user flows, but the SDK aims for flexible integration" ,"Only greenfield development is supported" ,"No specific technical considerations" ], "answer": "Challenges include data mapping, API integration, and ensuring compatibility with existing user flows, but the SDK aims for flexible integration", "userAnswer": "", "hash": "s7s8h1s2s3s4s5s6"},
            { "id": "7", "explanation": "", "question": "Discuss the role of 'trust frameworks' and 'governance' in the widespread adoption of decentralized identity.", "options": ["Trust frameworks are not needed for decentralized systems" ,"Clear trust frameworks and robust governance models are essential to establish confidence and ensure interoperability among different SSI implementations" ,"Decentralized identity relies solely on individual trust" ,"Governance hinders adoption" ], "answer": "Clear trust frameworks and robust governance models are essential to establish confidence and ensure interoperability among different SSI implementations", "userAnswer": "", "hash": "s8h1s2s3s4s5s6s7"},
            { "id": "8", "explanation": "", "question": "How might the Self-Protocol SDK contribute to mitigating data breaches in an enterprise context?", "options": ["It would increase the risk of data breaches" ,"By reducing the amount of sensitive user data stored by enterprises and distributing control, thereby limiting attack surfaces" ,"It's only for individual users, not enterprises" ,"Data breaches are inevitable, regardless of the system" ], "answer": "By reducing the amount of sensitive user data stored by enterprises and distributing control, thereby limiting attack surfaces", "userAnswer": "", "hash": "s9h1s2s3s4s5s6s7"},
            { "id": "9", "explanation": "", "question": "Explore the ethical implications of self-sovereign identity, particularly regarding anonymity vs. accountability.", "options": ["SSI ensures complete anonymity without any accountability" ,"SSI can enable pseudonymous interactions but also allows for selective disclosure for accountability when required, presenting a complex ethical balance" ,"Ethics are not a concern for decentralized identity" ,"Anonymity and accountability are mutually exclusive" ], "answer": "SSI can enable pseudonymous interactions but also allows for selective disclosure for accountability when required, presenting a complex ethical balance", "userAnswer": "", "hash": "s1s2s3s4s5s6s7s8h2"}
          ]
        }
      ]
    },
    {
      "category": "cryptocurrency",
      "id": "11",
      "description": "Test your knowledge across various topics in Cryptocurrency. You will get questions that are tailored to test your understanding of the subject",
      "levels": [
        {
          "difficulty":"easy",
          "id": "33",
          "questions":[
            { "id": "0", "explanation": "", "question": "What is the most well-known cryptocurrency?", "options": ["Ethereum" ,"Litecoin" ,"Bitcoin" ,"Ripple" ], "answer": "Bitcoin", "userAnswer": "", "hash": "cc1c2c3c4c5c6c7c"},
            { "id": "1", "explanation": "", "question": "What technology underlies most cryptocurrencies?", "options": ["Centralized Servers" ,"Relational Databases" ,"Blockchain" ,"Cloud Computing" ], "answer": "Blockchain", "userAnswer": "", "hash": "cc2c3c4c5c6c7c8c"},
            { "id": "2", "explanation": "", "question": "What is a 'wallet' in the context of cryptocurrency?", "options": ["A physical billfold" ,"A software or hardware device to store private keys for accessing cryptocurrency" ,"A bank account for crypto" ,"A place to buy cryptocurrency" ], "answer": "A software or hardware device to store private keys for accessing cryptocurrency", "userAnswer": "", "hash": "cc3c4c5c6c7c8c9c"},
            { "id": "3", "explanation": "", "question": "What is 'mining' in cryptocurrency?", "options": ["Digging for gold" ,"The process of verifying and adding new transactions to the blockchain" ,"Buying cryptocurrency on an exchange" ,"Selling cryptocurrency for profit" ], "answer": "The process of verifying and adding new transactions to the blockchain", "userAnswer": "", "hash": "cc4c5c6c7c8c9c1c"},
            { "id": "4", "explanation": "", "question": "What does 'decentralized' mean in cryptocurrency?", "options": ["It is controlled by a central bank" ,"It operates without a central authority" ,"It has many different currencies" ,"It is only available in specific regions" ], "answer": "It operates without a central authority", "userAnswer": "", "hash": "cc5c6c7c8c9c1c2c"},
            { "id": "5", "explanation": "", "question": "What is a 'fiat' currency?", "options": ["A cryptocurrency" ,"Government-issued currency not backed by a physical commodity" ,"A form of digital gold" ,"A currency used in online games" ], "answer": "Government-issued currency not backed by a physical commodity", "userAnswer": "", "hash": "cc6c7c8c9c1c2c3c"},
            { "id": "6", "explanation": "", "question": "What is 'volatility' in the context of cryptocurrency prices?", "options": ["Prices remain stable" ,"Rapid and unpredictable price changes" ,"Slow and steady price increases" ,"Prices only go up" ], "answer": "Rapid and unpredictable price changes", "userAnswer": "", "hash": "cc7c8c9c1c2c3c4c"},
            { "id": "7", "explanation": "", "question": "What is a 'private key' for a cryptocurrency wallet?", "options": ["A public address for sending crypto" ,"A secret alphanumeric code that allows access to your cryptocurrency" ,"Your email address" ,"A password for an exchange account" ], "answer": "A secret alphanumeric code that allows access to your cryptocurrency", "userAnswer": "", "hash": "cc8c9c1c2c3c4c5c"},
            { "id": "8", "explanation": "", "question": "Which of these is an 'altcoin'?", "options": ["Bitcoin" ,"Ethereum" ,"US Dollar" ,"Gold" ], "answer": "Ethereum", "userAnswer": "", "hash": "cc9c1c2c3c4c5c6c"},
            { "id": "9", "explanation": "", "question": "What is a 'block' in a blockchain?", "options": ["A type of barrier" ,"A collection of transactions grouped together and added to the blockchain" ,"A single cryptocurrency unit" ,"A software program" ], "answer": "A collection of transactions grouped together and added to the blockchain", "userAnswer": "", "hash": "cc1c2c3c4c5c6c7ce"}
          ]
        },
        {
          "difficulty":"medium",
          "id": "34",
          "questions":[
            { "id": "0", "explanation": "", "question": "Explain the concept of 'Proof of Work' (PoW) in cryptocurrency.", "options": ["A method to prove identity" ,"A consensus mechanism where miners solve complex mathematical problems to validate transactions" ,"A way to earn interest on crypto" ,"A system for tracking working hours" ], "answer": "A consensus mechanism where miners solve complex mathematical problems to validate transactions", "userAnswer": "", "hash": "cc1c2c3c4c5c6c7cf"},
            { "id": "1", "explanation": "", "question": "What is the primary difference between a 'hot wallet' and a 'cold wallet'?", "options": ["Temperature of the wallet" ,"Hot wallets are online and cold wallets are offline" ,"Hot wallets store more crypto than cold wallets" ,"Cold wallets are only for Bitcoin" ], "answer": "Hot wallets are online and cold wallets are offline", "userAnswer": "", "hash": "cc2c3c4c5c6c7cf1"},
            { "id": "2", "explanation": "", "question": "How does 'halving' affect the supply and price of cryptocurrencies like Bitcoin?", "options": ["It doubles the mining reward, increasing supply" ,"It cuts the mining reward in half, reducing the rate of new supply and potentially increasing price due to scarcity" ,"It has no effect on supply or price" ,"It only affects transaction fees" ], "answer": "It cuts the mining reward in half, reducing the rate of new supply and potentially increasing price due to scarcity", "userAnswer": "", "hash": "cc3c4c5c6c7cf1c2"},
            { "id": "3", "explanation": "", "question": "What is the purpose of a 'smart contract' on a blockchain?", "options": ["To make legal agreements off-chain" ,"Self-executing contracts with the terms of the agreement directly written into code" ,"To manually manage financial transactions" ,"To provide legal advice" ], "answer": "Self-executing contracts with the terms of the agreement directly written into code", "userAnswer": "", "hash": "cc4c5c6c7cf1c2c3"},
            { "id": "4", "explanation": "", "question": "Describe 'Proof of Stake' (PoS) as a consensus mechanism.", "options": ["Miners solve complex puzzles" ,"Validators are chosen based on the amount of cryptocurrency they hold and are willing to 'stake' as collateral" ,"It's a system for tracking physical assets" ,"It requires no energy consumption" ], "answer": "Validators are chosen based on the amount of cryptocurrency they hold and are willing to 'stake' as collateral", "userAnswer": "", "hash": "cc5c6c7cf1c2c3c4"},
            { "id": "5", "explanation": "", "question": "What is an 'ICO' (Initial Coin Offering)?", "options": ["A type of traditional stock offering" ,"A fundraising method where new cryptocurrency projects sell their tokens to early investors" ,"A government-regulated investment scheme" ,"A form of digital currency exchange" ], "answer": "A fundraising method where new cryptocurrency projects sell their tokens to early investors", "userAnswer": "", "hash": "cc6c7cf1c2c3c4c5"},
            { "id": "6", "explanation": "", "question": "What is the '51% attack' vulnerability in a Proof of Work blockchain?", "options": ["When 51% of users agree on a transaction" ,"When a single entity or group controls more than 50% of the network's mining hash rate, potentially allowing them to manipulate the blockchain" ,"An attack that only affects 51% of the network" ,"A common software bug" ], "answer": "When a single entity or group controls more than 50% of the network's mining hash rate, potentially allowing them to manipulate the blockchain", "userAnswer": "", "hash": "cc7cf1c2c3c4c5c6"},
            { "id": "7", "explanation": "", "question": "How do 'forks' occur in a blockchain, and what are the two main types?", "options": ["Forks are only for repairing bugs" ,"When a blockchain splits due to software upgrades or disagreements; hard forks (incompatible) and soft forks (compatible)" ,"Forks are a type of security breach" ,"Forks only happen in centralized systems" ], "answer": "When a blockchain splits due to software upgrades or disagreements; hard forks (incompatible) and soft forks (compatible)", "userAnswer": "", "hash": "cc8cf1c2c3c4c5c6c"},
            { "id": "8", "explanation": "", "question": "What is the concept of 'tokenomics' in cryptocurrency?", "options": ["The study of token art" ,"The economic model and incentive structure of a cryptocurrency or blockchain project" ,"The price of a token over time" ,"The history of cryptocurrency" ], "answer": "The economic model and incentive structure of a cryptocurrency or blockchain project", "userAnswer": "", "hash": "cc9cf1c2c3c4c5c6c7"},
            { "id": "9", "explanation": "", "question": "What is the 'Lightning Network' primarily designed to do for Bitcoin?", "options": ["Make Bitcoin mining easier" ,"Improve Bitcoin's scalability and transaction speed for small payments" ,"Create a new cryptocurrency" ,"Enhance Bitcoin's security features" ], "answer": "Improve Bitcoin's scalability and transaction speed for small payments", "userAnswer": "", "hash": "cc1c2c3c4c5c6c7cf2"}
          ]
        },
        {
          "difficulty":"hard",
          "id": "35",
          "questions":[
            { "id": "0", "explanation": "", "question": "Analyze the 'blockchain trilemma' (decentralization, security, scalability) and how different cryptocurrencies attempt to solve it.", "options": ["The trilemma states that a blockchain can achieve all three simultaneously without compromise" ,"It suggests blockchains can only optimize two of the three properties; different projects prioritize different aspects (e.g., Bitcoin for security/decentralization, others for scalability)" ,"The trilemma is a myth in blockchain technology" ,"Only centralized systems face this trilemma" ], "answer": "It suggests blockchains can only optimize two of the three properties; different projects prioritize different aspects (e.g., Bitcoin for security/decentralization, others for scalability)", "userAnswer": "", "hash": "cc1c2c3c4c5c6c7ch"},
            { "id": "1", "explanation": "", "question": "Discuss the various mechanisms used by stablecoins to maintain their peg, including algorithmic, fiat-backed, and crypto-backed.", "options": ["All stablecoins use the same mechanism" ,"Mechanisms include reserves of fiat currency, over-collateralization with crypto, or complex algorithms that adjust supply based on market demand" ,"Stablecoins don't need mechanisms to maintain their peg" ,"Only fiat-backed stablecoins are truly stable" ], "answer": "Mechanisms include reserves of fiat currency, over-collateralization with crypto, or complex algorithms that adjust supply based on market demand", "userAnswer": "", "hash": "cc2c3c4c5c6c7ch1"},
            { "id": "2", "explanation": "", "question": "Evaluate the economic and environmental implications of Proof of Work vs. Proof of Stake consensus mechanisms.", "options": ["Both mechanisms have identical implications" ,"PoW is energy-intensive but offers robust security; PoS is more energy-efficient and scalable but raises concerns about centralization of power based on wealth" ,"Environmental impact is not a concern for cryptocurrencies" ,"Only economic implications are relevant" ], "answer": "PoW is energy-intensive but offers robust security; PoS is more energy-efficient and scalable but raises concerns about centralization of power based on wealth", "userAnswer": "", "hash": "cc3c4c5c6c7ch1c2"},
            { "id": "3", "explanation": "", "question": "How do 'Zero-Knowledge Proofs' (ZKPs) contribute to privacy and scalability in blockchain networks?", "options": ["ZKPs make transactions slower" ,"ZKPs allow one party to prove a statement is true to another without revealing any additional information, enhancing privacy and enabling off-chain computation for scalability" ,"ZKPs are only used for validating smart contracts" ,"ZKPs reduce security" ], "answer": "ZKPs allow one party to prove a statement is true to another without revealing any additional information, enhancing privacy and enabling off-chain computation for scalability", "userAnswer": "", "hash": "cc4c5c6c7ch1c2c3"},
            { "id": "4", "explanation": "", "question": "Discuss the potential for 'quantum computing' to impact existing cryptographic security in cryptocurrencies and proposed solutions.", "options": ["Quantum computing will have no impact on crypto security" ,"Quantum computers could break current cryptographic algorithms (e.g., elliptic curve cryptography); solutions involve developing 'post-quantum cryptography' for future networks" ,"Cryptographic security is unchangeable" ,"Quantum computing will make all cryptocurrencies obsolete" ], "answer": "Quantum computers could break current cryptographic algorithms (e.g., elliptic curve cryptography); solutions involve developing 'post-quantum cryptography' for future networks", "userAnswer": "", "hash": "cc5c6c7ch1c2c3c4"},
            { "id": "5", "explanation": "", "question": "Explain the concept of 'sharding' as a scalability solution for blockchain networks.", "options": ["Sharding is a method for securing private keys" ,"Sharding involves horizontally partitioning the blockchain into smaller, more manageable segments (shards) to increase transaction throughput" ,"Sharding reduces decentralization" ,"Sharding is only applicable to Proof of Work blockchains" ], "answer": "Sharding involves horizontally partitioning the blockchain into smaller, more manageable segments (shards) to increase transaction throughput", "userAnswer": "", "hash": "cc6c7ch1c2c3c4c5"},
            { "id": "6", "explanation": "", "question": "What are the legal and regulatory challenges facing the global adoption of cryptocurrencies?", "options": ["There are no legal or regulatory challenges" ,"Challenges include varying legal classifications, tax implications, consumer protection, and anti-money laundering (AML) concerns across different jurisdictions" ,"Regulations only apply to traditional finance" ,"Global adoption is hindered only by technological limitations" ], "answer": "Challenges include varying legal classifications, tax implications, consumer protection, and anti-money laundering (AML) concerns across different jurisdictions", "userAnswer": "", "hash": "cc7ch1c2c3c4c5c6"},
            { "id": "7", "explanation": "", "question": "Discuss the concept of 'interoperability' in the cryptocurrency space and its importance for the future of blockchain.", "options": ["Interoperability is not a critical aspect of cryptocurrency" ,"Interoperability refers to the ability of different blockchain networks to communicate and exchange assets/data; it's crucial for creating a more connected and efficient crypto ecosystem" ,"Interoperability only applies to centralized exchanges" ,"All blockchains are inherently interoperable" ], "answer": "Interoperability refers to the ability of different blockchain networks to communicate and exchange assets/data; it's crucial for creating a more connected and efficient crypto ecosystem", "userAnswer": "", "hash": "cc8ch1c2c3c4c5c6c"},
            { "id": "8", "explanation": "", "question": "Explain the potential impact of 'Central Bank Digital Currencies' (CBDCs) on the cryptocurrency landscape.", "options": ["CBDCs will replace all cryptocurrencies" ,"CBDCs could offer some benefits of digital currency but are centralized, potentially competing with stablecoins while pushing for greater regulatory clarity in the broader crypto market" ,"CBDCs will have no impact on cryptocurrencies" ,"CBDCs are a form of decentralized cryptocurrency" ], "answer": "CBDCs could offer some benefits of digital currency but are centralized, potentially competing with stablecoins while pushing for greater regulatory clarity in the broader crypto market", "userAnswer": "", "hash": "cc9ch1c2c3c4c5c6c7"},
            { "id": "9", "explanation": "", "question": "Critically assess the 'store of value' narrative for Bitcoin and its long-term viability against traditional assets like gold.", "options": ["Bitcoin is unequivocally a better store of value than gold" ,"Bitcoin's digital scarcity and decentralization lend it store-of-value properties, but its volatility and shorter history make it distinct from gold; both have pros and cons as inflation hedges" ,"Bitcoin has no store of value properties" ,"Gold is irrelevant as a store of value in the digital age" ], "answer": "Bitcoin's digital scarcity and decentralization lend it store-of-value properties, but its volatility and shorter history make it distinct from gold; both have pros and cons as inflation hedges", "userAnswer": "", "hash": "cc1c2c3c4c5c6c7ch2"}
          ]
        }
      ]
    },
    {
      "category": "ethersjs",
      "id": "12",
      "description": "Test your knowledge across various topics in EthersJS library. You will get questions that are tailored to test your understanding of the subject",
      "levels": [
        {
          "difficulty":"easy",
          "id": "36",
          "questions":[
            { "id": "0", "explanation": "", "question": "What is Ethers.js primarily used for?", "options": ["Building front-end UIs","Writing smart contracts","Interacting with the Ethereum blockchain","Running backend databases"], "answer": "Interacting with the Ethereum blockchain", "userAnswer": "", "hash": "708dbdcb5895312d9339b4c47fc32b76c02704f68cf4b17ff2761f9c71f00cc5"},
            { "id": "1", "explanation": "", "question": "Which Ethers.js class is commonly used to connect to Ethereum networks?", "options": ["Connection","Signer","Provider","Wallet"], "answer": "Provider", "userAnswer": "", "hash": "588a735173191798b2c3e77b163d95cfd369e6f3894fa6741f5fcb4a42108846"},
            { "id": "2", "explanation": "", "question": "Which method is used in Ethers.js to get the balance of an address?", "options": ["getAccountBalance()","getBalance()","balanceOf()","getEther()"], "answer": "getBalance()", "userAnswer": "", "hash": "23635c8504f2ff74c1a610d176fa518ec45820c396fe20255d56c59a1b157c30"},
            { "id": "3", "explanation": "", "question": "Which network does Ethers.js connect to by default?", "options": ["Mainnet","Ropsten","Goerli","None"], "answer": "None", "userAnswer": "", "hash": "d0285f37453c4d0f55cbebec2ff0e267c02e9ae5cf51f91b23c0f9e6b933e7eb"},
            { "id": "4", "explanation": "", "question": "What is a `Signer` in Ethers.js?", "options": ["A class for signing HTTP requests","A private key holder used to sign transactions","A connection to a wallet UI","A validator node"], "answer": "A private key holder used to sign transactions", "userAnswer": "", "hash": "150afdb49ac321ea9f5ef37ee587b61ae4249464f4151a70e373e23d3bb1da5c"},
            { "id": "5", "explanation": "", "question": "Which function is used to format a balance from wei to ether in Ethers.js?", "options": ["formatEther()","parseEther()","toEther()","convertToEther()"], "answer": "formatEther()", "userAnswer": "", "hash": "c42276a5b70b43a3a4f6588efb1aa259cc482e7df13b3ff934ec9a5dcf353e1e"},
            { "id": "6", "explanation": "", "question": "Which Ethers.js object is used to deploy a smart contract?", "options": ["Deployer","ContractFactory","ContractManager","ContractRunner"], "answer": "ContractFactory", "userAnswer": "", "hash": "03ff3ff2f0d1e8b83ddc312afbc0a760ae70990ae6ef4e5a6eecead1d30d7bb4"},
            { "id": "7", "explanation": "", "question": "How do you connect a provider to a specific network in Ethers.js?", "options": ["new Provider('ropsten')","ethers.getProvider('ropsten')","ethers.providers.getDefaultProvider('ropsten')","connectTo('ropsten')"], "answer": "ethers.providers.getDefaultProvider('ropsten')", "userAnswer": "", "hash": "1802aa63032763db89de38c6fbd8268a1d4eb9d6edb40cdbdf6078b14cb6e9ef"},
            { "id": "8", "explanation": "", "question": "Which method allows reading a value from a smart contract in Ethers.js?", "options": ["send()","read()","call()","query()"], "answer": "call()", "userAnswer": "", "hash": "ae68ff7c89a02edbb2b662aa29722505d5ef9c12fd875c8ac0d5d7aab66a262b"},
            { "id": "9", "explanation": "", "question": "Which Ethers.js method is used to create a new random wallet?", "options": ["Wallet.create()","new RandomWallet()","Wallet.fromMnemonic()","Wallet.createRandom()"], "answer": "Wallet.createRandom()", "userAnswer": "", "hash": "fe291ae1de5df8728a6d44c6b9bc754f1914e3d337aa372d38b682f03ac3883b"}
          ]
        },
        {
          "difficulty":"medium",
          "id": "37",
          "questions":[
            { "id": "0", "explanation": "", "question": "What is the purpose of `ethers.utils.parseEther('1.0')`?", "options": ["Converts 1 Ether to Wei","Converts 1 Wei to Ether","Formats 1 Ether as a string","Parses 1 transaction object"], "answer": "Converts 1 Ether to Wei", "userAnswer": "", "hash": "1d1494d42006794b7597785e78e63c1009503110a49f083c0645ff56f8e1b73f"},
            { "id": "1", "explanation": "", "question": "Which method is used to send a transaction in Ethers.js?", "options": ["sendTransaction()","transferTransaction()","broadcast()","submitTx()"], "answer": "sendTransaction()", "userAnswer": "", "hash": "f4467cce019a661114d76ea233d29e5f5412e674b9f3c8c014b7ac87e8a9143c"},
            { "id": "2", "explanation": "", "question": "What is required to sign a transaction using Ethers.js?", "options": ["A Contract instance","An ABI object","A Signer with a private key","A WalletConnect QR code"], "answer": "A Signer with a private key", "userAnswer": "", "hash": "fc9e11504aaf6860710dbd0f79d9e9ab2500f29e8a0a339f4a3d4ae20d4167c6"},
            { "id": "3", "explanation": "", "question": "What is returned by `provider.getTransactionReceipt(txHash)`?", "options": ["The ABI of the contract","The signer address","The receipt object of a mined transaction","The transaction fee"], "answer": "The receipt object of a mined transaction", "userAnswer": "", "hash": "0bc9e2275f9fea69a35b98f813888a1c147451ba48f8a61205006b8a105cd949"},
            { "id": "4", "explanation": "", "question": "How can you listen to events emitted from a smart contract using Ethers.js?", "options": ["contract.listenEvent()","provider.watch()","contract.on('EventName', callback)","ethers.listen()"], "answer": "contract.on('EventName', callback)", "userAnswer": "", "hash": "59bd4fe2642be4a8280d73c75d7ef071ffcdaf1128c39e6f4db15bf5c32aaca5"},
            { "id": "5", "explanation": "", "question": "Which provider is used in Ethers.js for read-only operations?", "options": ["Wallet","Signer","JsonRpcProvider","EIPProvider"], "answer": "JsonRpcProvider", "userAnswer": "", "hash": "80ee6ebf8361f26dc3ebb89d87ed67f777d97b5e7975b0e7efd20deda53bd3fb"},
            { "id": "6", "explanation": "", "question": "What is an ABI in the context of Ethers.js?", "options": ["Address Block Identifier","Application Binary Interface","Automated Blockchain Index","Asset Balance Integration"], "answer": "Application Binary Interface", "userAnswer": "", "hash": "75a349352b5f669eaa6da6dfd988a4ca0cc8d83a50a1a2a231b09084de54f080"},
            { "id": "7", "explanation": "", "question": "How do you connect a Signer to a smart contract instance in Ethers.js?", "options": ["new Contract(signer)","contract.connect(signer)","signer.link(contract)","provider.attach(signer)"], "answer": "contract.connect(signer)", "userAnswer": "", "hash": "918a3bc4b21abd067d123c0eed4bffff1cd836511e932bd21358c74fcb366484"},
            { "id": "8", "explanation": "", "question": "What does `await provider.getBlockNumber()` return?", "options": ["The block hash","The total number of mined blocks","The number of blocks left to be mined","The timestamp of the latest block"], "answer": "The total number of mined blocks", "userAnswer": "", "hash": "e18f38b2c59d2319a9afd13d392038ed9698dbd228e5ec6e9956db827186b8f7"},
            { "id": "9", "explanation": "", "question": "How do you estimate gas for a transaction in Ethers.js?", "options": ["estimateTransactionGas()","ethers.gasEstimate()","provider.estimateGas()","transaction.estimate()"], "answer": "provider.estimateGas()", "userAnswer": "", "hash": "c634edb7aa99370cbfe665cd5111b923c614df1002e3565d0412ea3c3d920fd8"}
          ]
        },
        {
          "difficulty":"hard",
          "id": "38",
          "questions":[
            { "id": "0", "explanation": "", "question": "How can you override the gas price in a transaction using Ethers.js?", "options": ["Set 'gasLimit' in the contract call","Include 'gasPrice' in the transaction object","Use setGas() on the provider","Add gas value to the signer"], "answer": "Include 'gasPrice' in the transaction object", "userAnswer": "", "hash": "2d48540e1575df45b2fe73e5092b7b7c67a794ac542376c411473c0b9f6172e1"},
            { "id": "1", "explanation": "", "question": "What happens if a contract method called with `.call()` reverts?", "options": ["The function returns a fallback value","An exception is thrown","The contract is paused","The revert is ignored"], "answer": "An exception is thrown", "userAnswer": "", "hash": "252a0399be9717240bd2e39e562a6cf2b2e9cfb92fae7b55624abcbbac3a30b0"},
            { "id": "2", "explanation": "", "question": "Which Ethers.js method lets you encode a function call for manual transaction crafting?", "options": ["encodeCall()","formatFunction()","interface.encodeFunctionData()","packFunction()"], "answer": "interface.encodeFunctionData()", "userAnswer": "", "hash": "5b903ae9cb4f138801aeabad86d199086af61897a053ef62d3ebd0b09dc78ed1"},
            { "id": "3", "explanation": "", "question": "What is the purpose of `ethers.utils.solidityKeccak256()`?", "options": ["To hash arbitrary values like Solidity's keccak256","To decode keccak256 hashes","To sign typed data","To verify Merkle proofs"], "answer": "To hash arbitrary values like Solidity's keccak256", "userAnswer": "", "hash": "a00f689389b37530de9a372ae0d755c20424b1d0a1418f48a28e59be98675cfb"},
            { "id": "4", "explanation": "", "question": "What is the return type of `provider.resolveName('vitalik.eth')`?", "options": ["ENS contract address","Ethereum wallet address","ENS domain metadata","ENS registrar interface"], "answer": "Ethereum wallet address", "userAnswer": "", "hash": "7b8d818a0084984bc2813cc7689191705d2d51b573300e16f3f7ff24f200683e"},
            { "id": "5", "explanation": "", "question": "Which object represents both a signer and a provider in Ethers.js?", "options": ["Wallet","ContractFactory","JsonRpcProvider","HDNode"], "answer": "Wallet", "userAnswer": "", "hash": "250d3b2a35d9d205a3250e2de4659c0852d384964dd68b66747805c416167347"},
            { "id": "6", "explanation": "", "question": "How do you fetch logs for a specific event from a smart contract?", "options": ["contract.getEvents()","provider.getEventLogs()","provider.getLogs(filter)","contract.queryEvents()"], "answer": "provider.getLogs(filter)", "userAnswer": "", "hash": "c7d7b8e54737bc862eb3edcdb92a4d8d9e58b66e5c3fcd703c442fb747692ed1"},
            { "id": "7", "explanation": "", "question": "Which method in Ethers.js allows deriving wallets from a mnemonic phrase?", "options": ["Wallet.derive()","Wallet.fromSeed()","Wallet.fromMnemonic()","Wallet.generateFromPhrase()"], "answer": "Wallet.fromMnemonic()", "userAnswer": "", "hash": "ccc5cb5c5b2c7c517aa25c51fcd0a99a0fffa12312576a67d29c5858086c07e6"},
            { "id": "8", "explanation": "", "question": "What does the `populateTransaction` method do in Ethers.js?", "options": ["Sends the transaction immediately","Estimates gas usage of a transaction","Returns a populated transaction object for later signing","Parses the ABI for transaction types"], "answer": "Returns a populated transaction object for later signing", "userAnswer": "", "hash": "91d29da5df13db834c82bb4a6a807e3e94deb41f939c0781889d89d6a9e11ed3"},
            { "id": "9", "explanation": "", "question": "How does Ethers.js help with EIP-712 typed data signing?", "options": ["Via utils.hashTypedData()","Via signer._signTypedData()","Via encodeTypedData()","Via signEIP712Data()"], "answer": "signer._signTypedData()", "userAnswer": "", "hash": "eb88efc018dafb3c63204c74a6c6b66091f420569145e2a2495ff60cad525425"}
          ]
        }
      ]
    }
  ]
}